cset: moving following pidspec: 3010
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.214733331 seconds)
loading group "string"... done (took 0.576404771 seconds)
loading group "linalg"... done (took 6.695587756 seconds)
loading group "parallel"... done (took 0.152783233 seconds)
loading group "find"... done (took 1.171979621 seconds)
loading group "tuple"... done (took 1.689794996 seconds)
loading group "dates"... done (took 1.242593214 seconds)
loading group "micro"... done (took 0.223751391 seconds)
loading group "io"... done (took 1.021759572 seconds)
loading group "scalar"... done (took 36.331493166 seconds)
loading group "sparse"... done (took 12.045191666 seconds)
loading group "broadcast"... done (took 0.924680086 seconds)
loading group "union"... done (took 12.153559817 seconds)
loading group "simd"... done (took 4.221879598 seconds)
loading group "random"... done (took 8.457619494 seconds)
loading group "problem"... done (took 2.00535313 seconds)
loading group "array"... done (took 20.342324265 seconds)
loading group "misc"... done (took 1.740185984 seconds)
loading group "sort"... done (took 3.211482832 seconds)
loading group "collection"... done (took 16.974528142 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.50590962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139022072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130977629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133272376 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.168883894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128172132 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13818879 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083183891 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.03913516 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1540975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133896648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.462481675 seconds)
done (took 4.993244822 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200560793 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083223957 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095532513 seconds)
  done (took 0.899696931 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065885614 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121301094 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065464476 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081435042 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066682749 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065658762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081102726 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06634297 seconds)
  done (took 1.276395557 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073893068 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067869132 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083795766 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06829245 seconds)
  done (took 1.022722311 seconds)
done (took 4.20256459 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.831918381 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239033695 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184147913 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4451323 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14608885 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181054825 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67082293 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34317179 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.199378444 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081803107 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119752036 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358836009 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123609482 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666367004 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077903328 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105122333 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.167358804 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416280338 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068619863 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08250039 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103424475 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130644387 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104114649 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091122446 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156902167 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080683186 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145631971 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081984984 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083603522 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225244456 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187176378 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677974443 seconds)
  done (took 10.342130905 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096054624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113134113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068716953 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13913602 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099077427 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085953502 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071499818 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066891517 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102956675 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145008735 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091015511 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.117867648 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065032485 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084938089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084499282 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221654958 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081893569 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097605062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070472728 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090816623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107220972 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095067413 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079011937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094125996 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129441448 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196908031 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099947561 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113741373 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070314334 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095605712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.128805263 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129784356 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068160773 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082167843 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124626286 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112298493 seconds)
  done (took 4.463276652 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.0314883 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155686543 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091276042 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149662615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067509726 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124238304 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081832176 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085344701 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230348928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.139042143 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.46086666 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100907869 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125240607 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085496995 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067076103 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085598792 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06801739 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542215139 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14396431 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120548498 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084412236 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090230552 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070573736 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356444872 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067817984 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06654517 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084034944 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05947973 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141189707 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069140715 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.135007418 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086775615 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06624748 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121149731 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182480341 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091841901 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150974667 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083181212 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066731316 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16412737 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090125489 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067201592 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082140795 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119666314 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120773569 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069293269 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082898363 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17520014 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069929472 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082453107 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.8734303 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166528614 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078810452 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06624576 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279885611 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084476056 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083125637 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065174048 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272857117 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150664587 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067064976 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082822156 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066778383 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067181295 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371434854 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082631718 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.03836228 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06824175 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077391767 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084623832 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067048387 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088333141 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072103918 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099821903 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067137761 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06760542 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082251893 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065986709 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067868179 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101221339 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203957502 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066472936 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084109499 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063702164 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079862808 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086595063 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110304763 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073049922 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065239678 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115254653 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090212351 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067041613 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06603973 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119544825 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067188073 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101517639 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084235991 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114644171 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085184025 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15487873 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067730332 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1149551 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071654022 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079280674 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099191698 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096370885 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067818854 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147352602 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064067101 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082143151 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066937535 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083802479 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068141843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067376981 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096861027 seconds)
  done (took 21.086529612 seconds)
done (took 37.653166266 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.28716771 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091560118 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075493133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.092431515 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091569616 seconds)
  done (took 1.440823387 seconds)
done (took 2.216534996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119154346 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115394506 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063944475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112023747 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06356409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116766839 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097340467 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097570938 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113871466 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064699213 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094542485 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080215156 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064311025 seconds)
  done (took 2.006123868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08314979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082069384 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08465629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082019634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063252888 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098124041 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080443599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103473645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080370431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071240582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080404664 seconds)
  done (took 1.681176884 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081685969 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082732642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085063538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081242346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062595996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097282698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08074926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100844999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081029815 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088269367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064635265 seconds)
  done (took 1.680389081 seconds)
done (took 6.133642363 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077804738 seconds)
  done (took 0.844295505 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.665693899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.918064521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079237662 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132308384 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198575446 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138708911 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.331250896 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086649199 seconds)
  done (took 9.51297102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101279515 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087818358 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071605264 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084159789 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069893371 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069968182 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086750203 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068848972 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083537634 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068728193 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07009088 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087669065 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071713506 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086413359 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070092673 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083989676 seconds)
  done (took 2.0991457 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091495134 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.107536262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07263862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092855472 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071812756 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088950517 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074990275 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089917227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071495816 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087636024 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07610835 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088677326 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072946118 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08056721 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074192065 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090783796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071717668 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089674036 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075959294 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090030459 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075863367 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064193411 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070273575 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072663525 seconds)
  done (took 2.803948543 seconds)
done (took 16.035371296 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112805393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087524909 seconds)
  done (took 0.97339331 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080996802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098217267 seconds)
  done (took 0.957207688 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084217347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080412029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090729117 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095806755 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065840469 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081596139 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103008011 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067484888 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065786671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082419363 seconds)
  done (took 1.598648286 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06877008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09267571 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071647369 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096790747 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074361877 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080028478 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073103631 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083608594 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07981817 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062597135 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088350012 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098311401 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072274074 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09945608 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073873306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084206052 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071858595 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083796211 seconds)
  done (took 2.235679046 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06668995 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066614929 seconds)
  done (took 0.916020577 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067928042 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063678101 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08247854 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066283708 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079139555 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064147071 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078589052 seconds)
  done (took 1.28703752 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40521215 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109987444 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308293884 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069670848 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101598577 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268181723 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065363343 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06999302 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090878207 seconds)
  done (took 2.311999929 seconds)
done (took 11.06201924 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080610645 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085741233 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109940837 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410838403 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092955659 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08218637 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131876766 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226321715 seconds)
done (took 2.006051824 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125968425 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610261583 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401565997 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210677541 seconds)
  done (took 2.011946788 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310501403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.107797029 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059372955 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082475057 seconds)
  done (took 1.351411472 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06698748 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070101038 seconds)
  done (took 0.925714887 seconds)
done (took 5.20351901 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066815236 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06547917 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101804228 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063818019 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082987341 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063873123 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064343035 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083507381 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065995405 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065612763 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082608921 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069277299 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063570763 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08020131 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066231996 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063265192 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079573773 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064702569 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063854372 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081622078 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064468851 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063510462 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079321073 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066567561 seconds)
  done (took 2.537146109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084760151 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082330246 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073373619 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071482041 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090235758 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071169647 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088411147 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066973601 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086908157 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069448831 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085458673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07157889 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068168413 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087125279 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068389875 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087055859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071817788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082784805 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069222501 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085890487 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072891384 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066419833 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08669976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071008453 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085907793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069586237 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084805634 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067887721 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087250169 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070735551 seconds)
  done (took 3.11909766 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07049414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06353515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080143574 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071891036 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064104713 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081594631 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064312894 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064260868 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081216972 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06397714 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064458005 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081267855 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064480445 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080999035 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06526816 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067442516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095152615 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065453982 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063405205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081558166 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067785355 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063101462 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081186852 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06401585 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079783097 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064567363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064500805 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079394402 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065374547 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063614294 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083766045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068438846 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062992161 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086426929 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067761687 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063673938 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084821332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063499454 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064291814 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080293139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064095059 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062974712 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06292722 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069472621 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082356469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066158885 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064103768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081583986 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065245303 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065676846 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062504769 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062783891 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083791751 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065958538 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068137947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079876033 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066368691 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063359456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08072083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06439641 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062826221 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079541126 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066740172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063843639 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094465875 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070779408 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079680503 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06664916 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06444013 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083001733 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066399074 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076123344 seconds)
  done (took 5.908292255 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0917091 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104548006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064549677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082519198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061692658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080487933 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069028044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063618603 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081989376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070132924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080327195 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067209506 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065213314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09319574 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065344693 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081866176 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070481483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061598264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.190734811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068040622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080707131 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068071959 seconds)
  done (took 2.56304798 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171682723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07095507 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.123461822 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073476389 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066273353 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091610609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071510014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06926795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088286227 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069324792 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085880487 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070780781 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084243657 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069349707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084614502 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069659386 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087318347 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069601609 seconds)
  done (took 2.318967648 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078560082 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065488179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10383297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06654704 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082745671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068862295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08734284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075478019 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084782657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06702175 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074323615 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086500732 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068510568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082573171 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069420868 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06579903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085631109 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066671123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090716031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071020781 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088138749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074792779 seconds)
  done (took 2.50830605 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080307118 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067621664 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100786824 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069226662 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078958897 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065428952 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087034843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067267025 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070572966 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084410368 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06611011 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080774894 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070864084 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066322592 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.086703346 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066601954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084854195 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067499387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067079129 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07930884 seconds)
  done (took 2.311931681 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087406787 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083890057 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068851446 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091962529 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068698429 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084332576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07720104 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083451033 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068702073 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10472934 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068474253 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066986102 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093626907 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089714716 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068936043 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092150941 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076540692 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092359946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068557802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084514575 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087956825 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066379617 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073498423 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087171657 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067415442 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083830224 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068793568 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089549175 seconds)
  done (took 3.050314264 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066559839 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066125014 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08019454 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064854113 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063429595 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080154771 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064738287 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06380936 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082583204 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0648299 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066084896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082678994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066649099 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065603162 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082581858 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066908304 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065969157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080307046 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064570116 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062766131 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08218562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066203584 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06599854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081422228 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063546333 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081897988 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064235795 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063207937 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08233309 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064200196 seconds)
  done (took 2.92171287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075862389 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072257445 seconds)
  done (took 0.956426404 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064562538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079419737 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080929615 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070070511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086712142 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067965702 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073582546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087576323 seconds)
  done (took 1.420131259 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081970224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076640267 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085319066 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079934168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094067823 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082789706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153265916 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084757742 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073882814 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064203316 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098621299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06518977 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089642847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067934888 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072271906 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089914851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064694818 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089158998 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070238557 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065176198 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085509405 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075085871 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08519651 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062901664 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067387744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10654256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094476977 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067784648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06947005 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091160472 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072587192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077226281 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067442231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067313865 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081420896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077076981 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098218661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070523976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092040092 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068887302 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094333263 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062629143 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07087032 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090110008 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077160529 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083453058 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068139445 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06196165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080977523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070096891 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061872733 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084796623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06214826 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090624237 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071491657 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07929426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083350194 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068632386 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086247365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07107543 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072272004 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085681033 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06969034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083892729 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076356297 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070879664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093230651 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06196632 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077900823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066262667 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075405062 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106988762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07222318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065691412 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065892882 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083884389 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070421804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067099439 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090351227 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072792879 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083520982 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072995043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090081919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067240947 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068839643 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073467006 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064472725 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068025111 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063511416 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104543225 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066657457 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06465108 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082696649 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077756351 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087042051 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067602504 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063758968 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090358514 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061233825 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083535848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068484521 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067015162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076184147 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070841062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092594189 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074857323 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091594452 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067714393 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06853895 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06216198 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067127851 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085006886 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074679018 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060182776 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08764009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067477565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084217981 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076062594 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064098125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085038739 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074378825 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088956212 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06598254 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062768593 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08705282 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066929889 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086373285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074892371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064556714 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08057365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06212797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086922837 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067243406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06981934 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089746603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069718215 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078223266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065548637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088421211 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076720492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066445892 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085073297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073059959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08496735 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066279716 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072683624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086822543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066085658 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088881584 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068846564 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061814337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087086838 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069754095 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0824765 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071622032 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069823821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08597738 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067509872 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082328289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075411481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083721167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06709204 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06652882 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082820378 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077670626 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067835097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080032796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064101035 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093131689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065639156 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06481762 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06442133 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067204539 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087300469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066233452 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066405534 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086574593 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076887322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070170239 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066351512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091697552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077921792 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066099806 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068422007 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064788503 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087581412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06786994 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09321723 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072587527 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072009066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087193294 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064404507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088977549 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074919617 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06540845 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08265292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066708454 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088169354 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073737026 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088220598 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068348471 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065480034 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084425663 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070603658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085286439 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067384038 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066060115 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091384724 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065346673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091841058 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068755108 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094531154 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070580034 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062295054 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087664458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065131192 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08912491 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062749644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064702687 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082659757 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068816028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064739442 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086891321 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061413032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090312867 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075583197 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066351605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083462179 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067368957 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09028198 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068357878 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070485036 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088428133 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073720529 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094278191 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067005851 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069309226 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094824619 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067016558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078636437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073435828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065280648 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083799988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065417475 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081798397 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07010993 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092744358 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074536692 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061170388 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086933953 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065679964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065623619 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080436766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070624049 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086427442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068905617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073234764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085140189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067286276 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087617595 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067239366 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066890376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086691162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069344702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066531924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067317736 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065055355 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090383752 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066068371 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081956181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069132552 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066607708 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084585087 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072661169 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083256415 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067804962 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069275768 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085543742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068439465 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06691408 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083498594 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069671536 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084967465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067715569 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068343948 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080170866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07407544 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08291052 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075665662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066843564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082190114 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075624692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08629916 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073940579 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084737571 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068086886 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06799883 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084620929 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069437646 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090035955 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065585941 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076205303 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092244874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067306827 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086811905 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067827502 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067566839 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064672542 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066282131 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087008428 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06762327 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066208024 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089722377 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07015087 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066613323 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068121048 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066427036 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08691811 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069155225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06093551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084608804 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066708642 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083760095 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077329673 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066298522 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084695641 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066070745 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08545647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066764534 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063497409 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074227051 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074868478 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088788484 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07342328 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084088572 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069385705 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094331314 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062469102 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065670518 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082398042 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06578675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074048501 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085715266 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076242567 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084814326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067629455 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063732856 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085679985 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066142224 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060476752 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083262095 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071114248 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083046584 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066720813 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0666424 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087171936 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068308116 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093733154 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066700956 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067300078 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085829699 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063399786 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082961028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067035906 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068707839 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085459127 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065485044 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06327446 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084924279 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068850756 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085584442 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067264104 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068828462 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07180839 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064953786 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089643216 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071407605 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063731962 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08880568 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066692959 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08405509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066670629 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069802288 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087519416 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067915323 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092376741 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067001333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06711152 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085377224 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06516801 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08365051 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067000219 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067179955 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084380658 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069591419 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092444575 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067189542 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069501657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084860555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067971354 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090042992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06924016 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069701992 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092499138 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067607751 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086604011 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076869181 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070911651 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069321855 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066815023 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088998814 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07336114 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065729841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071433699 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066497657 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088764174 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06987172 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064034315 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085035099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067241135 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083313241 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073907884 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067370394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084657027 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066797339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082452213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069199822 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070259878 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093019526 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069265003 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08716366 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063059544 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063872659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085918999 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065381909 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067934154 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087707896 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072760127 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08689509 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068305604 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064904239 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094483344 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072005141 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088379997 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065532012 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069372145 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085925843 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068694872 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085510041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068129789 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067827352 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088981517 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068765773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083387503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074818497 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070002175 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086637155 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067864796 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085468438 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067928568 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062079496 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085592062 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068931395 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089303646 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069929327 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066083335 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095408406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064825094 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08406826 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070844721 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066118483 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088773879 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063022737 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085904725 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069266189 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066903588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080451898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067096323 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064379835 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087473578 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066179045 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079578369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077992208 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074717859 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067936275 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064958446 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086696259 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063375887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062058004 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08524641 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068531157 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086091073 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077024615 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065169587 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084160881 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062348738 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084301303 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070344483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069909302 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082143298 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062201121 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064817432 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068287451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071668432 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086577011 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067094991 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06909308 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088210792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064954734 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088068014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064557149 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069803906 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097842269 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066822935 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085882759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07387307 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092343303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068972205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061932542 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086004896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070402344 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085136239 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068690057 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067327477 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101036218 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069180835 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08439557 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06656832 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068704139 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085760753 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074972488 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085765316 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068111184 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088252387 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069652563 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075303008 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08820157 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073624709 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088280591 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070611239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083308978 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068179558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065608719 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083720954 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069098967 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066819839 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091306553 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074451611 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085419559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076914008 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094730407 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068843929 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062635836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085882957 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066495948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080559057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0687236 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065749961 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083556658 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065070788 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064609365 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086822327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071253454 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085777323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068549601 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066172146 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07978817 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069591652 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0865744 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069139495 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063997654 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085323218 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067755632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070675435 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089698108 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06530672 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087186463 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069138736 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06618378 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080529418 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073423937 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083943265 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069438706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065968285 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085382173 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06897872 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068992185 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091284262 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067293208 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088115964 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069948595 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087036556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064827408 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063716223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090848751 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066107959 seconds)
  done (took 45.866200315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099723395 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082182823 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063536011 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062104593 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093724472 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062877042 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081547086 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064672461 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080437975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066786255 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061808689 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080988695 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072067969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097294432 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074888697 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087069804 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06193607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08170116 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0631858 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062999795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091500265 seconds)
  done (took 2.44918979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076612319 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069965142 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071286921 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074497974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065980267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094660227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073967381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091196545 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076424356 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087512238 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077101192 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090645639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067545121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08627282 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06735522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09070385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076939581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087428926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07037647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092953166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069860305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092456352 seconds)
  done (took 2.606897481 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067257112 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066300347 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085887274 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062788356 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06569912 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081136815 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070125168 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062866033 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075975295 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064175753 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086639601 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065881457 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068064692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080661078 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066761309 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063850995 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.127543067 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089147787 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065571765 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066526479 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060452939 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06655523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084372417 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063173522 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064146534 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08991057 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066652123 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082755042 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066537392 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06492523 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084906771 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06482763 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067364829 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086100284 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066247939 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064297019 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085612451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066311267 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079708869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065056021 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066291482 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.080754282 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067063128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066924641 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084461613 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063976112 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0852802 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067040264 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061024649 seconds)
  done (took 4.423488128 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081162628 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1284631 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067073007 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087100969 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103497067 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073318717 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090248401 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109284799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064717162 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064566157 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103602722 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102668229 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066950454 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090876039 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073196781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08418791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068755655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064635392 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089549258 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064733062 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090839875 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072683494 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101171845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098574318 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071396661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084048747 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066271241 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070036813 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098291974 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089535769 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072458237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090322718 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082241526 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090977487 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065419404 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086727246 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082710823 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085744494 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069073273 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082322505 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069721846 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087522059 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073906151 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101812384 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067741707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089663094 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066447961 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06255095 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078419236 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066800541 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071821888 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103714846 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070940861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086100335 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070922367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100513707 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066702464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083266305 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071018588 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097678204 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06548608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088264485 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082806538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086582534 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07525885 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100559447 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072187677 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089903404 seconds)
  done (took 6.563934036 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076347145 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092131896 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083362227 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101618603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072705835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071166616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093989414 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074669299 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092273826 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078785301 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09266799 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113292002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069154694 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094476747 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074596006 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092298428 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074385283 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092383106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07324886 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091957379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073679566 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10097054 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091962694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083333828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09738602 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067033039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094363657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07357159 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100555728 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090599869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081698077 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092140618 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074657217 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100576688 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079374696 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093605654 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06501974 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09319061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072863052 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072089863 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066636746 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104150784 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091742945 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068710513 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091717015 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074138045 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100691698 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079283711 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096224313 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097162486 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074362139 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100855001 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07283869 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092955868 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100004843 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106815803 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10124705 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100239856 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073821955 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100293158 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100034635 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087851353 seconds)
  done (took 6.253322036 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084367052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095077837 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077204998 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082012253 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064794393 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069427473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063184726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063582416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098594324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07432082 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097598869 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089480043 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074906623 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097097539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070971319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094497168 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070721999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090230607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074947011 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090697052 seconds)
  done (took 2.49554764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07497431 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083246696 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087901171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072135568 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089010657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073051657 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088495442 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070383916 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085720986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070828102 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076237994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096956029 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066455337 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091867507 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095385809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073791065 seconds)
  done (took 2.169591132 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07661476 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092821031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08059797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086052854 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066027882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062728209 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086646368 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061851637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061861601 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098895409 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065336737 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089518571 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066432232 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083936977 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064342156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06867567 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.082687603 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064277802 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084929879 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079603887 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095313127 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066596553 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066884771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086278263 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066498768 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09173875 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066103491 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084140146 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065317481 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066162292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087966913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070874925 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082917683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065152824 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065333301 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084081317 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066156231 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08624178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0703399 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084536928 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066618377 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066339324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085831357 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068107636 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062923743 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065417468 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06215389 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090973628 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065270338 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086919926 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06798307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06856356 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087163361 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073710003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089621448 seconds)
  done (took 5.025438725 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080243001 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069696042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082535299 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065667885 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069236553 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088727716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06992576 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088202552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069269752 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082489944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070081495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069000001 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088199639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070512336 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06745968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068539109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060987074 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090745765 seconds)
  done (took 2.225535553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072085741 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066345148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092550082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066994577 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065270936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089846925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062385843 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084884964 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066160813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0664248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085981401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068376621 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083627519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070172423 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066639963 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08553886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069646236 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064087473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086543386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062876745 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087182238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065663809 seconds)
  done (took 2.504156948 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072978887 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090957886 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159724371 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103494678 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082773834 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078165433 seconds)
  done (took 1.467440378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091268725 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099460321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067904799 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08752322 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094688617 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06727318 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089985139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067893138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097566467 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097581874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069704962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096679811 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077525834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097348084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09344704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075843337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087608274 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068884758 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066904032 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083006958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089510224 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078078047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088820457 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068209597 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088664916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078096106 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097057394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096520494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069620685 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097047839 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075063033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088459023 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077907169 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098167388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070032098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097231934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068031204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106189698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093233427 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078252176 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089207696 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075614377 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096005635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073852778 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097784402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068731814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09402693 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067883135 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089734284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108067243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075729152 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096709292 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074314342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097148003 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09634426 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087871787 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098330656 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09665707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074974572 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09793594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076887338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094138619 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095891054 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07886844 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094530191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079860928 seconds)
  done (took 6.54513287 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083330917 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107109015 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068591435 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09799122 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076430489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089855559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067812573 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089457842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068371475 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088005482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128233463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069786134 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097647837 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076534439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089918723 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068845102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089304014 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076244447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089094729 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108171787 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069136442 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096832257 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076433213 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098009343 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097067077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074870129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088881953 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069334867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088908509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069342382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093274303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069125981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097771636 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067220834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098027324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067815786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089222807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073288748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089774795 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073916301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097424449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106001826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068456286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088866054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077637508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088691371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068567078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088098292 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068326597 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08860667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077915963 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076309844 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074941576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073710214 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092392966 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069289431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088421392 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069367162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088222955 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07450676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096098428 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069265902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107948731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068026217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089410885 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096735203 seconds)
  done (took 6.418810296 seconds)
done (took 127.421646553 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200475886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186704268 seconds)
  done (took 1.265784922 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069521762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094933684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098164338 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128688414 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08748488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100635169 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098323891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099507384 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066391725 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086660177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067665111 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067993071 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151819335 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067930386 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066006369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088847658 seconds)
  done (took 2.326362206 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102024832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194747878 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10947476 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065966179 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098716553 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078255387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064785234 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096612237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071192512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085880604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078066939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09540416 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06602936 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074415344 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069866035 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09818005 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066046984 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076963274 seconds)
  done (took 2.481335115 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101394117 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140849489 seconds)
  done (took 1.132797296 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201449451 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123414169 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.188106783 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41969268 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203132094 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.263034565 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176437574 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173667547 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159735182 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172335178 seconds)
  done (took 2.963899432 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099550519 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170650362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301927697 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116252073 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095168513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11445014 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118803839 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100099456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078383464 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099369225 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098072641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078600435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118263817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075663467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095229867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078111611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121003903 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073688276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096772354 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076490887 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118128715 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067156093 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073512219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09491009 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075997941 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097805099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065954825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065347256 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072878616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096562217 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079824161 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113545387 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075433429 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128115263 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092781001 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129836873 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07788585 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094306876 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074670491 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093137972 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077971145 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098411858 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073065629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097114542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066780894 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076939555 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086822249 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066997001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100109187 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067925556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100719693 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079036928 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128357872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087904534 seconds)
  done (took 6.088371224 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.706069984 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127248387 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070244464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130720428 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116729769 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073960139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.737639327 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111788183 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197983969 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093608229 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109082449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071529715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081225635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082222218 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131992549 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102245238 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115756318 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071271293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123365849 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121428197 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069071536 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114566094 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092307913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.40051862 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067440664 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091335532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069357784 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069830824 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135407678 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099895613 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06958789 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167089147 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086075917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.146262852 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088646246 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069075888 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068190433 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078382694 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203673772 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.181729604 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152368589 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068635932 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06798763 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091127065 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090399973 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088431991 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133816336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080540389 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142054354 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092046909 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070599078 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088732196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070778601 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100096089 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080234657 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101410684 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257282465 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089183113 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070446276 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071216808 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223128089 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08105762 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101583282 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092805542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176432826 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069044618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73379087 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08718194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069157305 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092192208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068890241 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091852443 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070331201 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141741531 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365211537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071311729 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069672699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090114332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186857821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078387734 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090860888 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136680194 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06782663 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089928233 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070381729 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069131068 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139967706 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078931062 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068579764 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091878421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070368314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089338194 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068085594 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185494512 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101522093 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081811506 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179243681 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089751231 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135830081 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080654624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090960717 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080883499 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089164309 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071333041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069166222 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101242155 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117590885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080970518 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091318118 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069862163 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12017167 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081703194 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089808193 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079785881 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422275766 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.102140874 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067615947 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080163184 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067525172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137208097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092225895 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203477089 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069421788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102174045 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069659654 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089484097 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069324127 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135455623 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09118749 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070531374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069460404 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092086575 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080252923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181726906 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07257708 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183399968 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133385783 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092510316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145793768 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069494615 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140735508 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069958534 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091416214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070186816 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743887349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069475996 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068327221 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091935784 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15991164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070366071 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079320457 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100491914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068195517 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760988135 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081311878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09993178 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080589154 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092249322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069051412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08918631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071124337 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133282981 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18988603 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071907393 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068645829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099667278 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135001489 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067480625 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100459337 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078568573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100531181 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069054637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091696714 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082085007 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141175542 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100277915 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.159536414 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561003426 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070050878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098554565 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.169769259 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067937388 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107734236 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068893996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081079719 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137107354 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099609137 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.25493578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137648548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.163168624 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.0813654 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105252761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068172743 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089658455 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0797757 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090067873 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071482954 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099800732 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071527305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070128776 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106556216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068607414 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197444292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08919959 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079795737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088791358 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070180959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105455053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069673576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069784016 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102257242 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069992937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100084946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.676850617 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099577372 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069493218 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069145232 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183805211 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137432649 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068248128 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089785667 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07046617 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133275428 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180284599 seconds)
  done (took 30.523591779 seconds)
done (took 47.667730261 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.232321219 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175440618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250639469 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118791897 seconds)
  done (took 1.761487467 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144914458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101784371 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118767741 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065030163 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125216432 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087430082 seconds)
  done (took 1.558102412 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410614851 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261581688 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226269275 seconds)
  done (took 1.80982225 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219619041 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234547768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412541605 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301443503 seconds)
  done (took 2.187553191 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167210651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113212608 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067226452 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105925295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159255199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208130705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125056864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17319202 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079199852 seconds)
  done (took 2.158945747 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190950226 seconds)
done (took 10.574726998 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.227153783 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.239727312 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.168508093 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100785004 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227293841 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222382908 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.199907576 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077488536 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096904651 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070510454 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095722947 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074905431 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219535139 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.210416382 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179737789 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064605518 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127381576 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168464852 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08035627 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089684579 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147551914 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072059567 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222471718 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07366952 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.104018793 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127280276 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097337548 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119225244 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209656631 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108460218 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097736939 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14081113 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166313592 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068384096 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098571891 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072383287 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112870884 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154403253 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094589142 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053301858 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.179248958 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132714022 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15909149 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072233243 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109668059 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.19796846 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070796273 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097929006 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07323117 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.215898573 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115018967 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17227597 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100130011 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138644837 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091415767 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181989955 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066045795 seconds)
    (58/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.174638984 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 0.127816422 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121593196 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179624126 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139811463 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115313859 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063896378 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052695856 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09912799 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092520262 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094093499 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146740233 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.226656793 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096954052 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079100395 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053180136 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097138761 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066906255 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.089972663 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114346645 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118516787 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075762454 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07702491 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.095945474 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063212255 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096585959 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101752749 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065459167 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074090464 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149657869 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102566926 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100126584 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170084624 seconds)
    (91/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080882732 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126215116 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173963818 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065997318 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157771453 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.1186768 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.180710433 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068529036 seconds)
    (99/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.126358836 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08941829 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204426868 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066516571 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162324688 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093687937 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122018418 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.1202243 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097673181 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088306759 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073974188 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053028347 seconds)
    (111/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089625349 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079843672 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167375283 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136802476 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089758572 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.135432408 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110894192 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07428698 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095417479 seconds)
    (120/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053566572 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079982567 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162395208 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.171388703 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073273831 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05201403 seconds)
    (126/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09474148 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073929377 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.324132765 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103402421 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075752839 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072745765 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054093416 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072315523 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112985268 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157360126 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074859175 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064870315 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.178040027 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072657813 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085719964 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135699021 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062459781 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091626501 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068959719 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113975237 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099896134 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072808646 seconds)
    (148/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.084861573 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065853698 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074807791 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075045879 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13006134 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080309312 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05169482 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093530219 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074986175 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061921513 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111463513 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066803134 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064947257 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.181026254 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111613697 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068343118 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07566015 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091104456 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064487883 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097745465 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07445992 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051510072 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061012489 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113953664 seconds)
    (172/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051733724 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109631818 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090724859 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.129248115 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122876072 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129666034 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097028255 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162593436 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188939466 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073418347 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096411437 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 0.166300567 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0799072 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066358286 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163117457 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169837875 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202209483 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071820521 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187199062 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072235365 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 0.232695656 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070181781 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051237326 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097239483 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076437095 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051412083 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.084174338 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054298641 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068817724 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051024274 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072359147 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063411113 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156539305 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191236552 seconds)
    (206/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054027641 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051692938 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065129314 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075088593 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053900245 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110474091 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08176178 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065422501 seconds)
    (214/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.074795681 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075543527 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051388943 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094835222 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101740176 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052453073 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102784581 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067267813 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106476001 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068189677 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131740471 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06585003 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065476614 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095392878 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 0.129064845 seconds)
    (229/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077249095 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052902051 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092366634 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050557292 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063578711 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052684257 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076221226 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052759023 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169894862 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077102938 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171202719 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100077106 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138178654 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161397227 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112576642 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067163638 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093105869 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167077346 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05132989 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085240799 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084399312 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094758828 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053554251 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065065013 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076065924 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076873688 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077654608 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075160792 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066889247 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071801014 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091255945 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06619477 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093334969 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066330045 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091244248 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050726529 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064302839 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064884589 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097835286 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066663003 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053826729 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076126996 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074498531 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05332262 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095782749 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053449604 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067351894 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.075177969 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073325093 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111472708 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075143599 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053701703 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072144886 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090317643 seconds)
    (283/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07457178 seconds)
    (284/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069618186 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074518337 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074704434 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070616765 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091022309 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066186011 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110594186 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06575242 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074350324 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196046642 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119690996 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087140987 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067266011 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051392827 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09542966 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052834124 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073530265 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075552366 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054869639 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161389219 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072346616 seconds)
    (305/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053560095 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052690641 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05066801 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065756356 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091430205 seconds)
  done (took 32.77127157 seconds)
done (took 33.69249216 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082374955 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114395403 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074980231 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092263959 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104925857 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076819248 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09579308 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078114076 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07934389 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07991468 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104161342 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055425853 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073625481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099086677 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07497107 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114711446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079160472 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095613868 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074660073 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065608277 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096504895 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068252122 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067149929 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078510019 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078575534 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071404994 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096531704 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07399129 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08881443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067140948 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069685344 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096093619 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066168938 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078263202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09604375 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073763778 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096785145 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077299548 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06746839 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089099086 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074878433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0653989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096581413 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073437729 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071748925 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095459781 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073621291 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101251346 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092912669 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067414437 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07369746 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075434851 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103065573 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072869698 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093263028 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074587171 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071135775 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115627026 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073757252 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067915982 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072338123 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072999592 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097193759 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074304979 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073134168 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099749726 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075919667 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09469333 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076137191 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07125435 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089691596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075041378 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069008944 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065688648 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074892636 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102104532 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065873299 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072508699 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096894198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073047584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064820058 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091364065 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068921365 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072237628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092385612 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055648107 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069591332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095940469 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066045523 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095781053 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072909698 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072558833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090935774 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07718167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065572188 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0948902 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067125279 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06626965 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091102578 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07128704 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065435849 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067055754 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073727927 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066412841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070953828 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07751469 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092640785 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073396092 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064647248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088771508 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081672289 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098490139 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066979044 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06844178 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088358154 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07401963 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065083615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08948811 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066845794 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065872035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095775819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067121428 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068291199 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096759913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078705294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088569362 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070192632 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068573495 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089138021 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072337808 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066589041 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090007082 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068646495 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062295727 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091463768 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067149611 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072858096 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091765342 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075004615 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067687699 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097873826 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070727014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094493465 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072023121 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065506913 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081605423 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069496102 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068760695 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090389989 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06717232 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067817223 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088767816 seconds)
done (took 13.046926809 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067636798 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169498474 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123636229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096879053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110147297 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06732267 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076596092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127184962 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091051601 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104840143 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110699055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08681054 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138003802 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065282581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089604021 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071186353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067085544 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112693483 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126027681 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087791663 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135157746 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065134245 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094035489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087753252 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114818914 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126255852 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067867737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070258917 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092920075 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092494075 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11044538 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071265451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066602391 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12283863 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116508984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085434213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08926273 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084809985 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065964305 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089958229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088925587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123596683 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104132686 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082113494 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071690527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09273063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068431807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.108439411 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089789003 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103382012 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110234913 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107071153 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092504257 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081571392 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088286407 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087645761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104732263 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070301613 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066315433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092112061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067214683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069609555 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111176599 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113385142 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071420056 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103856922 seconds)
  done (took 7.180722665 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084352574 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089671256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107367923 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083858614 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065110979 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065480955 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065862568 seconds)
  done (took 1.544156041 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068384503 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088810706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113768984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089465991 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10890447 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087197168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100282196 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068402932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082605954 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09309031 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088528335 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126262963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069066616 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096977922 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092568713 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067091958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116363654 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067715663 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094279306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091022805 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092600284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087559263 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068665376 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090863206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08206912 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067424414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109923302 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096602528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069207936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070586276 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089626235 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106483096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105375321 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074725417 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066831883 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106608727 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082497521 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089361661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084138342 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071312742 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079821341 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06716379 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093943855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066998039 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07152303 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103230161 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069912095 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067128904 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094554948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088048246 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091931739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081578541 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067139111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095050623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070030349 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094872144 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078960015 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068185519 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1112651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069767766 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107344943 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084654828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080301988 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107098165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070359352 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10410364 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082467777 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069124382 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094109362 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071007679 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107703271 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066530952 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069192801 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10218815 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069903091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114599088 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091165873 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068137494 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102849081 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067635426 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091025775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069031704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08985053 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0951151 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067667201 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094850685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071134188 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065767697 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090634873 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071893191 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066142046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068533525 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068918706 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066622108 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096444818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084830695 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091797634 seconds)
  done (took 9.227159119 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069438591 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06854864 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093396312 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069746923 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068219918 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092586585 seconds)
  done (took 1.453672153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095441425 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092538324 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082314186 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072450142 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129072083 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081151533 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107882209 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104051967 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086006661 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079116699 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107044999 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083152409 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11228926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072788201 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105704402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073132363 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105315104 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078483251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10270741 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075157926 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111481837 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074512062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074417245 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107488046 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071774956 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096583066 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079973506 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103185729 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08064079 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10438673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074715367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071304157 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095199434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07879932 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106763331 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071269879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071794346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070518513 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101930738 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072102521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.082066886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09907953 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07499579 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096303191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080336322 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094733289 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07273344 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101176274 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082288853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095642934 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073911009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072425023 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094766597 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07310239 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094996283 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080934683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09486186 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082586099 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07288345 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096226592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070657251 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095495659 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079810274 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095172793 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082154461 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095419632 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072528039 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073003891 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098703753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073002133 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095138105 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071912701 seconds)
  done (took 7.277125186 seconds)
done (took 27.659913797 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.667810505 seconds)
  done (took 1.658638866 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.741661677 seconds)
  done (took 1.735373227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.953341238 seconds)
  done (took 15.953120877 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.590801742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.731624944 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.854103302 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155041835 seconds)
  done (took 3.325213599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.879632059 seconds)
  done (took 1.894995619 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23632822 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223007555 seconds)
  done (took 1.459208123 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74342653 seconds)
  done (took 1.751752934 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.293202233 seconds)
  done (took 2.292276626 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318057885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177207075 seconds)
  done (took 1.509424539 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.485087153 seconds)
  done (took 1.493960537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.677093482 seconds)
  done (took 7.690985712 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20556442 seconds)
  done (took 1.226340121 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2638658 seconds)
  done (took 1.278955242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.135764295 seconds)
  done (took 4.146545426 seconds)
done (took 48.422568728 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079314657 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081303762 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105210913 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078756911 seconds)
  done (took 1.350135938 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078256292 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072908069 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101103109 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073109606 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100109309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073830378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07400059 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102268401 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072136609 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096905404 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073907832 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072194973 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099382507 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075770173 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095417565 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076592938 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09888186 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073849469 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076048267 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096340139 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07212725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074949163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100543709 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071703089 seconds)
  done (took 3.019405021 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078700776 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072454065 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098280786 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073282646 seconds)
  done (took 1.343593058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078600563 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11647059 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090133462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076393939 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117136032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109790574 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069804886 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068797094 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094904228 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078377112 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066988133 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121625387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111736555 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077440925 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07876405 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090082698 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068366899 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111173194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077078109 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100387087 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074137777 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0769646 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091266303 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090296698 seconds)
  done (took 3.157772637 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078128032 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101878542 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103223695 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086669325 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115102064 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065400795 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099899592 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089295058 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147884492 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065431034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094085663 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066350618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07226258 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.089240819 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077590496 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128019963 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109790644 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068168668 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120811819 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065860132 seconds)
  done (took 2.870510897 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073227392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069817072 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088966805 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069111619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077505295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096779654 seconds)
  done (took 1.502883076 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068531095 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067876627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090127013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067577299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071838209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091155273 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067531645 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067173599 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091695195 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06828942 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067179118 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090289495 seconds)
  done (took 1.931875166 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.392004149 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094977497 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071011979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09088234 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07205125 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066080416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.105587784 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068404619 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1155909 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067623909 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066791522 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094221915 seconds)
  done (took 2.327376031 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260230518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077697055 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291662671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164381876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139821698 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142948739 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130967859 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140049073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173102167 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128856809 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222314345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195689534 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134469369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165381687 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114666883 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098762834 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182475559 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191599569 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131688643 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219038362 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17479378 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151948269 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174578538 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127924587 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132656945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150551035 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071445603 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106601194 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22666613 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160123439 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175040483 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137744443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120462645 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230392963 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224700552 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170778687 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162380108 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084240546 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155031722 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161454155 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255632126 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115200933 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194866411 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135904198 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106069601 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168489029 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145810465 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146360246 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13210368 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0906274 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198545976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211640127 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193348819 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087391986 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137272596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142652325 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141887407 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129185249 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23652667 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189748539 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153327374 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095800877 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099269814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206336567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157398142 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134710974 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154576928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118885913 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161270042 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181619726 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145343251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169384232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182316531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087908201 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11476948 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194619082 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155728122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198319434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152268267 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097721762 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152190892 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130249652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081945601 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166216559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075399923 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227848371 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122953304 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106884848 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139778748 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134507658 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135069397 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19151879 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199905443 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128439815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066239978 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129420848 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145823627 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176614569 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086670528 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104810988 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170511695 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079182088 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166076748 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099491567 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122824278 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073827201 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152929601 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156175662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101109955 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151063565 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102213617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126777683 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159842403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213978825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090264722 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108937685 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194447721 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148653031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102463224 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198364002 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186181165 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.12499551 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103902515 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205832239 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207646249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089392441 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218962555 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13463171 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083964507 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113246132 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15244519 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13983356 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149561715 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08317622 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146995482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223637087 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075539976 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121637927 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160754548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104877788 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081160212 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129918195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126882863 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094407436 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098745729 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133707023 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16775198 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151708073 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131697086 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15200531 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09585959 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227617797 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114818082 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102155259 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130044517 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069840642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191407837 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186105424 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078403238 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192639886 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151269568 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132103161 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146074501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082384966 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191843064 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080457704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069626104 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199872512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135568353 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110739488 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205418698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130516151 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155072685 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147667585 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163143525 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159768871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156865436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131878834 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087621569 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138373112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180507234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073960352 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118256565 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082110101 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130621068 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12193734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083784871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197058123 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15364989 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100262663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138766529 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123434739 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173603531 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102470687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158184475 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117450368 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092300315 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179900336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181283679 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18402101 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100827497 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199908262 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072359922 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099407245 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092723731 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150746917 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10917027 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084404018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144459999 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199788208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157430677 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168606311 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138017288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148908621 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182218822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094915205 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117115515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199302469 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14822338 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127351977 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11596764 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100376722 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169525203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135237136 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237091137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142251276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150722491 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209502591 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1008197 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109783879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102111367 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163897566 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133830764 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172581595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0980635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115412349 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138925893 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075815432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127894822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156382906 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148067983 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163209985 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140374889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186199577 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078131183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145244495 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15366172 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149942243 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063289541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145820825 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216967945 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120199476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14654654 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1820644 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078392072 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152296364 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235336183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176723443 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11087768 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111892643 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145553519 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154150541 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17298979 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169039686 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138610486 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16435235 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11013784 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112657936 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11340494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099043046 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132928173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093375105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13495832 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142937706 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095829601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185829899 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104828999 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135660075 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146671522 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122361792 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091120626 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124577805 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202783948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146904113 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226965583 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125925805 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174611834 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220911414 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075019857 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106363772 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079223278 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167577962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111237276 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161314723 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124081239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131702467 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152060601 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172209024 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121412053 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070051381 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13603639 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165197056 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138885998 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125345637 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107041946 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219465605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126536205 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081456994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141271505 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132182061 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104056639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229181429 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061188055 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126515127 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10093078 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082518983 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156373906 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208802476 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085012755 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150121364 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14788 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13926812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156967068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103974082 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126441413 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141631291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177308453 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184334629 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091113189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140719847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157352444 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212713415 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132709551 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097085259 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22858904 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180278976 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217391486 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114987135 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142810693 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141014094 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10979743 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196309881 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083681899 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221124933 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107804782 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167110501 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13211637 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1166593 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159475454 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100479155 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132995162 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145023994 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146832484 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11059431 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078051092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145209715 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148194328 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134611866 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10204198 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169487657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098106216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162969931 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200467396 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108379933 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130878377 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097446177 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106870214 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136136806 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130613544 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088908301 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143771612 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204012059 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116125924 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177989488 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170161758 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142964116 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165897922 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127069529 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662848085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104467872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15459682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145832756 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231768191 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124128626 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145186234 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110415279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151962085 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202102764 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132165305 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176117238 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188799115 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144369642 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081515458 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130506662 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130351389 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090463926 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132119514 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140932101 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144927949 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120879749 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145534352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153067808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081487369 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122764235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184510508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143875874 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201635314 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169378263 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111282978 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119592984 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195573701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105944597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150900373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181476701 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104788392 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127270758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081307554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130412384 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224817311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074459668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21936472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146707515 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136246063 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140459059 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143474567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16050387 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135174685 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149758044 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120853311 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137583991 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113583586 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08065539 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075564366 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135585598 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140398048 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124043822 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126593636 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122458494 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204867793 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073381851 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123525241 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105216044 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200981697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205846707 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116810496 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108488367 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147096518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142957975 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11573338 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174872581 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081245087 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108574036 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083999348 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10445745 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132932491 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141229779 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132078133 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139224463 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194152198 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110305705 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249294588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097358755 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133252905 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069758954 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106543788 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122992609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100253421 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137868697 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128190239 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198087438 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122894291 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117548267 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094732897 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100225717 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084428034 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156155676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138734273 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146433008 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126721364 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062495652 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136589735 seconds)
  done (took 69.180949978 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133771854 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105750418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122716468 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176320233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149163779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240511495 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181625588 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225827061 seconds)
  done (took 2.437847633 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069856514 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119835741 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101655253 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109677415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067675589 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.09502052 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.278056927 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081445286 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093181982 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089982799 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106187327 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094386522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459027314 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067093112 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09349559 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064306202 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092408312 seconds)
  done (took 3.17779652 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426431012 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632902159 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.446740874 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075445324 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.851710905 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089451017 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.356015893 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164417883 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071993312 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.436263628 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.748302202 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132710172 seconds)
  done (took 17.53100312 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075910827 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069904966 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109798756 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084288574 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071788277 seconds)
  done (took 1.521304459 seconds)
done (took 112.361461233 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080912767 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.354059471 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054209074 seconds)
  done (took 1.545437272 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083500361 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084175486 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111971457 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08250175 seconds)
  done (took 1.473338852 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07599161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075957667 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110155802 seconds)
  done (took 1.370931647 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284349761 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139779111 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115856798 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083547189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078163312 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104260488 seconds)
  done (took 1.37464224 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073979639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074736249 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098820367 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076970352 seconds)
  done (took 1.42882876 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076947797 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053080385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054751885 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082452514 seconds)
  done (took 1.378154288 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087872157 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.0786083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10557853 seconds)
  done (took 1.379043268 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107800094 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111528163 seconds)
  done (took 1.328747205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082237641 seconds)
  done (took 1.18953551 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101554243 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141196935 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157608019 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137961497 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165771869 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136380929 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085890237 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11668974 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104686302 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089077923 seconds)
  done (took 2.350103961 seconds)
done (took 16.550013272 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079385386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387870809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361560606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089866954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696820109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356595455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042228486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092298991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148803042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094639923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085626698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667199327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.992979857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323725279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980484508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324349817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67560567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069275028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067804222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09458767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995201158 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067219144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094728766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069350493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674187876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373014721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067597743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344712244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068665463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095423481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356159879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068444289 seconds)
  done (took 16.009552327 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071848476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143689898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075135101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083974495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098711505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070248595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099846026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070458695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123934082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066408121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112381214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068632767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0722109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096440451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088051783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067559696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067955198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067678771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097872904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069221499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085581862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095090208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069194652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095112609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069124113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08033788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095912047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069872989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068228229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097835154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071882674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095407723 seconds)
  done (took 3.82308221 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115883645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152059608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074987755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12902676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113020601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098018835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143242395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121460359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156405859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068410683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111664864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069419136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126963701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070208995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087352602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095920789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069915744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094963078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069636083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068688898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114025491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0686995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067478596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066971582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067068297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110115066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068710641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067641223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096439678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07047822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098014505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069719408 seconds)
  done (took 4.118041014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073064942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074996284 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109297739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084092338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069129337 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099862797 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073408504 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095661702 seconds)
  done (took 1.802724259 seconds)
done (took 26.870402038 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079092492 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069108373 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098924831 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081417581 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072811857 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.105790498 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067687309 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101373185 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073494905 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072707608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102185653 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068695726 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070688774 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094667184 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074839275 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067367456 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.1076141 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072014907 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.105906211 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080536721 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069953538 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100944919 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074825696 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106285567 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080140348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.105542497 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079002144 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073006327 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09636568 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07134821 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075837897 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11165775 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068618352 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106069996 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068485019 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067509096 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098799335 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068414836 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104999142 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07813894 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069411022 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074384516 seconds)
  done (took 4.62979526 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088403482 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090299412 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112668071 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061602351 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066147978 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093186906 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088128495 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087747132 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060416476 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087720961 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.083032669 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060951597 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062932592 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053815546 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087160109 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057758739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062015547 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082999515 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061042232 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059475031 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05764515 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081307309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061578724 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062147397 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083422175 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06256407 seconds)
  done (took 3.04579642 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075879173 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084428766 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124845796 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125579972 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133361983 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076676628 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10732632 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088099109 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113591828 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068329695 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071255341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09162443 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086221166 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106578733 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068683412 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084676283 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110520837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069759541 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10099621 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091646926 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083814948 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107195664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092962755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108665226 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068228121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06919462 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070115055 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079490932 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100706879 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07711787 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070824808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099523482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070015709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105413993 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072186901 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068799105 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.11748277 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077369985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105714037 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069255543 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070964736 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096158063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090552897 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.141664468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068432051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073781943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074377317 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075249939 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097493365 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086542834 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078616393 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094251133 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071426556 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067143595 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067180518 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07919543 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099329685 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070896365 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077038773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098526262 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080646275 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098250274 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084305938 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067905594 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102804108 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067819873 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068865124 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094719436 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092885521 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096168984 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108770351 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095958134 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069290132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076866935 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10322846 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074715521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067624327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110100406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077834603 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098584511 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077041146 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070965364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098690321 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088077892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095963985 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070035187 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069455533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100801466 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071209469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069072953 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107961069 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068847248 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070319955 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112036415 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067889088 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096367085 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074530331 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071965846 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094995992 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079695905 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100342329 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0693114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076560946 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095203503 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071778902 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104361156 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074832209 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066630889 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070675915 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071953789 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067324212 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099785988 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071117032 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096481181 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078064411 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074400124 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100112521 seconds)
  done (took 11.18989661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.186334797 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153304273 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099002336 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173165786 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077449088 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078638876 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176269917 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123192413 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068564401 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068402033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098166417 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115562515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136075656 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150129744 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079272519 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09609542 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084150526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145596504 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.177192274 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14201169 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112703022 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077555877 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098526751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069818583 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073804573 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110652804 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090802886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104329547 seconds)
  done (took 4.302437473 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081779313 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127171755 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074210079 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089127534 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12008919 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067842642 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.097978628 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070828529 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079656078 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10864212 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067651467 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101893611 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075884589 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100595739 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069689513 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074683664 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103371436 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070828107 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070984526 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101458721 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07742532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108330889 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072985216 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067369578 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102751422 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06816275 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092328367 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086825955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095823221 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091650467 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065890883 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104012933 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08228107 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097061401 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069297522 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068377958 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096070886 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068765552 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069545664 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095113483 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067534031 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057930408 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094546845 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080358599 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101875845 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057986704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072242975 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100907198 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073424738 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065154053 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099150397 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07135084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070176345 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103044271 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072887726 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100032405 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069606272 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066122303 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103158974 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068694433 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064941169 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09368537 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072957389 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066213446 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104477509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073030284 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093809559 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068127095 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069645138 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072952124 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066281133 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069326862 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094862518 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069952764 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072807989 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068648652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067763051 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06548389 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097737653 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070116172 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055086343 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096383796 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054558003 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070800103 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094216422 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067633449 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094578861 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073244197 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081961827 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097622822 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075059818 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096201157 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068442242 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071703055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088331638 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071301503 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083254263 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112298178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06803787 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094054771 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083328468 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10035143 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068034241 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057056861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102797977 seconds)
  done (took 9.72594752 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09467579 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088638275 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09834344 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084325467 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118819288 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088057277 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074457437 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102746973 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07004204 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108111449 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074359716 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076985851 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096206686 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077787438 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09429162 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104341653 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070261912 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104588472 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073172445 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100577928 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111168886 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082639496 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.102804817 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069837303 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072333841 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108475234 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090586857 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106915318 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078834717 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075362502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107755092 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090947313 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102217588 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073196683 seconds)
  done (took 4.219018077 seconds)
done (took 38.232322611 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201858431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419366135 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198553191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.141761752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245732803 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221697686 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208981564 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.205242267 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.424016239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.20058535 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.437959628 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.839889911 seconds)
done (took 58.890284334 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.216127575 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340261779 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473673711 seconds)
  done (took 3.969497874 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.605252516 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.272686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459321867 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197879927 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197841872 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503931382 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.828006551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.057722437 seconds)
  done (took 27.660369365 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.197474466 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.560804997 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.522113539 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.514476329 seconds)
  done (took 17.941463449 seconds)
done (took 59.538493425 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196836982 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.257531393 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.204529888 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183446759 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307322306 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217465624 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.217867538 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.438166731 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.202001184 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187623838 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.208185537 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202663554 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20810685 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.231588537 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.212357964 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199410185 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245341075 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.754022512 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578485464 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210896449 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203265961 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.258014137 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217407284 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.2011367 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.243371417 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199914861 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214882743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.238263093 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.42138529 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201201304 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.291053288 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.464287622 seconds)
  done (took 190.762394497 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199146627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.104426778 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.131705989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24347616 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.63583466 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396366999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333542864 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.724692924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217956085 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221791935 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.346804623 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199644995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.405207625 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.168642541 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207876037 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.309904319 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.365265161 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.422384195 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214771221 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.472071587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208180543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.223735117 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.167183622 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.31718002 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.206436664 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.253568721 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.203616316 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.211869035 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391321103 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.301739468 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.234702773 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246836786 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.767529488 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059595322 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224987069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224245988 seconds)
  done (took 148.709981904 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.481253116 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200882415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201002006 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201576533 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23083733 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200319687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.729774596 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720473109 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695391842 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.610237214 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265514559 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201563409 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479159003 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203132704 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292356056 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214352689 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202305559 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215930434 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226750846 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201206359 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201659121 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730901751 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214819708 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.223770606 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208176885 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202527203 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232393183 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595899632 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202072715 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232354047 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517948391 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247242294 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202368801 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.52514467 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.051496918 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312234334 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204357189 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232734907 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202731979 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470970755 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202781897 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203740885 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206016024 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.804830117 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20502225 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.730953067 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204845845 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.126906988 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20554431 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203232522 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.937693426 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.734307977 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205585998 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203035469 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206603297 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203548153 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203381272 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23428965 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.917568311 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299110245 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204186991 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207007511 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233454898 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203952962 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.423783022 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207109012 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.958822613 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259178971 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.423952662 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735321965 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206309847 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295899773 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32299361 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204567969 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204862992 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204491502 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204494982 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310715179 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204181827 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.594423849 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211460728 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206488943 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266338608 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205525634 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29729953 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205005739 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533996899 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206476468 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204637838 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938496538 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205004519 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296191024 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204943495 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204935008 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205213692 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.596494638 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722992305 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.426306001 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208469803 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.569217942 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211393115 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.607967614 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724029706 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207701233 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.850876649 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208674302 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31335651 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211213155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207767856 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206119868 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235866473 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206445423 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264850157 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209433177 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601959905 seconds)
  done (took 346.49044332 seconds)
done (took 688.589030935 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.893784729 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882783931 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988679362 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.879653045 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.843349313 seconds)
  done (took 10.640702495 seconds)
done (took 11.792277741 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387226056 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.389349884 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267228199 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387210529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23743443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405409448 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365419896 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229872153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305526372 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28714371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305748473 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2615777 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236061249 seconds)
  done (took 18.218256994 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521144081 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517443988 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273127038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517576209 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250818561 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525970141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403137129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411959881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.399379371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224752629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221437517 seconds)
  done (took 16.420993438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523815973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524151129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276343263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528506258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250489527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5264281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407389674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41819189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.399612507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224783133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221295466 seconds)
  done (took 16.455467995 seconds)
done (took 52.26586167 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217115934 seconds)
  done (took 2.371647075 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251768271 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410406635 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.23152663 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221442568 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218446421 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219336248 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221832268 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218496397 seconds)
  done (took 11.149156096 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216792362 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21691655 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216265969 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214163724 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215076493 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217236623 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215350772 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213828677 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213847035 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.214843864 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216968741 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217389324 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217047488 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216624852 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.215079036 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214340894 seconds)
  done (took 20.607680872 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216718506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214043996 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215499407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215137757 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214205976 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215317468 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216610168 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214836021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21485157 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215614587 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215977111 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214598355 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216751658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214723881 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215500969 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215800794 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21573052 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21604531 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219926299 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215631698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217110004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217281164 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216521614 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.215683387 seconds)
  done (took 30.337544582 seconds)
done (took 65.61950036 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.219307936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.88996322 seconds)
  done (took 9.265442879 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218910532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219396397 seconds)
  done (took 3.597845694 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218185507 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218544135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21813667 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218324315 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218625381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218804844 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218787165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218583818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219476323 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219627638 seconds)
  done (took 13.343891976 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219361822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219036964 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217323521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219874307 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218779255 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217887166 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219668311 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219579677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22029392 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217100128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220463224 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218158082 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219879054 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217352822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219924568 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218312867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216999338 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217909902 seconds)
  done (took 23.095857493 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220398835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221344926 seconds)
  done (took 3.59984646 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218781249 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216654481 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21789947 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219048987 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.217447278 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218401529 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217447964 seconds)
  done (took 9.683832682 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221124516 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393042408 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47754277 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.91195738 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222416646 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224310482 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.175880553 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225043052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227663592 seconds)
  done (took 14.237853333 seconds)
done (took 77.980635382 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.213666089 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.214633265 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.145286326 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23997785 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233600875 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.558954794 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247828946 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.46565925 seconds)
done (took 38.478321313 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.216434336 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.961883415 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.96897751 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.214198651 seconds)
  done (took 11.304721615 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.20795092 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.127226031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211718794 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226696769 seconds)
  done (took 17.934370257 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.838869552 seconds)
    (2/2) benchmarking "read"...
    done (took 1.608083442 seconds)
  done (took 4.607430594 seconds)
done (took 41.221338449 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223119498 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221920622 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22233168 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.218875185 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222524296 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.22094678 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219464325 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22344141 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222648095 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.222514604 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.221947025 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222091704 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220507525 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220402964 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222809599 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219902632 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219744887 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220245578 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220086741 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221882778 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220008807 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221600461 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219746822 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223022965 seconds)
  done (took 30.472729246 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223863526 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221979109 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223055765 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223359172 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221537764 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223536735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222969188 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220096887 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223443759 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223465804 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220172184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221199687 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223075705 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221713931 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224195539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221955093 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223750267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221382089 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223776841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220722528 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223260739 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221723489 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221260597 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224001204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221624355 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221637546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224916996 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222944135 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225712197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22223572 seconds)
  done (took 37.840858465 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228993172 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231167185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224651089 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225051262 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224720819 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224983596 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224948363 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224647536 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224976963 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226085461 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224288292 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226096529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225396814 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224309257 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225376218 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225756688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225585367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22519555 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225261329 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225625874 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22604073 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225510812 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225497016 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225894285 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226415345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226301642 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226063676 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226751045 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226575445 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225150898 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226060678 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225810462 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225351826 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22661467 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226362625 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225948491 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231345578 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233863506 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227831814 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22685905 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227847011 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226423277 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226140553 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226378614 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227584615 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227533624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225962851 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227273423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226727308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227042248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226531269 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22782619 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227437294 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226986544 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227157381 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22703312 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227441565 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227088572 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227464861 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227316621 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227719533 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227725391 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227604801 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228139164 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228791711 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228152698 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227632864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228568612 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227303699 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228046267 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228317887 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228447124 seconds)
  done (took 89.491861308 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22853368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226843296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225097941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225762325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22519959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227662116 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22677901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228769267 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226049083 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229572659 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228355009 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226879197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225904116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228296791 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228611704 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226576128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229154987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226678167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229707557 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230495867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230242777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226341026 seconds)
  done (took 28.174491105 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229819509 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230106427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226866886 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229918263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226965493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229334473 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229915585 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229650671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229853144 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22809995 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227695123 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230569396 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227545227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227821601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228289649 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22822877 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231284681 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226736533 seconds)
  done (took 23.2867643 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229028463 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228405702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230997578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228638215 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228428077 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230655073 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229465089 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230509486 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230732689 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229194523 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229986246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232707729 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231115781 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228063613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230297637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228580412 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231244927 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229157715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231520775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227719169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228713671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232027274 seconds)
  done (took 28.225208995 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230926552 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231509526 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228968203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228380397 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228976666 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231216012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232102555 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228740182 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231099379 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231326262 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229202116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231292984 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229234507 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23022812 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230143177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229957337 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231896528 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230221464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231990068 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229455326 seconds)
  done (took 25.776662388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233941743 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23273641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232208533 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233885614 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234699514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2338197 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234067651 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234329728 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233551605 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23515062 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233856192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23485743 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234387656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234241134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234462139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234664825 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234552735 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234087691 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234250302 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234880761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234928179 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235486153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235082789 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235221091 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235740405 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234793164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234826676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235232056 seconds)
  done (took 35.734567269 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234299079 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234828546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231946127 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232336266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231544124 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231131831 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232217815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231567767 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234200795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230874642 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234865798 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23411936 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233986532 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234261275 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235822027 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235149948 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234779497 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232323719 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23201553 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232526664 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235200066 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234806366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234816023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232546085 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232593487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235108713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232967423 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232457546 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235078674 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23332664 seconds)
  done (took 38.176718844 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254207343 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254353008 seconds)
  done (took 3.681482025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234014218 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235038863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235566336 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233200456 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233345799 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236659078 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236440127 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23336318 seconds)
  done (took 11.050752402 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236151342 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23649226 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235532965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236090986 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237155573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238867132 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245853849 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254774485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239632072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238335243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243405675 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246685393 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242560253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239052116 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237841752 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239409598 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23765683 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23775635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237509848 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238598225 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237868212 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241629964 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242628444 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234876182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239424006 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25344535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245704042 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237340818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238770441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.244519462 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240140081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235619025 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239196045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238878898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238374317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238960572 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250989927 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261347962 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248204201 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239707596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239660558 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236088311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241198996 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2424706 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24150485 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239528734 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239078966 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235148143 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239935752 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243067005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243501063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23831624 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235574505 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246977334 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242240718 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249322655 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256973732 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243022621 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248631806 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252939532 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255020744 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248473853 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242103931 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240505466 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251039464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264118749 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250412685 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255676127 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237748666 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239912191 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251076122 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255998258 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251055674 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240914802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240580138 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240451606 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241325896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240000675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250070893 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263359329 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24006428 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241021683 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25097421 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263118288 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241612161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241650945 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241952692 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241708306 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243787884 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254017081 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259749916 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242554602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24209342 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242922302 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245767579 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241839866 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24304128 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243157654 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239589748 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242192812 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241452022 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245800829 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252563801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241944191 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242619044 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.253063246 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243195645 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24312919 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254002179 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242936129 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242966723 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244010035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252231714 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239865435 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246685708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251371669 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.24287533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245757748 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242434835 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244081311 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254487325 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270640924 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243410021 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.2442054 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248740737 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253928525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243583887 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248170593 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244071672 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240447258 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240966372 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247079625 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243843341 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245968645 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24310616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246658136 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240889656 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243219678 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244404725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245865064 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246940469 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245510423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246254495 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24854914 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244079551 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246304672 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254644375 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246570941 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246705083 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248512525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241986549 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244981816 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247955768 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244154014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247229752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245087901 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244594532 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245411608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244374844 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245761733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245445982 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247503385 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251262898 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24566908 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252113417 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245922523 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243219827 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24556374 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245007294 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246072102 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245876349 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246009008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248783873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252648559 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245869661 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246247159 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251551184 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246127636 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246344765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24640273 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250439572 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254935497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246355208 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256604966 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.247424361 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247072369 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246963175 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248719367 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247031105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246464437 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250800261 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253750079 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262991457 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258428397 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249944316 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251061724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248895437 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25088371 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254979379 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248391053 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247717765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248038725 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248232627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247004378 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252229744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24756287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248391643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246800521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247003257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247826194 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247652807 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249794039 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2502864 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245094432 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247356868 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248184029 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248066322 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245178101 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247544773 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247652094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248330108 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.248212149 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260275428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246143433 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25069393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250881443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24981841 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248623002 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248978237 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251522918 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249839251 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258115073 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270696424 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250697711 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259383645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26807995 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249562122 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253836616 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249560539 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246652314 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252067475 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257330723 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250410131 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249500128 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249791179 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250428959 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249046008 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260321585 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24809786 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24983572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250559464 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25389936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247264542 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25274663 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251932692 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250770692 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254180422 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250004104 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250605756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253641959 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251251137 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251244452 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251425049 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254833942 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258419888 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259176006 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252618212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256260365 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252444914 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254848659 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253645868 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251346046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252526488 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267404279 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260549196 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260293534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255866922 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252210569 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25960076 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254598668 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257271991 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252257154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254791497 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254125522 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25280531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248997209 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255289875 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252120334 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254032654 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254336611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257125132 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251503283 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252008906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251899107 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252294731 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25220749 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253454073 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252578647 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257329172 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255677581 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252869166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25266017 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262989362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272194181 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25603545 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252659118 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253705269 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252984369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254805981 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253428681 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257309923 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260556993 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257814913 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26508793 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255769891 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265920729 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254307923 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25809538 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261562925 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251111675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25362837 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255721255 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253219921 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263405856 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.271827956 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255575498 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.25749869 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254316645 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254405378 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.254457004 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253615553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254706718 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254489427 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264620995 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278859095 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258725415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257582247 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252584517 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253920496 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255620272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254978124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261785994 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255473038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257391973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.256274909 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257883827 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254418215 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255283612 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255497635 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.253598165 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255885923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26431371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275157052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259197143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255406879 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267644463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25617855 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266033009 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.274597289 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25660447 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256873344 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25561477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259883117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256887211 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258591555 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256575149 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258788088 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259806444 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256883839 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260947551 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258108102 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257528095 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258205733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26599564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278969775 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259063631 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260871388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.254349247 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25886727 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261203508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256735096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257180152 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259711344 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267826291 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26496165 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258467677 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256915098 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259567638 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256987334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256846336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257715398 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256886249 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257474972 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.260323941 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257897283 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265545485 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257445164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.259417266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260208897 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259023773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27026436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258844885 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260812306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258929972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.258611103 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26037044 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259246826 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25821368 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260056486 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258740777 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26101455 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265802975 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265667836 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26298566 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259666897 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258608582 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26058507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.261819116 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258931122 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258129221 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259114383 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261462519 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259032803 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262135253 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259133288 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258835816 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261510866 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259213694 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263323856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267118024 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261051554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256205318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25954083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259649006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259413091 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261754978 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274322248 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264687105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270426904 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269178447 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263152745 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261090096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264115644 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268224602 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259517776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.26195465 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.259101064 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26526411 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261492959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.264495672 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261384761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270817062 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.262077742 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262262412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273911604 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284115191 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260547447 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26295479 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266656228 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261443296 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258066007 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260689981 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.260851743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273739552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284762553 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261668367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26451773 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260675326 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263737366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264918748 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26146305 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.262663133 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258359632 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262326206 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26140865 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262520824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.259182808 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261024173 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263156988 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.265393795 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270116631 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259367198 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264345858 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262980641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26277636 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26239375 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261978822 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259475457 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260336802 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264731453 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262785739 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264376596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267565978 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.263495919 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.264564148 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263907472 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262763301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265989492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273699979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269306501 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260905494 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263071224 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.265120327 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267224233 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262705867 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264441969 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265051383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267315775 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263899567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26338877 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.262875913 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267452448 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281763981 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.285797408 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263812089 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.265650803 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271762981 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26389454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261157037 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.264530181 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268395196 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.26782853 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270390663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264058911 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275496948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283080847 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266713456 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26877405 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267609637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273238165 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269280078 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264963805 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264879913 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.270855374 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283962106 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265628782 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275267461 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296002329 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.284317569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267432511 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264991352 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265226526 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265432199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269133013 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.264491667 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265639212 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265286636 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264217031 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266879188 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271789179 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.267463336 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26514875 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2655194 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267042272 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270027293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261995585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265317218 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.266123408 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265535204 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265293135 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265877327 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267537248 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281171079 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.277559354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266062364 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266375705 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264098373 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271082043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270314803 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278565838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274045309 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266141206 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266527279 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269597863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265800023 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.26475271 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.267845725 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267939348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267376567 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263703669 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283072828 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275846567 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274820002 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269792502 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26735778 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267928804 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270797688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267190778 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267491272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271878698 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26933394 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271620411 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267023041 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267931735 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271523702 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275198475 seconds)
  done (took 749.559335696 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265193677 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266185265 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265482822 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265542507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265836965 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265247531 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265925229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264942232 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266137186 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265719663 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266041487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265218643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265978558 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266220239 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265764823 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266134523 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266067194 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265507064 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266040958 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265825499 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265303178 seconds)
  done (took 27.785114458 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267940919 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26624256 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265284266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268556415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265828541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268394189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266317384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26929166 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268946483 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266345475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268587605 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269030139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266518259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266478337 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266347724 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268595958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270006887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266982233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269586655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26699408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268919467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266986779 seconds)
  done (took 29.094265144 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271216594 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270038589 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27058206 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268199912 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270166262 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.267229552 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27061154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27048517 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270845944 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27299988 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27036222 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271698417 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277955612 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.275381494 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.273583457 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270210075 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.41475357 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.270315169 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271136426 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270741241 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.268455112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.27932323 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.267900804 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268535928 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.270843895 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27169495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.272110014 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.271702217 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271275557 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273188816 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275264373 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272034465 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271337238 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274321918 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272354741 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273066706 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275714068 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271136359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.269833563 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.271504079 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281957984 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291863757 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27150194 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282344025 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.272945512 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.272939786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275484235 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278800883 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270156647 seconds)
  done (took 63.716776738 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272548225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27234886 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269085493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272859064 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.272675683 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272504191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271591469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272553854 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269278447 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26941581 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272777752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269852905 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270154211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.27270167 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.272935314 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270439195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270863209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270222434 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270941766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270784141 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270837142 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273590105 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273760699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270772997 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27216884 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270881508 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27164645 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273431679 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271103115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27062904 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273188486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273290301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274132955 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271158384 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271813649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273728041 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27468773 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27182726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273931641 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271785417 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274090713 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274117002 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274552798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274880725 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271406985 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.272411266 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272409144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273202298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27281551 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274814392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275658395 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.27285066 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274269591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.272356004 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275153394 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275151433 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272412356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273088815 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274563643 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273069554 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272054067 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275318992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.27436265 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275781782 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274616167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274391384 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272498861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275462084 seconds)
  done (took 87.754195114 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27645748 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.275843921 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276979529 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275291093 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276340418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275755063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275791316 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275723901 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275495905 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276062067 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276764902 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275906659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275116768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276684463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276024676 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27665415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27605554 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276631045 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276444199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276373419 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276522862 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276557733 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276952597 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277088866 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277182012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276637448 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277187039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276441883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277840052 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277412624 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277687607 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276945956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276073002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277604398 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277580766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276535422 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27686069 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277653272 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277803533 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277790632 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27755639 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277648329 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278127257 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27719054 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27746566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278027208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278257465 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278283443 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277878796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278076402 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278405723 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278222232 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277634403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277923568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278655042 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27851473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278033038 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279066949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279718744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278834298 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277352851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280356506 seconds)
  done (took 80.400438227 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27880038 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279460218 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276377979 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276664891 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278522305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276562444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279148128 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279021298 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279330021 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279887456 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279778386 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277211133 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276924932 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280026767 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27681728 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277115016 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278353678 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277341816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279568713 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277093189 seconds)
  done (took 26.780095582 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277318338 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279531423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277120732 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277532893 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27988072 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277776428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27999435 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279797951 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277919868 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280154535 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280161122 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279864456 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27700764 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277783239 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280810986 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27817279 seconds)
  done (took 21.677383894 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279012609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280788633 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280049324 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280631147 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278699108 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278221972 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28016143 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278929598 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278727927 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280821805 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.280942426 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281295263 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280730564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280609225 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279155614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280695307 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278570982 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27755384 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281820457 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281121756 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279500799 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279006063 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.28354301 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282694837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27899227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280042111 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278631847 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279019528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278857369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281971169 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278944915 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280487203 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280551161 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278679633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282325809 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.280205047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281675109 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282560155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.281865118 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285080326 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283877863 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280368541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283305583 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.283202772 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280398343 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28341371 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280626828 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280737963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281146462 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280554218 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283435602 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283038119 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284121983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283645619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283425529 seconds)
  done (took 71.666421715 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283502074 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283745626 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280713888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283184284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282789016 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28124418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283756242 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281328337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281155819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283711256 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281962713 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283090912 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281428628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284618436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282127874 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284125543 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281312353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28236723 seconds)
  done (took 24.306129987 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282367106 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281891962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284876156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281338859 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281350564 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28465788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281217885 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284369793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284847338 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282377201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282340447 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285178107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283935568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285223736 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282745916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281810165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285813858 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284417412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282867758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282249696 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285273097 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285065751 seconds)
  done (took 29.456965478 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.285216117 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.285133734 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.303851874 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.330432068 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.315272809 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.284967426 seconds)
  done (took 9.026123326 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283423526 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284937255 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282580519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285814116 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28585955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282923483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283423364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283716147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285721226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283748445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283566817 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286114322 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286170633 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283553449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286197278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285935911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283276499 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283120302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284478526 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286686613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284509408 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286713996 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28412625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283830388 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284722208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284119749 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286636867 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28552613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284277443 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28748374 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287249433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285318396 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287377749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285123046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288058733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28628639 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284978048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288343427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287309048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285545129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28783811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287239179 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287482484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284558891 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288172821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28586593 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285296743 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285460132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285473847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28770043 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288251929 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284475528 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287989921 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288441801 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287734319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288468925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286516997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284855463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288775748 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285885544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285656128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288330542 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286374023 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285996487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288436413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286842709 seconds)
  done (took 86.090969235 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286698278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285871211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286463721 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287611035 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286576466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285641807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287179076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286034696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286311911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285948657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288622115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286345489 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286998945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286210708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285965888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287550146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287490927 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287532056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287327304 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290207896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287594519 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287537825 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287065687 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287250916 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288166844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289467665 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287935379 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288093338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28754936 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287834254 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287536905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288132096 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288054728 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288455437 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288185698 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287797115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288542182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288089074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28776477 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291061577 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288009027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291538228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288660593 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288374031 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28903397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288539316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288342859 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28846638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288474356 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288675011 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288834458 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288720394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289346956 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288639275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28851757 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289899022 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289338669 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289181894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289336085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291020405 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289143923 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289858545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292164506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289587215 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289254976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290152247 seconds)
  done (took 86.249437707 seconds)
done (took 1746.635469148 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.406831594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.338853187 seconds)
  done (took 13.973718269 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45764337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.407718548 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291468387 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300438143 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292237414 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.288262436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307622542 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.293254536 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291099862 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.291790562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292234417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479871992 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.297085083 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.292611402 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.292536201 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38530844 seconds)
  done (took 42.49759975 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331407517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.297678597 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420500028 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311210913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331952055 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.4932845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.349603114 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296861813 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.467976829 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.344826172 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.872632368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330685675 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298320824 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.42045518 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316122918 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493546622 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552515164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.875730166 seconds)
  done (took 30.034912795 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.746689413 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.292133575 seconds)
  done (took 9.268519056 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.306422153 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.288370682 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.312394274 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.287969167 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.32000794 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.369891973 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.325721153 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.339531675 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.312290241 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.337566089 seconds)
  done (took 64.437927415 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316726601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.297672184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297607004 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296761035 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287882588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.289034405 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.296329954 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.290267295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.920457297 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422672785 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316339437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303215673 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.297028143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297939621 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293450188 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332316388 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.432747565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294450613 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293153425 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.302902312 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297469523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423916017 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338516715 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295217468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.420042613 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.944448086 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301910401 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303460068 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426355242 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29437816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296461789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297879522 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299834978 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.862393436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.743815772 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.318694002 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322496357 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306545923 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293698757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413934373 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29834682 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304714831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290437767 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.724859647 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450058348 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.409938208 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.612981342 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.301887504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299288263 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358567519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.299365554 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299786036 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.328489446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07323854 seconds)
  done (took 109.36726539 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330704283 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.780792773 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461494635 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309733214 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819063029 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759677424 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.290754687 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575970274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.310308077 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.777616263 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580731961 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.657610017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291194711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.29196219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.290453331 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293774322 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.554443455 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.60841738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291855604 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297553306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.345111611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.810337077 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.527347368 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47457898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33245917 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752528214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.529715718 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.657088581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.295153338 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292502621 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.595796115 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300668549 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.29253172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29279274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572200707 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645487443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625812727 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.292344885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340559824 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295084427 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.313212922 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748344765 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633545639 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.542440574 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.667750085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767460828 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.293564706 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293103428 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299720863 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502285448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.541075526 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.80006587 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.5328025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.307939205 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.57235628 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.29273711 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374340733 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781106774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.638399603 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.651547358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326319839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294828312 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293890662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.84662061 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296747868 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640172351 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.500445328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295622594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.639423159 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.641090557 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.639426615 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.781072634 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.338859237 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3001777 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.328156859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.816011411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.599520529 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780019521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294526647 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295026353 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625364098 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.295420065 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584266963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.85905202 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.794061329 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.350730562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318800291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.295371596 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.781471601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.777914758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.556441781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.671776562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586686203 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.360133634 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295204741 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.294769705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.320149124 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.543015823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310652089 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658659548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780704089 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.074549756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.343681167 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.84987889 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545962143 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309727832 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297244254 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298387776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517803338 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.372577628 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.316223532 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29564343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.781118748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.170583746 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.425273548 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.027491635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.601058329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296872841 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.800271174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30320206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781642985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326129416 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.846425911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.634584598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356649523 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52376918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.674383619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.31270305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.800887468 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.847190781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.533301655 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.797526791 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.089201093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.297102456 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829506024 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33778557 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.308134127 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.483275108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323937063 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.583213483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320656347 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.80701162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.338321718 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583395713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.517748689 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.814444465 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.355812102 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.606237638 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310734534 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447757945 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316747213 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312295147 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496916563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419239731 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300924404 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.855255308 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299288596 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463387663 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.854682063 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.338367721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.606196448 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299989978 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304475811 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633399738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341474707 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.940463916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304584307 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.586312189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.313250718 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.755699391 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298885767 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.848528603 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.523307252 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319402146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302648156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.104032429 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.298763102 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445453799 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475871214 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.027977993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301364627 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758393882 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302201046 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.549131614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315273265 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302575101 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.655007833 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308689941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.302412752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.34117364 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302868354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301137107 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76928524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.34268081 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.023711142 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455645599 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807334422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.611865394 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.804391678 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.36273012 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.319868003 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807714638 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.327342067 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.608371376 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.301437405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341567945 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783981133 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30189296 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769336059 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.827146023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332670297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.593916552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.303075479 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393794553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301287659 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.558400455 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655294198 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30154837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.302633004 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535233051 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.553798649 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523100537 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320151693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.329469307 seconds)
  done (took 843.765526264 seconds)
done (took 1114.573053874 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.302313643 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302856929 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289381436 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304017673 seconds)
  done (took 26.442788513 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310785085 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30711462 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307888884 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.307098204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309586009 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.308349805 seconds)
  done (took 9.096768463 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.514190344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.301129117 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302999873 seconds)
  done (took 19.362988231 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535382647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.551742862 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.688047625 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.465220871 seconds)
  done (took 10.486788455 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.308303739 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.309000329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.309244651 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.310172704 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310882971 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312460572 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310028866 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311031803 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312443572 seconds)
  done (took 13.037640355 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.299748245 seconds)
done (took 84.971078078 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.308404732 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.553573455 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225055846 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.555366021 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.301036392 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.305204038 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.689503458 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344864027 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.055527421 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.367412189 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328648845 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.32842229 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.725861313 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.306025205 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.47540293 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.278215385 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.673632946 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.303877287 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.330267685 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.312344449 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.288528502 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332719419 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.619018272 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.385344116 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306484511 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.314147607 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715677618 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.364379839 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.186021715 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.781302635 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.329615588 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.664903517 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.3040115 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.367393221 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.329851347 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43353583 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.777818477 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.595516664 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.066907093 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.245482135 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.319407994 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330409859 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.629017686 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.315630151 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.386044505 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.731957778 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324557743 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.351843095 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.420363547 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.291539882 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.586962967 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969706194 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.715408439 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.934071555 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.364237129 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.090231868 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.404677888 seconds)
    (58/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.086276535 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 5.61565863 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.903266698 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629379891 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.437300897 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.152442039 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.877544982 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.338850571 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.431176713 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.132459702 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389806908 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.747149605 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.305635625 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.354997336 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313857182 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332945297 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.771930824 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.356250206 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.475758754 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.379732054 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.959122703 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.392824951 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444610395 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.503466228 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.687250784 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.357452542 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.689061426 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.664994652 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915336446 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913708965 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.611505412 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.129338347 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.626046963 seconds)
    (91/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.024803488 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.315758485 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314812556 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.090466695 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.308347245 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.638018799 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.388339863 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.309615237 seconds)
    (99/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.971986244 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33710891 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29610048 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.979759677 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.664509042 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.359188404 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.30651087 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.208794567 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.497891706 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.311736282 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532894157 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.297998487 seconds)
    (111/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412097424 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.414284566 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.308380023 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310510236 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.901881254 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.815619407 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325579883 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.330079337 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.565321912 seconds)
    (120/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.522539889 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.457010456 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.898604262 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.006992166 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.105908258 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.739818778 seconds)
    (126/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33689028 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.567717886 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.80456043 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.042916319 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43758024 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.650103668 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.296599718 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.571680863 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.848260193 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.960927206 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.321585399 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.72487027 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.714441659 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458088223 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.659335251 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.429982122 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.33675829 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.330107607 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.397855904 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.46989839 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.949937386 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.339355479 seconds)
    (148/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.677240353 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130574266 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.420390224 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.30641671 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.4199621 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.770672944 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.406644366 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.377000459 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.332082646 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.688324863 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.313083987 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.722855087 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.931552453 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.983456127 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.384355714 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.313012524 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.33044834 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271037548 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.308241909 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323020388 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.187781749 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.513668252 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.819314146 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.43087477 seconds)
    (172/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.818502754 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.71423113 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.763092483 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.680687042 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.392523939 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.301634441 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.584681314 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.662913239 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.314233145 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.747182446 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.297288458 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 4.342836962 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.764853719 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.281116331 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.121100489 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.181312321 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.330170569 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340556667 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167982472 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.338946095 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 6.312108086 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.376558068 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.726783548 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355885795 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.337558235 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.811603387 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.64950946 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930533964 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.436841414 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.905277267 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.338843729 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.368895936 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.412837821 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.397151671 seconds)
    (206/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.884487996 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.697884384 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.728214586 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98484749 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299855366 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.879177363 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.633515584 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.53186912 seconds)
    (214/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.521384075 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.854330367 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.749495401 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.535891002 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.386976709 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204826746 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.459772751 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.316738951 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.800915772 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423521814 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.29893603 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.462534544 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.153445444 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.336967514 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 5.322117539 seconds)
    (229/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.300366064 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.187974208 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.754912569 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.602838313 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372149604 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.807917976 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.879459146 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.188320318 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.209203394 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.951515501 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.316822736 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.411776479 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.314749816 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.455460389 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.744177272 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.755104567 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.381025597 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.32537307 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.349457302 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.927253488 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333726789 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.346812134 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209935448 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.793757523 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.813177273 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403426917 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.315405659 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486369801 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.357596942 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.435892465 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31744269 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.012244631 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331152883 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.532121305 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.19090103 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.710173199 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.96918028 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.116207275 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341362185 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191661372 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300542646 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.87318374 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.700278929 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.306215542 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403534882 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180783759 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.364911793 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.507405621 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42576683 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.413315182 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.906184003 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.938935496 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.346177252 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.401072272 seconds)
    (283/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325806197 seconds)
    (284/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.401946646 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.621588882 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.400716148 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341902008 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.376215593 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.398804777 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332436356 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.436985405 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.476788426 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.31886744 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.317211417 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.142715883 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324863489 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.492483069 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.380612397 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.948606603 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346829455 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.182331338 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319204875 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.34442714 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.341262403 seconds)
    (305/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.913780808 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.617354315 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.634759148 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.32548143 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.321921811 seconds)
  done (took 927.698379671 seconds)
done (took 928.943814519 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.354670924 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346750486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.331131183 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35176376 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.443132266 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361754282 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34122336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333273986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379387068 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381034542 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.32978143 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.360131591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.331446719 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.331114315 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.329847892 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343975133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346713742 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.33193687 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.347104551 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.341435938 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.347173323 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.329984029 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.380484674 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.358879125 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.334661458 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334847779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.333826741 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.351489122 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442967339 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334991769 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.33533275 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.344308692 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.3690478 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331849661 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.325658295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.351444584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.343710251 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.343080675 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.335560984 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.364298108 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.751550453 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.332360775 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.333287248 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.332204235 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.333350491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.336767023 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.333810693 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.338865856 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345474659 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346827083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.74492284 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.348291035 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.335909297 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334120143 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.343900163 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33329785 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.337167005 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349354759 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.352950948 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349263479 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.380358068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.340825288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.335749896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.350642455 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342364109 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.784463065 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.328936038 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.337905874 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.756178858 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.338963435 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.783137592 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3429423 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.335339744 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.3483569 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.366046662 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.391937044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331458291 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.333321523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.341150362 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.333157946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.343750295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347316493 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.339300308 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335037642 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347888082 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.365304294 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.34586371 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.336277481 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34475284 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.355247904 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.342562298 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.345659949 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340136049 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.330397473 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.345450751 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.340080744 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.337588685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338882049 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.340218836 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.346923853 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.757665425 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35226745 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.331651165 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.332537616 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.335101468 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.35027865 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.760674346 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.337657714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.357685627 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.383387088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.337243373 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346561767 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.339968462 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352396275 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.345012896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.339271665 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332316751 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346915616 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.755054889 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.351871835 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.33939613 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.334891451 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352125398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.338942096 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.333025087 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.357127524 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.337822521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351098029 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.457695954 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348099675 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.368593329 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.335941381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.340865745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366792219 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353222145 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.369146901 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.340576512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353494434 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352918118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.334332103 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348629037 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34820431 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.339327104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.344059531 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.331741541 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371511837 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350364647 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350240637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.358817344 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.45865124 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.335046323 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.349124906 seconds)
done (took 225.46579921 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396190902 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326158953 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.437474212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332274994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434650769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.433854217 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329906138 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.3314214 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331061509 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.735389177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331217038 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331051946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326811109 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331565321 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416854439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334370796 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331430846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.678657867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334444989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405748513 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.330497781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331253882 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333987986 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.715823996 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.326720632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.336007844 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.406704884 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334362334 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679866739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.33392326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.33584685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.680034233 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.424966085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.352075439 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343954458 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34153204 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.43625365 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.353323864 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416042247 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416755296 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441205682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.373528194 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335022566 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333108427 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.33619305 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336755093 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332617829 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362369312 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.333469644 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333048437 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.680487951 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345648022 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334295479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.333817892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333675909 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.365200745 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334036678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336227216 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.427355637 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33698724 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399655416 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.716933624 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739626667 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336626753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.336231935 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334117714 seconds)
  done (took 148.618559385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.404086492 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411765858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452363975 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.341730526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.389161976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.454589938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.337820914 seconds)
  done (took 11.062161563 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.344625096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336868461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387113777 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387074864 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.336451584 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.484443784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336987995 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348604412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334797392 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.393819672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.337990002 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337784445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344338068 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.33292561 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386697444 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.350291636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.453793224 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.339680166 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338282955 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490387355 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335287391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.344200881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390468008 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.350572158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338854699 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.345622658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940472774 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338390373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335793639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338541246 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336222014 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377225618 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338425801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.340013282 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335598604 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468211082 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.33826049 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336419238 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339227392 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.332187058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339925525 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339726229 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33870881 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336779605 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.33925047 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.364294537 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339437968 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.339047906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.338560501 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339545029 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390400303 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339798123 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.336810887 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.33667031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.400773922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346133523 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.339723144 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.336995734 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.339519534 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337190595 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491769668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388464164 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340048095 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388555949 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340911792 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340752679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340525844 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339865121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395422151 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340637358 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389254717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338174737 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515005287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.365399099 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341436632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.343722995 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.344218186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340342799 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.336582105 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.34762329 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337791972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342378018 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348073991 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338497029 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338576603 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444115071 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461146633 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339323584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354987542 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348885118 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338500429 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.395453055 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34177054 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3393639 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394454256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457897047 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399546465 seconds)
  done (took 153.886818297 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348239484 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35064179 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.344839153 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359483511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343340505 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343101704 seconds)
  done (took 9.366891144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345295055 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343353964 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.342135745 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.341588431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34240817 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.342212635 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342308644 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346404192 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345242045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343610405 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343471384 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34426971 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343776232 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343474267 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.34367007 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.344242487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344190608 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341065567 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344350923 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343307928 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.450381182 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.343796493 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343122814 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346092719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348370062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344102133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352664813 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343680634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344422862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35377483 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.346843183 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.344698257 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347265223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351864717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.348919335 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347598547 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348575605 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.345009754 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342488695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.809833105 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.345819031 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3444294 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.345559046 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.345831918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.347331253 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.350876083 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350474694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353982598 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.345431619 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.346466186 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.346840537 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345586512 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.345714043 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.346146713 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350592636 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350881592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.35087438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.34606551 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.345757139 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.349686765 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.347289423 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.346147116 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349782315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.349399177 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344149574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.347362248 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349167975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350525184 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347559426 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.346587353 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348044557 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345481281 seconds)
  done (took 99.778824115 seconds)
done (took 423.979428581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.568576726 seconds)
  done (took 7.850145468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458642246 seconds)
  done (took 7.743221182 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.077889188 seconds)
  done (took 22.364671903 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.439354044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.370071489 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.361066194 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.345197883 seconds)
  done (took 26.800424911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.630298755 seconds)
  done (took 7.91157891 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.340350857 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.365692988 seconds)
  done (took 13.989018219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.459580791 seconds)
  done (took 7.741216746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.865503321 seconds)
  done (took 8.154665313 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.353935715 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352458771 seconds)
  done (took 14.256338411 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.326048755 seconds)
  done (took 7.607061071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.455394556 seconds)
  done (took 8.73978939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.33774822 seconds)
  done (took 7.620926539 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425102901 seconds)
  done (took 7.707475096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.447500586 seconds)
  done (took 9.729257985 seconds)
done (took 159.497430142 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.340544285 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342453101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.341162669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.341931002 seconds)
  done (took 26.647926499 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382289078 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.38088536 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.383444132 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391433611 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385081275 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382842946 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374055503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374463453 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39294636 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.384720753 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383358019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384489269 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.382259861 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.37398675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384166394 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385025374 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393986711 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.383322888 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374474756 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385884606 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350412227 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393577598 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.385179556 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349056073 seconds)
  done (took 34.426116551 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.547523953 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422521839 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503547693 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402802383 seconds)
  done (took 7.15964548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401012002 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40324952 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.416057347 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.453744727 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.4795705 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.411924347 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377081484 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371579881 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357974259 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.403270477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.478537916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.418895681 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493748594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.349724136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.536418258 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350094661 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.349875297 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.401402844 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454062898 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.472257987 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350758086 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401812703 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406244283 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419651961 seconds)
  done (took 35.243211219 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.349228579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35742732 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.355291047 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.350246186 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.349961584 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350408339 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.356168393 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.350390572 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.370307814 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.350493683 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.349016891 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.350675962 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.349777213 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.350521866 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.350550566 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.363179116 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.363397745 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.351703897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.353862575 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.35698386 seconds)
  done (took 28.365598917 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.344907582 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.257099376 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697396441 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601344939 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.345221353 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.345137125 seconds)
  done (took 28.877366043 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.426157228 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.558223064 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354619655 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719931349 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795823882 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3539858 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.353388176 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.594403676 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917222773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923084754 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.413758431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.407783485 seconds)
  done (took 20.108024048 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.361517764 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.347707486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.350269725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.364105915 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.411438275 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360658166 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359367358 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.34566025 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.414716544 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.41903592 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360131294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412309034 seconds)
  done (took 37.797363901 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43411995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398355579 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.371524672 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238912598 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.733436583 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559563006 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.25808761 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811833673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.352691637 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621245069 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355912513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439381824 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606626578 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360080731 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348907618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.384368021 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577613255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830456605 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350050347 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.454204401 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375297152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353006573 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.642769753 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381317766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56034607 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48662641 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609351117 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348629152 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647292889 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364429207 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35912455 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349223616 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622391534 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042466544 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444030777 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358363054 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263969642 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064000361 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352486223 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.54976945 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355229765 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354845048 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360240022 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349402261 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284585475 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355980539 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829410502 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357009456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.061094675 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349648662 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360337181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444340403 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.353869472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16777152 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519048836 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35045794 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.347441836 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356723952 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924459828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013242317 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367364923 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.287748035 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517222686 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545267791 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986491244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.453736191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.353761424 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355844077 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285606914 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.524608479 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375531736 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689419194 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372378788 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013041099 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071163148 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353425688 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285755083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891900739 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368947596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.289680732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581115393 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350937156 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292010738 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.30755415 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.28712515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047573834 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361409378 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.732773354 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361194274 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.820566833 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364755142 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369153077 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375652513 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577192604 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.237247966 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352625216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.353587995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479630969 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374215896 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.822851017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292942711 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.356636606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611463932 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.564940961 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352108247 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.388341737 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583012332 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355049946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.372896295 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354317919 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368703142 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.955114629 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371530987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018883147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376957646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353326223 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085109014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355910203 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.457970808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353067571 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617898452 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.120386782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35466961 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435253743 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36238204 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354636894 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56632516 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880286797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353580399 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357422521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366856418 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.367007272 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.354479261 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313624055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.351511075 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387064085 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.358523101 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579760242 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35405843 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634156276 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28889498 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693758385 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420616432 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.578888096 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.601166119 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.354543417 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618067999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360236288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356507602 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369352571 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374547686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45360113 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378526142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.361286349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617112447 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.359011427 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359949255 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580407702 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361661399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364125593 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.361266089 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295168597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957464128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331580999 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361596059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250817262 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.370492358 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420079012 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361651121 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.366414635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.255408492 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38144768 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360669156 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.36050199 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586033222 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367886925 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.599909642 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443531536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.579517789 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963795806 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375401896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.291003692 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.068026654 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.05179315 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357760059 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293790719 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35711063 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366342949 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36856243 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.684203485 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965944972 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361615355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.486255398 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366450643 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368032406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.362102941 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357750818 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.246234167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048679198 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370730944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37206859 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500781061 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.372192975 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292154418 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.362609979 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363206028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35788362 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358049225 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391535323 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.494293541 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861665499 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622251271 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.238857403 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371773628 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.678135067 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.394539143 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360817288 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358089559 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363754497 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.382197748 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37340377 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.369799072 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.553481376 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03394281 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92975366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139560536 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916295069 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339601807 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.361926556 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364807672 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839808356 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297040956 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918324572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561786222 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842047923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319699484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585809074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.634845191 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16279877 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37278732 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589195843 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3321462 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.367078412 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377094652 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572813681 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394782304 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372324883 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295250497 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.647377386 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630520564 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365118299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447275049 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832530628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362687914 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368827096 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.359453507 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.707826297 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54971405 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.078029664 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.540069843 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362291903 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368642954 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863270102 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368024849 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592046254 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996200728 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363082577 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.591608385 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303608734 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371744349 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372063513 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363158982 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.762793446 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.368998398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620642668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373781406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29667498 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360666283 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917765205 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.222033856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.368780459 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362386233 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103293214 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363156775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666170134 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.381387357 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.241046457 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37070678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298150539 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297762125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.055328688 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367785718 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334266247 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855548474 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.47500998 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474644979 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384659049 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589362155 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622356203 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.377343947 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969280826 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595440214 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.356396485 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389788371 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.464623106 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362948792 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.353550779 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363515398 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601056622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302016951 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591428802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.382826635 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.279517902 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363812025 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578672967 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363101035 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374970616 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62561557 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.078898865 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.37160284 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138423807 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394493534 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370946969 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290388401 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531143874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372508515 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444798751 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376479334 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.376757113 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375583949 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553267574 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375454183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371562575 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.379329544 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459234468 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078739496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.253026168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.371928902 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978361181 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122032807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983479638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384235711 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36567401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371975024 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300788104 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514854902 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596114626 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639667245 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485252646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.581479781 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387977198 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374779413 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372781977 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582867083 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641066499 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267120237 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365866103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384507178 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.366593177 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377641125 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578752305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868492944 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920206512 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493315273 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37127924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844208441 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647480873 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368845596 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36751517 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964510041 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.380295803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.727721525 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.373370038 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36769889 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539641819 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37821506 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071332065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.380440105 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.523491626 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.142369924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.526152559 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631881168 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.795206388 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379821558 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981256357 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11417993 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637580172 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435229517 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380147531 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.504485598 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516216357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.372442645 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369097079 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3703894 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424601637 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.079143515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.378930975 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989487153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638679191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.368064968 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.379786259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395100511 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.378880313 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595576877 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079054907 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595267689 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37931249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376143406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188291685 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991354275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386958266 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305615262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374203797 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628630371 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610094383 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392271641 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.82312286 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.080972197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923660279 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.346774358 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392065917 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369899472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120546093 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991996493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.260910265 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87486894 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936783724 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37054636 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647553318 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.377243038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378742813 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652045038 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.374240501 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375830277 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385595441 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.981650988 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178982073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.392915784 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584056475 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.311819658 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71832418 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117272003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311518002 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379596678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.573850197 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374175374 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492525741 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383365323 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.377236145 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387713728 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.133341411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652655245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.377767344 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362745529 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.358152638 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402819377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382071388 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642587864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375148071 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.22981453 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725285389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631688241 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380937221 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.360455127 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.377606606 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372722555 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371158762 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.57963986 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.699940847 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93475947 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.381364384 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.390085925 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377401315 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591108796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585501112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378459126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388788104 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381485644 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392523852 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.27968335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.882327121 seconds)
  done (took 1614.728650954 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416033286 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.380075372 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.404374864 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.421233635 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387248237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506979829 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.423687385 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395192936 seconds)
  done (took 52.649016347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.380822785 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.61688119 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.409595277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385466689 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.386924704 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.378115216 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.838147992 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.386599109 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.383988196 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.385639653 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.381558603 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.374401452 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.045874499 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.388623117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.378722681 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.362534406 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.387061897 seconds)
  done (took 66.192706833 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.381930057 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.595249696 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.404749762 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.379464518 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.780639131 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.37590256 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.644713121 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.393816327 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.374953288 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.547299832 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.048306848 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.408216945 seconds)
  done (took 80.650914627 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382624342 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.383524335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.383200501 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.382931811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.383479096 seconds)
  done (took 8.230965313 seconds)
done (took 2042.362002412 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.630212643 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118076284 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.079727852 seconds)
  done (took 5.513085082 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.526408432 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.576632899 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713003561 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.715746173 seconds)
  done (took 7.851594968 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.677403216 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788460183 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583984321 seconds)
  done (took 6.367270408 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.857674382 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.404908132 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.455648658 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.37630332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.379608027 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.379036077 seconds)
  done (took 20.453867396 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.38244986 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.385903778 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382472207 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.384553254 seconds)
  done (took 6.855492632 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.362564114 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135544936 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368305695 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.384258253 seconds)
  done (took 18.569111068 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127672015 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.142104419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12706411 seconds)
  done (took 7.714664196 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.381261125 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.226721549 seconds)
  done (took 9.925908807 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.706409538 seconds)
  done (took 3.025332364 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.515451422 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.647796347 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.458164128 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357837876 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.481074007 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.473422375 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.139059468 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.684989257 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.344000709 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.703836435 seconds)
  done (took 29.127172099 seconds)
done (took 129.066996406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.334846871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399108671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.583010823 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.309587235 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.619512027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.582705139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87709587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.279059202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.996359667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.808804714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.31432272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.619701801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.597027372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400196117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.596577365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393293983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.610734386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.376000026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.035036549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.19654809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879200252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.947944819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.143819567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.157039997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.613422574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.53446111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.530833638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399660485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.211714068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.730419044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.537581874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.379303006 seconds)
  done (took 194.315464314 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.381245653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388743675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.380757993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.380890743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.38125495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.384640622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.393676169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.396925637 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393374265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.387746991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381809076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386922811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382342699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382361408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400767821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.382855932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395863038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407336921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.382235445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398253833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397483794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.382921822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3826135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.385158276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40461382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382825029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383160481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.381831129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397291663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.386150863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404835103 seconds)
  done (took 205.76440368 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.381776624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397746591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382836566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.393972684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383242165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397685436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.383980029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.3989643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.396665213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390155949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.383528021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398080722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.391487115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.387312311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.385115117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398770913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.399497531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392990757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38393206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.382868251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386785774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383349415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384840905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.390598831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.383376086 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.383646439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.405343782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383374252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414891755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398256388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.388630896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401475849 seconds)
  done (took 205.839165352 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.583230343 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39190331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.391788097 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.325174797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.39218026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.39280473 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.391073902 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.591205456 seconds)
  done (took 14.783594522 seconds)
done (took 622.02334814 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.803242806 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.508731558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60053764 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.417875547 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.229817723 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416970985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412814158 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593078963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.963544059 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.583973233 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.754317253 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.413177331 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.909470245 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.412413022 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.669951349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518657134 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.318449923 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.43845242 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.742710022 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.954905365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.674400186 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962199086 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.593146228 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.990834087 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.893111578 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.986664454 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.206389804 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.321144639 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.413831102 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.741090573 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.187250423 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.445914953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.475244345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.457426811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.51416712 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.4995477 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.47219385 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.455517309 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.596655394 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721163937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963129373 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.725623298 seconds)
  done (took 97.285526207 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382716904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.383592739 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.382410334 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.382912687 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.38443478 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.38286102 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382778225 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.383171329 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.382859352 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.382270875 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.382737189 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.384408763 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.382856167 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.384535174 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.381961698 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.386120912 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.383342239 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.386097869 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.382740683 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.383036531 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.383414495 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.383199032 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383864791 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.383703755 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.38414776 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.383505189 seconds)
  done (took 37.298140823 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.396401058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.637747455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.838805577 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.405065229 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396070993 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.400275785 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.476634029 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.397404701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399765396 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399737288 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.554986041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400696296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432106376 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.832300394 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402778665 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.397251635 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397402794 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.397740266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.643911734 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410060494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.498655748 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400089242 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.477996391 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.407420185 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418792647 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398895344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403023551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.932900061 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.403288549 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.555534183 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.209073829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.478960117 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.895554263 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.840710758 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214419021 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.401207213 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398412469 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.558750651 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401191271 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398769938 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.4783787 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400985823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828004969 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.038915039 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.416584441 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.397279348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.959069903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.562288766 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.662891989 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410048753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855585855 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401889712 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399717848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.401013813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.66258072 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.408930902 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.397928346 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.995548647 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.427995532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.479946746 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404348475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4005477 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.654457127 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403340451 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.643098483 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.406026141 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409107747 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.402317654 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.839461999 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405112552 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.064633743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.423866005 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.399980063 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.55862624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.648350394 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994063924 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406872017 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.660619361 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.911076975 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.48339113 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.409449609 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.925593786 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.487492243 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408460716 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.402822941 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402055938 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401447979 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445384628 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.481584086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.985788711 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062129991 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.020414419 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.508382417 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419718427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.402678554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.995853623 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.424266979 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400859942 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.835329248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.071244108 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.425049354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.40908725 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.052055324 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.426382581 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.48343397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411178634 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.847893358 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406421467 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44513014 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.401780915 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.409096505 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405929366 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.484025434 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.412532358 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.401633347 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.035856301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.58922398 seconds)
  done (took 184.286906961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.395174421 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.394707667 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.395739075 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.412087198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.396024845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.402378983 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.396071978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.397498162 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.402513946 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.394954496 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.396383697 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.401141433 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.398230507 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.400915909 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405500093 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.404228165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.013580417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.402666703 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.397754331 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.396925508 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.201243708 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.401191203 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.396970135 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.397201696 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.398000197 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.403773781 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.404865114 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.400115634 seconds)
  done (took 153.946851875 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.404443076 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.015254459 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.409258498 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.541975566 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.428061583 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40066315 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.54192196 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.469895028 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.407563089 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.400488565 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.401179626 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.728881582 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409082489 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.959359374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.609550639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.5508353 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.964889394 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407901564 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.4024365 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.402275737 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.542970404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.41784836 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73382829 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026585537 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408586425 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021423378 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.395988884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.405679285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.406226609 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024849091 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.407009432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.736106133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.490306564 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.471510628 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026552383 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.971154391 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.972878464 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.571350877 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.410317775 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.405533751 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.40406572 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.396046816 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.026522704 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.411750161 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.407947753 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.016938888 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.430904178 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.407632002 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41641846 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.404966179 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.468494247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.470081487 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741773148 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03320588 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.493973072 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433210038 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549154855 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.787226786 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.413010983 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.967480218 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398017253 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.02305557 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.412514148 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.395222431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.405567054 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.411121144 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561348071 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.548618097 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970399731 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.413644889 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.966313555 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.565207843 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.405298259 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405576543 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.408614516 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.999142329 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.971040649 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.565390225 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.548094034 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.609395521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.396405108 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.407011239 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.396366674 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.487850977 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.40742035 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018220777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.962569531 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.415051497 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408749964 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.408313154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.409096787 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592264574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003375264 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.488892587 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957535519 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.750722388 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7304181 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409670349 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.471221929 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.408869062 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.728211959 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.410246999 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470199594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848151545 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.732709539 seconds)
  done (took 168.427607511 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658492296 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.657690837 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.502354824 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52517292 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.962465552 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.007109822 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.57219902 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.537506952 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.529954693 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.665149284 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.125229812 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500170875 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603429831 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.487087921 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.128451228 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.484123248 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.510044206 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.555358824 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.527565204 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.52622732 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.028219526 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.715067269 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.568660272 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.510437262 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.508960959 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251076134 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.188695327 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.944544639 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.586664912 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.643362261 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.924074065 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6050994 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.211494881 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.083992375 seconds)
  done (took 67.180421219 seconds)
done (took 709.749097543 seconds)
SAVING RESULT...
DONE!
