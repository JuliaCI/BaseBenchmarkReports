cset: moving following pidspec: 27521
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.032278109 seconds)
loading group "string"... done (took 0.606523643 seconds)
loading group "linalg"... done (took 9.710953708 seconds)
loading group "parallel"... done (took 0.185482287 seconds)
loading group "find"... done (took 1.536221718 seconds)
loading group "tuple"... done (took 2.19161893 seconds)
loading group "dates"... done (took 1.539634638 seconds)
loading group "micro"... done (took 0.242335333 seconds)
loading group "io"... done (took 0.603144419 seconds)
loading group "scalar"... done (took 48.694866826 seconds)
loading group "sparse"... done (took 15.126903931 seconds)
loading group "broadcast"... done (took 1.278143072 seconds)
loading group "union"... done (took 13.751587282 seconds)
loading group "simd"... done (took 2.813534472 seconds)
loading group "random"... done (took 11.779729751 seconds)
loading group "problem"... done (took 1833.065134155 seconds)
loading group "array"... done (took 27.968405876 seconds)
loading group "misc"... done (took 1.228161726 seconds)
loading group "sort"... done (took 4.018823003 seconds)
loading group "collection"... done (took 20.395299151 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.789617772 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148254719 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.220826498 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.389948944 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.247295368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172343895 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.177994909 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.592485445 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.050638786 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.293632283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158132843 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.623311927 seconds)
done (took 6.587880065 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.285900573 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.405775293 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184559243 seconds)
  done (took 1.257623298 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075593279 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.191605999 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.116181569 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.118185997 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100517639 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115442735 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.1165133 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116524288 seconds)
  done (took 1.545820745 seconds)
done (took 3.842090513 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.570411718 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889519227 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.529179156 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.174563624 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.209201549 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.186545941 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.332657425 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164208276 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11058437 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111462865 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236181884 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.351777156 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.512699694 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.031693238 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091714689 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130658107 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.100927552 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684677182 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081123512 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14032343 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.624433548 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120875039 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11640454 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127605149 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217794338 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134603235 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17326766 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094445907 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681818698 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10402355 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233274914 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086026572 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181959508 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.259414027 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.08291817 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110346617 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686506488 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183025058 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118914874 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102115758 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67359929 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081294385 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.253286614 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10807921 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116032219 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197888164 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.124831134 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083234323 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104665581 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084807003 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182214473 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464152328 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106971955 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173174519 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108022786 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.71088017 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096897656 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157363002 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141895138 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110254679 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08076909 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.111190571 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167461813 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113668498 seconds)
  done (took 20.408635073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165084279 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.173360815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096188399 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144659825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147403876 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099485725 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101448689 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082325701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132452208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.243067437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.145875232 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.191772349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076624125 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104778443 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146632443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255766272 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109503249 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126310991 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102788409 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092360151 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145734531 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116225033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112525918 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09855419 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.188803462 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207958414 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110731069 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124948668 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101852398 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.121011932 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141614016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151203532 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093833612 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085120076 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.209580739 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106712281 seconds)
  done (took 5.543525069 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233865591 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119774039 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249244334 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188275873 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154402854 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18982649 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148997989 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31412061 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.268616859 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18725635 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13224555 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114661026 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078963519 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099162496 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.212612643 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078396386 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769312534 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185487985 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15477334 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157255788 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105802267 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085099574 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387784118 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103497611 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082182049 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105867711 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094544616 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.214471238 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107726719 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.409166109 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122326622 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11215033 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134166821 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202209921 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137690182 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147409651 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087919459 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100519604 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227983988 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11461791 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096058891 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.112882439 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137508901 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137664414 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100735052 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101800115 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.236663871 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115177333 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101102884 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107181971 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.198168633 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085062471 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.219871006 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.139632559 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083523486 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.380668974 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120908472 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108582293 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084120508 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.346061305 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142889115 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083275294 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097683949 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08782207 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099092215 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.454497311 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095344347 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.004708414 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098027299 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169890082 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104286084 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109369944 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106401538 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087082889 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122819624 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099592065 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080366064 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100068467 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079723222 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105914081 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123127652 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083795477 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10331333 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098210065 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151223823 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.121838267 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11907796 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127575251 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086369947 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098546261 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130152584 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082354891 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103452832 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18046833 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109155104 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10514244 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105154074 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144602405 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101772402 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.233380015 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095656219 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126582477 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103091022 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115114599 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126462709 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100986825 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102486311 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079027798 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099286329 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148783271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098288088 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08128526 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103874469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115244049 seconds)
  done (took 25.201182393 seconds)
done (took 51.819935148 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.549406832 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.130533621 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128884919 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.128725412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126924366 seconds)
  done (took 1.817259292 seconds)
done (took 2.539180484 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.402542491 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198538472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12645293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196383918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110274677 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.216656236 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18468949 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123759561 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215144913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.104528594 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194652553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103844561 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108689013 seconds)
  done (took 3.041185664 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100770713 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128028647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085995924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119097957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079379004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118090178 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115653623 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132469975 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11608321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109603485 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081523881 seconds)
  done (took 1.905786955 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099169597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121742732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086324097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115094095 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07971606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114202465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113146667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108752095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114708617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092058861 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099463603 seconds)
  done (took 1.866255035 seconds)
done (took 7.528143844 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.283802446 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.780029941 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154050346 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211173544 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.421648625 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.263994989 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.660603585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172890471 seconds)
  done (took 13.895775223 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.184109901 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10554986 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088833234 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1045677 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087605079 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.105403073 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087066295 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103545455 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102033068 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088091218 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10280427 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088789422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104049246 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103509115 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088014649 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102136979 seconds)
  done (took 2.444118379 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143668959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142508098 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094350462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117020949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109660341 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.093759361 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111923576 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110550533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091352187 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108282802 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115694435 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097954922 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112816921 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.106868817 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09554973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117252798 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107258364 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095030171 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112696645 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112302015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099324181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108398991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114770298 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098949003 seconds)
  done (took 3.441498198 seconds)
done (took 20.503703599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.189308512 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10415666 seconds)
  done (took 1.021675176 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.156033842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157542729 seconds)
  done (took 1.04604592 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117432015 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101933284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146821461 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123001886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.10269773 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08731933 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140728303 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103256612 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08545285 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.104060452 seconds)
  done (took 1.847864807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091412842 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106455229 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115372307 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154359481 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099588783 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109771596 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10826972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091507829 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108913589 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103335342 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096892954 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127901863 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110739286 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131229926 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.214611686 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113132765 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117463673 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110795516 seconds)
  done (took 2.848862689 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085941337 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104630136 seconds)
  done (took 0.925584284 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09366029 seconds)
    (2/7) benchmarking "second"...
    done (took 0.103857778 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091156485 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108165298 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.103153345 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087668071 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103266393 seconds)
  done (took 1.426528928 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.572853576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.284992857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.392168158 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125271649 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150345319 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.412333842 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150395629 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121459957 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120782436 seconds)
  done (took 3.113506058 seconds)
done (took 12.965389589 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093360912 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.248210207 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.620958563 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126505084 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.086911465 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161375326 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336806421 seconds)
done (took 2.414088356 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371018822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163899226 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.094892609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101318874 seconds)
  done (took 1.469469513 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079928696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.111305032 seconds)
  done (took 0.932206308 seconds)
done (took 3.154430044 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084678549 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099087239 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.120891063 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.102402668 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100531316 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083390986 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.101728378 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082373092 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098370219 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081766099 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099551312 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08314539 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099667015 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082908621 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099265329 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082254812 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100335621 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0832098 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099824978 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082770987 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100468879 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09871895 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084794615 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098559315 seconds)
  done (took 3.033650855 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109444718 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104052951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108476816 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092478961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109673288 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106903597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091197452 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103388729 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107877991 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086331117 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107580257 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10855307 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086522771 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108161211 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103031393 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.091993604 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107407535 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103456628 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086731883 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109093993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107082973 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087911866 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.108789754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091921824 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108727824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108411658 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086052765 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105956026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107457562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09181007 seconds)
  done (took 3.781844697 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093101304 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096559507 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085300185 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111277028 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080773366 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102243584 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080191193 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098967205 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101333133 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084567572 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102373889 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08380154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097616953 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086354845 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102198283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087706212 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112337911 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.098240937 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08180508 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102122376 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087962496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09762472 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084216063 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.100824962 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083814008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098246522 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08507946 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101415305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.086619647 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100404126 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10249182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.089402264 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100564437 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096551387 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10500921 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085310883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108148402 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08072693 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.103894366 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096784491 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080986928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10105439 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082652886 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107522166 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085625037 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102023767 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081666446 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.10347652 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086124739 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106988099 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097480642 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08251215 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104488155 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087467039 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.104123554 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081006997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102081903 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08124502 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103427179 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084048125 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098831911 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097275151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.091696707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.10181615 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101136393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109040684 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099608433 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.087927936 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102946103 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090389731 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.105147594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095008315 seconds)
  done (took 7.583475778 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099398883 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115406633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086802954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103862146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101336769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086084171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110771381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085653027 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103228913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11102875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086210593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103213752 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086305426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103931262 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085188841 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104514253 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112718983 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086919621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.10230978 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086302281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1029503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110969231 seconds)
  done (took 2.930808132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.270345606 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092684921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.156450438 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120742098 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128147636 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121977174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090293366 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110351581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107198236 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097514968 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114746064 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109126253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1264097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096883492 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113755262 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117928546 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089827936 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116736543 seconds)
  done (took 2.934840058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106084737 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.107471813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131183725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089955899 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.106175585 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088489049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115467327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122891668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105713751 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089349138 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117721148 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105779916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088812409 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107737237 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090313623 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10626123 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104211665 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090598559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116330182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113991536 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098232957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116107313 seconds)
  done (took 3.076319148 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106976946 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107206146 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.145687618 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093249139 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104831702 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103426352 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095577019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.107019456 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113567623 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08827371 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106299574 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087098373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.115079116 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106140643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097076514 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106970059 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088318095 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107616464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105443391 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087608046 seconds)
  done (took 2.832094619 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185915096 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10409471 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121824035 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136842638 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120911914 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105211511 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135555026 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1227468 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103633638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139813264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122206696 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121780699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137345155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113738314 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121506689 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137515878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135797238 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13627074 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105042992 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120698156 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139200163 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103407897 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136907199 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122554701 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121088346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104812725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121835851 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13228012 seconds)
  done (took 4.270659967 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085866092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102145454 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085630494 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.102801817 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086646226 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.102347021 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085608702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102822299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085449028 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102366291 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084500106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102313367 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085406885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102148741 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084533759 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101553751 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085608256 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104715414 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102159792 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085975411 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102328005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086754317 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102553327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086368018 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102930516 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08713395 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103806811 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086053534 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103708003 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086150563 seconds)
  done (took 3.589009096 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101222827 seconds)
    (2/2) benchmarking "in"...
    done (took 0.131449579 seconds)
  done (took 0.996611253 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096168936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125905996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085731659 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104079765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115637833 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087751418 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116363417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115857934 seconds)
  done (took 1.611912786 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.157907851 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158421171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093522457 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118877879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158308028 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150085284 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154288534 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.111049408 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090494774 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101574207 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154602003 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083330545 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11198911 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105194143 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092843369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116842367 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0875856 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115384132 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114545498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089417219 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111035737 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100114723 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112224855 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11787293 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086295164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112459494 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115362083 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101451976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1069732 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113506213 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090635629 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.106175476 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.092480255 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.112842077 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087059232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15707578 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120685269 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109022802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092673207 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112594154 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116858018 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087698646 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112580151 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107679151 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096561757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111647768 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094789038 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106617588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100755876 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088187488 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105763608 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087330888 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.105371011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094235105 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112350018 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119959741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089396694 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107087825 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108037418 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08781565 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10998071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088083742 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112532789 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.109988953 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095164055 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111584477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110345221 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097430155 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.108270867 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088363236 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111262458 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128702582 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09497761 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113310431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094210296 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107833155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108834447 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095102023 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110445145 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112383846 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092383908 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115094252 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094947874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10538491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107075266 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09571497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.108904227 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092010516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10325514 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121763283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09056833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.107723084 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085141601 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109796622 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105950033 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091647505 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103631015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093821637 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.105336463 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094625044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113848195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110055501 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096528833 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113177195 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112343924 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092986042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153149443 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109866937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087176981 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.109607435 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094337722 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105788089 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114730731 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089756454 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108395868 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087536944 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112803883 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113557582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091400965 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111619737 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096012449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115565014 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110561224 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086719412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107947179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09376843 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117793464 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11550411 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092090431 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108535049 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089694179 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113168151 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111340111 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113711063 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090830404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106491139 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107272968 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094198593 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113126005 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087951519 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111050745 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113749579 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093209988 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110412272 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114011233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08856325 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102587392 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09459966 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108040244 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08888036 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118614391 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108381114 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090963505 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108014446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119048427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090663534 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114272387 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090709418 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112914258 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113568049 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086339841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109118346 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090662246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114667214 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106862859 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089651511 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106741841 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09666861 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105284109 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091990334 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103616944 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108401521 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095634552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109087137 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092373513 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10755377 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126695218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103442551 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115093694 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113472503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092964909 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112346976 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09178696 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112321148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114166803 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094573585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110081147 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092250878 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112691488 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107395957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094503837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11172179 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094969382 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103797189 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08949299 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104976639 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111570689 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09702052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113611126 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094955773 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110016441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111666821 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100219221 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109592722 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09384145 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104498779 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113025526 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100787352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115067401 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095313591 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115265189 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110315597 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089212629 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119089439 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09091484 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113051137 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.108757851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085776918 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104927108 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095446276 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.110964619 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088547488 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.109312817 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114241759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096886904 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109921738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08480684 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115036144 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118836115 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088278079 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11329616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108667738 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092955172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122858618 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08505016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108454827 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115977286 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09439846 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107715234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09372745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110511912 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115045152 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092433223 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.109863024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091541688 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116052876 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091981621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107757532 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109563051 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091821948 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105468433 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090214568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11477645 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110301012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089891639 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119558964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095834891 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.114437306 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112659523 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.094523168 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116160177 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095419783 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112364176 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114981826 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088354596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105034279 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089764537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104860515 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.108939314 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089334635 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113969778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091544119 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113063349 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094219779 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117328821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110827767 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095926646 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124842354 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108377004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086797503 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110746786 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112618932 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090080735 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110247867 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090933017 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115679184 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113341884 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09770669 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11064468 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087715626 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114934742 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109215804 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096812708 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115738761 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.096606654 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108488003 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113161969 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091463455 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118731542 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086575939 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113126072 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112567412 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093441449 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110789271 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091990924 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109541815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105487888 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090872444 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116071603 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091424182 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.113193167 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114178525 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091287663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110792675 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089739574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115904674 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11165049 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097348317 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108726676 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087019919 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106470702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095646781 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115816353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115902356 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089016541 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112675346 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09721639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114183727 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109016656 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100360018 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11859437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096278639 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121015564 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105718367 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091548293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12066211 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088896844 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.111411158 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11103579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08731812 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117650801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096919814 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11489103 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111080362 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086734341 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109827603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096995473 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112860311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092809055 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11202761 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115340922 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088371573 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112529316 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096342605 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114456187 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117367628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09597113 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113938608 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08990581 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.116028387 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108046319 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087522848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105871964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091491267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118021903 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086969972 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113866827 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114271321 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091895154 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112050869 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09480234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.11002968 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117272001 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096223742 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111414705 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10172982 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109918549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111303655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095141072 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114954394 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086614566 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113773253 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112754722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098223973 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112954134 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.094760018 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114639024 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115841955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092079035 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115594619 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096168352 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117341081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087870946 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117086328 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118978591 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092341568 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111584764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091639646 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110094777 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112455577 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097197149 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111332016 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101080101 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.115673539 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111011123 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092093751 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.115765821 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092670698 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119497413 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110026351 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098216544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107749693 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11824182 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093346162 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117800143 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091258284 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108600475 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094555251 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116100223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113332664 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098498066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118325373 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088361637 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108288388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.111165336 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091916127 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122062653 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100014856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112257604 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113637054 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092862144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.110504812 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09961826 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108217335 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110634626 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096691208 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118255655 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092713531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109575418 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114973435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093239793 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118791803 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113742428 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088986316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113828299 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097445514 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113294315 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089829506 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111467964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118633216 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094952266 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111663244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088374669 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123614278 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118465422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098453731 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112256457 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114205978 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092989884 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113280521 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098246874 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112715985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116717825 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092556656 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11622316 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102330138 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107276238 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110580461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10588391 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11561011 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116685995 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092997586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113409279 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100462463 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118190214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092655383 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109142631 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109029659 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09315482 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108860298 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09292616 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122807608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114950405 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091900911 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114036581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09570155 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113120966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092725472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109867225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116623419 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091061893 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118615975 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088291974 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108473365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.112746556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09714626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114723062 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095956899 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.112360935 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.092243912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109568194 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112258553 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10074253 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1134446 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096339783 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114607698 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11352111 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093258311 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124122826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090940534 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115135887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124977416 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097915388 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116474043 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114961084 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100701291 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118771019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094050746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119017022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113029583 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094412213 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119992825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099179245 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128237829 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115836758 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08821959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11641204 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092864511 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109117302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121595334 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099350128 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117272244 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115415635 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092167685 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120625171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100825837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116232618 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113306009 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093609554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11494478 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092930969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114693157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1120363 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100843505 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120346576 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097218669 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.121876555 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08948162 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124210756 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119776117 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100055956 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111919983 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089241677 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109661709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.112711547 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096847428 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.114595358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090481447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.111200257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094142544 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113804438 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117433361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09343166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120177457 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096566068 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112726215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11838431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093944981 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114089404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090631695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11599833 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120051009 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097192694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123344867 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098444238 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11563838 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113472755 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09655679 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.115114366 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097703568 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117360171 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112219972 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089509196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11781526 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100156271 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116301709 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120325176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102757101 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115706665 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098120817 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121720724 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11794729 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092101058 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118560449 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094392061 seconds)
  done (took 63.811166643 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.173930366 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101417757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114995403 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093464611 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145167363 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117384012 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11392806 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097012766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11589295 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108074993 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113527873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114122239 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137972312 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147817425 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144502343 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109385494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115266976 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116258564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094583238 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115838908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137578754 seconds)
  done (took 3.346532333 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119090294 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13500136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134213219 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.137504231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125367982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.110882668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.13344192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13131468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136357433 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128602076 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137167065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.130450532 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107470795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127530858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12912836 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127698485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117813906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126595931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132824123 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134028939 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127618558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11176368 seconds)
  done (took 3.613165682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102756852 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117592563 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098660734 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114935516 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098075994 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.115078436 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123784613 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094054844 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.124467173 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093982441 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111451783 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094562328 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119773712 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11354813 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091093083 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.114927335 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103361112 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117992528 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098597485 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115931927 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131859977 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093216783 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.11604564 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091622758 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.128744594 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120488376 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096173901 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11877397 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090501783 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117911175 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.092075111 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117224832 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118464438 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091023953 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111925023 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.097088261 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119401733 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113410146 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094951268 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118629273 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095390494 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120520977 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122350316 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094400674 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113944152 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096807851 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118682569 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092462751 seconds)
  done (took 6.018649896 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.161151744 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.177406481 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.127860203 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.16647421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13951271 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110892981 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.134430951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162458125 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.120182889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101258825 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142767102 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142269739 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13680982 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.129838347 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098293637 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119201474 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.128597456 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104084045 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130827344 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123103538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.142187458 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.100934554 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.132412798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.138465514 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125622612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101871364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.135677769 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128776185 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133363152 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109884449 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.130573897 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130156453 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140602083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126169755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116277748 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122105018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.141987912 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124868576 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102094053 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.120027363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114162309 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133001482 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120620744 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.143650406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126163512 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107538707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124381947 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.11779189 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127641227 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12409796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130066851 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141452826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124822454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102697669 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.139270744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143825796 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1196768 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098303875 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126924325 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.142610056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100924913 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125694666 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.153950838 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121425079 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108026952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.14183644 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127846218 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125248907 seconds)
  done (took 9.633093063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132652071 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.124506124 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142187471 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142715611 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126130002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.106125379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.125214976 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127013306 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105485554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133509395 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126403386 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217170198 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124703208 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134317219 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106209713 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128956425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127667912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126663944 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105695902 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127155136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126231213 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141370225 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105903039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140892506 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143534337 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123419342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105500407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128314101 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141556082 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128124889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145443437 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.105759045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128589591 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141708471 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144614469 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.127288575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097074913 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127275959 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.127666768 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105766893 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123090121 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141051067 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126554311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101042875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125479234 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127628939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142140567 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.144251822 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113980741 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135305576 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126797344 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142151239 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128002919 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106244882 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.140804153 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152062974 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141427355 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142061373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127023375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142067346 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.143465445 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.152760051 seconds)
  done (took 8.87699254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095011514 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115654181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094565993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117075607 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094636692 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117147344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094170883 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116063025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095255891 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116048708 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094653669 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11686565 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09451339 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115804839 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095916425 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116798225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095056183 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1171502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114287261 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095739945 seconds)
  done (took 2.9375299 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107706209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13846431 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120660685 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108841411 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.117427486 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129749159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098172932 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119617246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120314292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099589917 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132972752 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132550473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100763278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.128288077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132578287 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129485876 seconds)
  done (took 2.747216183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123473543 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.142989625 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.179466527 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.124568608 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121804218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108033602 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.121378966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099865302 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119204793 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12758875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104230572 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124838183 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099399959 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122897164 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120505188 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103974116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.11864857 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.103767618 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.123291895 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.180727617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128147943 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099818763 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122639283 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125259775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102239001 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127891875 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129556562 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100328729 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12351509 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121471781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104589042 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132149404 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120324886 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106049751 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.121238886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.100300338 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.118410748 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121989867 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105033369 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120956726 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100127881 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12354119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121506361 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10324317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118554999 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.100532746 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11895244 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129624932 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102933616 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.125452624 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098452741 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130319761 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126443511 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110810436 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133107563 seconds)
  done (took 7.376346846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113856766 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123895206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136924912 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096839712 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123236977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103536405 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123567094 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12353791 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102596831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117870857 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101279994 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124276758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124695504 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101882723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122119027 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102042479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119253915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122898013 seconds)
  done (took 2.9210339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106688028 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121671646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104338323 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122362085 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099297822 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121590774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119649032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098856712 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119571165 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100243977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120684772 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099760921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119590177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120803595 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100190751 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120927234 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.100541139 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119555698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.121346518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098932538 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120542621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097305202 seconds)
  done (took 3.288913909 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113287196 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181431252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.131757474 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191953987 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122089607 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.118714664 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110170803 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.121352762 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139296142 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.09796193 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.11827261 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096669234 seconds)
  done (took 2.382514793 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129798491 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16437425 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122457196 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100005252 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135440939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129832744 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128085196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107580591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140983574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145547241 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129479888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141113532 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118429554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142943252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135363503 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134196039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128897848 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107244638 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123430858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153270098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129143807 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141748444 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107143086 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129706625 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129720894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143646484 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120408909 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147661398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128577211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141827284 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136053164 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10643076 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143786668 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14624369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122360954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142174714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107542153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176768371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114654481 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145634566 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121818993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136149519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119583626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140704296 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141723816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129819397 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136682203 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106696793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123271607 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158658189 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136801469 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140794145 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136254709 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141333635 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136071643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159670533 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145980449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141002964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115630827 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14734846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143297718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136358571 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144934667 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146535549 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137154947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147571588 seconds)
  done (took 9.695205309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17201767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104100922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131229468 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148483524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144905189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10828833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13195747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129437049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107829365 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125713616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18495951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130644071 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145226673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144874299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129696739 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10816874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128985254 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144827946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103574526 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183515187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107659049 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144454952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144812105 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144145718 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146346908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137925379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106934544 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131040249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130311756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129035144 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116810765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130823059 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144802955 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124254206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144701595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109242434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129682693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139420364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108512532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138021738 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145811023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155566468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130269546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130390761 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147675776 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108209005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129880489 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125277412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108665147 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125192709 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147761575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147258963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147796945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144463054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109531955 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1304411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130073518 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108297926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131700463 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13746713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145228141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108737408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185667092 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108548661 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130845212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145178534 seconds)
  done (took 9.628858771 seconds)
done (took 173.662428036 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.166000818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187101261 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.163018464 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158900481 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.11321276 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129745169 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145922512 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.157282489 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.116690952 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095283721 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.118149357 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.099154292 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184792975 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087933748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.113324027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121000607 seconds)
  done (took 2.997286924 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.221371962 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318352989 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139459148 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123481409 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104496738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.12075138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099448536 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.12542192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118882934 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111521568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.120906825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099010678 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.135128412 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.120593899 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097563246 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122026821 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.133126985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098555532 seconds)
  done (took 3.258461657 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123602451 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174259393 seconds)
  done (took 1.151043931 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13620012 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.230350009 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3085389 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.181205032 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.151259834 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.146819254 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.182046066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138978451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214498405 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.145464845 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.143911356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10302728 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.152207522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.132430683 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113778634 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.127280415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.155689623 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113180222 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136914609 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.128307896 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.384532697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096481958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12581372 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134878063 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.205708209 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143615754 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10430779 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126916186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127737164 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110770565 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.133496753 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.145303034 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.144373559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.196413836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.133363398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.212283226 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.112548078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124771362 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132965304 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.103661581 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.132056552 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.130018644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.121144655 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.126063289 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.125838234 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.112333977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127590558 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126985856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113822867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.140856199 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.136594695 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.133819073 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190046179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.137251324 seconds)
  done (took 8.845028805 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.921154347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169025767 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102352147 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.058870281 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.159424856 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140779622 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.933097017 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121821557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.290773224 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.921426573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143599351 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.14311057 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.277120533 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287202801 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19250097 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.40420808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.774365308 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.141639773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154746385 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.177079331 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134185694 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156919435 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146809161 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448788161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095246884 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11445623 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125095489 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109873417 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.20793173 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100174263 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124015356 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.237046391 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297203806 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238000157 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126186731 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099756458 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122729279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199355655 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337890057 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25558871 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194867153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097340712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123186104 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137657643 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116061739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110647988 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205921101 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195398819 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.221550595 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09991046 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130277348 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125883305 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12707615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186297107 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117381032 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.388374494 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.390633056 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124470768 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110537883 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.14284505 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.310915523 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124412205 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.274066208 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155302056 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.259706257 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12267071 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.857054851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193938074 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118963546 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111136249 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.134440791 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129695938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136613864 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191529496 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391671026 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132206161 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097525061 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114976727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256309917 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100522192 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12060855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191792658 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126107707 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132935267 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132907623 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108934194 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.2167305 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274048631 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13307426 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125619803 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120080488 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108243144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117327823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236074211 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.281508057 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188527903 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.260073296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107948919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.211019614 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190736167 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139044926 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.225582698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111138474 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139025855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138707536 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.257688809 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.166060882 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124813837 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102812878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126816438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160701889 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120385556 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123406881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18991451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.507111473 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197950131 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.122566003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104842448 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130268222 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209890025 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109467092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303960943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128891394 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.211566443 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104602709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113103249 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128109558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189986515 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139427073 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128425413 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10912087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13049485 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.30659081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266412751 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140952371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253364834 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.222819171 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110182104 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227201695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135268548 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197923943 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135937282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115931342 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12280405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852462979 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134601739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133707092 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102886652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.235348182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092116668 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115764841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094192632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114681257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841634588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104959218 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123370382 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102820061 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132533331 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127489196 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122918469 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099268136 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209989122 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.282780755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140653746 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132825883 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100956716 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192004159 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126001968 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121711235 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096719071 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121784727 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.135326947 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102064716 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119725742 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194210233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.206696114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.267871832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57236384 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100554585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123635821 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.275172361 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124098146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.357531202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134886213 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.270514818 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200619827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120595029 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37821617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.225798928 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212409253 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099206865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216675723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088749109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123197951 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.207623008 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096837005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125663289 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179557426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138542807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133462077 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203503157 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116964385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253640395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112955635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196756396 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124045647 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138506925 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.359627428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120772313 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120677329 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207820162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103428762 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.096116742 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.675190833 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094179968 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128371735 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12794997 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265046715 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.223055325 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108386654 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126412732 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133766853 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186281827 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.268661839 seconds)
  done (took 49.540255672 seconds)
done (took 66.638568393 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35157113 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293619663 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.355321113 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242512745 seconds)
  done (took 2.204380417 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.251151116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17559442 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.231257643 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0969391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.23859256 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100540691 seconds)
  done (took 1.971403486 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.571237842 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.469944183 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.390186146 seconds)
  done (took 2.313976065 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285023264 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.318188865 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.385431587 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.521964688 seconds)
  done (took 2.506946019 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.306789222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126198771 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140303636 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.194111403 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.272307025 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.300940972 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.172963383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.222442543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129032717 seconds)
  done (took 2.797915147 seconds)
done (took 12.677593112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.303174144 seconds)
    (2/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187301898 seconds)
    (3/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.278206803 seconds)
    (4/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.35638439 seconds)
    (5/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.285749011 seconds)
    (6/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.333117672 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.218661292 seconds)
    (8/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.146784714 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107695379 seconds)
    (10/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133225138 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109190004 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.170136295 seconds)
    (13/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.270728443 seconds)
    (14/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.146608229 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.281978559 seconds)
    (16/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.121213229 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.1057787 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.28938772 seconds)
    (19/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.194679931 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.220031163 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133966257 seconds)
    (22/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.191206088 seconds)
    (23/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.22100353 seconds)
    (24/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.28354895 seconds)
    (25/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.181372504 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.165668756 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.1008349 seconds)
    (28/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.295121293 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.145737525 seconds)
    (30/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.226330653 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.182751289 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109157843 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141391923 seconds)
    (34/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134030431 seconds)
    (35/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.153242262 seconds)
    (36/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.181012663 seconds)
    (37/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133826638 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093251039 seconds)
    (39/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.160262637 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.171934134 seconds)
    (41/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.228901725 seconds)
    (42/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.228641048 seconds)
    (43/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109415835 seconds)
    (44/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.306795719 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10548907 seconds)
    (46/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138164169 seconds)
    (47/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.290716299 seconds)
    (48/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18059616 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1356879 seconds)
    (50/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104851412 seconds)
    (51/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.222651871 seconds)
    (52/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130730967 seconds)
    (53/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.230151182 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.225532994 seconds)
    (55/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.111107849 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133557795 seconds)
    (57/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.221029702 seconds)
    (58/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.238424796 seconds)
    (59/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133378412 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.19609893 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135914881 seconds)
    (62/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.115050363 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190334608 seconds)
    (64/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.222499994 seconds)
    (65/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228891523 seconds)
    (66/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208822644 seconds)
    (67/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099185468 seconds)
    (68/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.119628594 seconds)
    (69/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.212484581 seconds)
    (70/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092724025 seconds)
    (71/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137110875 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109759319 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137074798 seconds)
    (74/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092265877 seconds)
    (75/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.190470314 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140897048 seconds)
    (77/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101093798 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184002644 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132721092 seconds)
    (80/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108718642 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227985636 seconds)
    (82/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.150275519 seconds)
    (83/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211632267 seconds)
    (84/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.091863748 seconds)
    (85/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.116119217 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.171318114 seconds)
    (87/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.222710728 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121237189 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204289959 seconds)
    (90/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.179786739 seconds)
    (91/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207528683 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107888173 seconds)
    (93/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111003507 seconds)
    (94/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120901141 seconds)
    (95/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130438743 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143079821 seconds)
    (97/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.130944565 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128029285 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.166428287 seconds)
    (100/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104159437 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.129369977 seconds)
    (102/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139423746 seconds)
    (103/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110575759 seconds)
    (104/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.224627393 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.295507476 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.170350175 seconds)
    (107/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.115197024 seconds)
    (108/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101147309 seconds)
    (109/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.119079658 seconds)
    (110/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12841352 seconds)
    (111/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.220803331 seconds)
    (112/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.121912706 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.138523604 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126080843 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134005858 seconds)
    (116/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093821019 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.16525753 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.136511074 seconds)
    (119/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111846145 seconds)
    (120/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.138759151 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.143667444 seconds)
    (122/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101388934 seconds)
    (123/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.128551416 seconds)
    (124/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093764857 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228140994 seconds)
    (126/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093112358 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.114306803 seconds)
    (128/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.228950223 seconds)
    (129/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107389867 seconds)
    (130/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.147485112 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119265209 seconds)
    (132/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091816982 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.135689899 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113730765 seconds)
    (135/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.115535104 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120251954 seconds)
    (137/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.178540962 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087030676 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139688451 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.125642089 seconds)
    (141/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.137352417 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125737161 seconds)
    (143/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083174891 seconds)
    (144/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.121866272 seconds)
    (145/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.089019696 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.11325287 seconds)
    (147/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094007997 seconds)
    (148/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162711084 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134050646 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118723401 seconds)
    (151/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.176841314 seconds)
    (152/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094729464 seconds)
    (153/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.113187836 seconds)
    (154/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119573801 seconds)
    (155/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.115697217 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088585594 seconds)
    (157/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108871113 seconds)
    (158/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.228865171 seconds)
    (159/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.085538101 seconds)
    (160/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.126566243 seconds)
    (161/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10233791 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127587686 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128049726 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115519465 seconds)
    (165/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.140837507 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126000622 seconds)
    (167/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101371698 seconds)
    (168/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.109127929 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111043939 seconds)
    (170/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.154652369 seconds)
    (171/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.160654922 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119781327 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.128403129 seconds)
    (174/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088734881 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.131770311 seconds)
    (176/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139054343 seconds)
    (177/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.0912089 seconds)
    (178/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.11045097 seconds)
    (179/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09282098 seconds)
    (180/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129903239 seconds)
    (181/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176309495 seconds)
    (182/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.112162433 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137881739 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090430955 seconds)
    (185/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087002915 seconds)
    (186/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.119358706 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099095772 seconds)
    (188/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.115119211 seconds)
    (189/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.093763368 seconds)
    (190/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159500293 seconds)
    (191/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127017588 seconds)
    (192/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.118292845 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130490827 seconds)
    (194/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089808636 seconds)
    (195/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112785636 seconds)
    (196/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109479013 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.142635974 seconds)
    (198/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.137790187 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114523126 seconds)
    (200/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.170674699 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.206445775 seconds)
    (202/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103709175 seconds)
    (203/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.111846646 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091958005 seconds)
    (205/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.128779796 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113107381 seconds)
    (207/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123487228 seconds)
    (208/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090956971 seconds)
    (209/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.118668824 seconds)
    (210/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.098112388 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.143126078 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111146433 seconds)
    (213/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.118497253 seconds)
    (214/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.088062443 seconds)
    (215/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159650052 seconds)
    (216/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094461367 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137943867 seconds)
    (218/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120936848 seconds)
    (219/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095829983 seconds)
    (220/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122561348 seconds)
    (221/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095301185 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.134488211 seconds)
    (223/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090537707 seconds)
    (224/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085045085 seconds)
  done (took 34.325003457 seconds)
done (took 35.218198855 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.540096866 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134195896 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107203479 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1314638 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192724813 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.136729923 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123926408 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.138224509 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.144145826 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111630517 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122831387 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.114845399 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132305523 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.196242492 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.13969387 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.100287703 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.128168406 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.137693355 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110874451 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.14105558 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194271001 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134073844 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112945328 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123839846 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.200737821 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134713825 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.114354853 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142339254 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145185542 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112811831 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141369756 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106234771 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149605618 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148132519 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105337616 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13785467 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105024336 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.128934773 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138845241 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113672737 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.143557319 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112809846 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.143019545 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.134354421 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113624492 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.137501699 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104664286 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.144645515 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122562964 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114910906 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127036305 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144773852 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110546219 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124001708 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104126363 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.128263417 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139569481 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10590822 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.141993961 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098683108 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124646495 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124496211 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115296897 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125720964 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110020166 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126263484 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136945178 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114561059 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136218453 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107265504 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130146964 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110872025 seconds)
done (took 10.666466136 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111921136 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189234315 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198804163 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207071839 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.161719538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149379449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.154675099 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.164933735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119590833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149998833 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162084134 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156753764 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.199872069 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139663539 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.122830242 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.132737708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.140889287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.120021236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203450517 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153258088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160412318 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142398251 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.170831353 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12579359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.134647105 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163047555 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136423645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.107619153 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129012793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137311678 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124771345 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13022582 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13111961 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126316417 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.140419514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13376803 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114647979 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.130427804 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125892038 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.103267045 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14619986 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.150074959 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104895122 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143255806 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.132506116 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108520765 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137779104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.135861475 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103787559 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.131783007 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130063083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160961909 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109717179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.135029347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13491775 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107006291 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135436819 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132720675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104908429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.133765412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101011786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129115642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128385112 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156414873 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104274546 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134354631 seconds)
  done (took 10.063853669 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.13366821 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.168075143 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140685486 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137147591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109103953 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.117847824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09156326 seconds)
  done (took 1.836163807 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100710899 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191871077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188716839 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216364237 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180744507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.200240398 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14226048 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095581473 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.161776956 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133031087 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.19214497 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22541027 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138279479 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117304197 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.223363327 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093200624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.195140936 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131033022 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135023016 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.190444611 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112091211 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155232552 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139964548 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094521898 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208564711 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095149745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277555623 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117221538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127571271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.110624788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145011245 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210769223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185944455 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13840397 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126831798 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19073407 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.186472761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133041812 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.20780393 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107491648 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.191697046 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139629557 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.135303608 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.109424064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.134429629 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.174880593 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144837142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115275882 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.131560768 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192690242 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13881236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190146552 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.104252638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139322471 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.134821326 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111651746 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141580581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.134502663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197379409 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137473533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189654964 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.195820892 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.19484194 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192875207 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153456703 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.193047602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.188037983 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.106296475 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13052021 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1349578 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184743341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104691214 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.135856007 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173525891 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136535703 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185954621 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184857185 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129267252 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.110215963 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.126675735 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103170242 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123310626 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173332795 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131889419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106245186 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142902375 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135599214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106904031 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.12407932 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148636628 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109072289 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.134819711 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.138530736 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105364037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138827618 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189189934 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13290805 seconds)
  done (took 15.567696464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107218186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.124417996 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102765724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12385563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097258471 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123083384 seconds)
  done (took 1.636155512 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140437819 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.133384682 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145118194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108984316 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191052206 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217852666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.195615573 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132170982 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.125344865 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145941342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191085024 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195358796 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216080763 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111845501 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.195797067 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136667938 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194973258 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132800328 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143286893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104265623 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142897332 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13723427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103718581 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.185030053 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137442275 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136429747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133058959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117839632 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.143859219 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.134470772 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110981104 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13672784 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129492712 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133321517 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196014409 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103694446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130827899 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140842583 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109607735 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.13936157 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19343219 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130436063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144871243 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.142445445 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107029383 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129831614 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.141861613 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1081887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22369984 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115114589 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144329393 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.137520401 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111810765 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140805331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128748284 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132378249 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.116287356 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227309063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114557536 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.132725073 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.140859701 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.114339311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135171465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.142123025 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138067712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116815625 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132746356 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137996614 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106899771 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135533126 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140992622 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.110155643 seconds)
  done (took 11.198453141 seconds)
done (took 41.238542653 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.161738527 seconds)
  done (took 2.115374145 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.005260153 seconds)
  done (took 1.961453425 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.490242946 seconds)
  done (took 18.483665582 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.583809701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.665634557 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.024603548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153576251 seconds)
  done (took 3.383307091 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.07695525 seconds)
  done (took 2.061807014 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347188229 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28947353 seconds)
  done (took 1.603570703 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.889090805 seconds)
  done (took 1.860298025 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.508368269 seconds)
  done (took 3.475237693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.403776932 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.206071036 seconds)
  done (took 1.589240134 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.685817378 seconds)
  done (took 1.658875272 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.34164716 seconds)
  done (took 38.314609757 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258265499 seconds)
  done (took 1.245537799 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.326820141 seconds)
  done (took 1.305710025 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.678448965 seconds)
  done (took 4.659565774 seconds)
done (took 84.686300044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115806077 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134003074 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108410231 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13154468 seconds)
  done (took 1.45779364 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124851957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.135437051 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136130342 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106880351 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.142635959 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108645697 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133660525 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140576966 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106140341 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.135885215 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132015283 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107167662 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.134793953 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130634845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105515575 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135171499 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109625453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134920065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132640251 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108906893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132640271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13333357 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109999903 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.136523157 seconds)
  done (took 3.998241563 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119031524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126054074 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101355568 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124575988 seconds)
  done (took 1.454640342 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.122805205 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.150143166 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14723196 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115887962 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151910757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147560152 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101932865 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.129293047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104130681 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141111215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130674048 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152441342 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122485011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134118646 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.141588843 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.101271111 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.135252061 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12365927 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.14162999 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141329313 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10254806 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140463584 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129806674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120662149 seconds)
  done (took 4.114678959 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.228971813 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120331541 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.156111576 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.188708497 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.160229423 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.104339268 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160357547 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137469625 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.138955207 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.10891865 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.137141832 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195370601 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135467653 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11256252 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.135903583 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.140246828 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113029463 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.136162615 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.139107836 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121242014 seconds)
  done (took 3.861979067 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121650714 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.131030871 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095080044 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125275218 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132272254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102114593 seconds)
  done (took 1.701179822 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107915524 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.126996188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095907529 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119586116 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09806813 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119348469 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09181453 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118604423 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092603421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118625422 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092053383 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11774529 seconds)
  done (took 2.291235933 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.317790715 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0978507 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128539413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123729097 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102586783 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.126002853 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140433828 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097208218 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.263703212 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124312999 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115108565 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.201108103 seconds)
  done (took 2.826636031 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245721462 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109371978 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295970384 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400717123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180828854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185437857 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291891685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182679374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238290718 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130586473 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248236682 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174223477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143650214 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226331889 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126668351 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.184402819 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199451529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256994827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169116807 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230966693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182300458 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185887404 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201978625 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170775536 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154325506 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178513122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131160035 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11414194 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192476466 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216571523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198006322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166635167 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160206947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231445053 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278275025 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216462779 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.349277679 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147256248 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209441155 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208452678 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285685145 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15492511 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223503461 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176005025 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147304927 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202203425 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174810005 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.202706324 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147978917 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155394003 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209163338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193340554 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.238276608 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155805682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318997168 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172020372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166016256 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194590668 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213492332 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242315607 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186278983 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.10858444 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226979523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202957223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199815223 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162726902 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192194992 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14025326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19761163 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218232949 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206122281 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196785448 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.233983595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147798962 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18054116 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1888326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169345326 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19773976 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178324672 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105129063 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164901636 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1517529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140450388 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204357503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108116859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257719125 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121113589 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.233961214 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225769166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177466311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179923101 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182004577 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185711799 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162237795 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132599487 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134541637 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178258199 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172904612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145774914 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173003823 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159542521 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142411778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167492572 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107042896 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177497921 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.150326582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185671024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182441775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144927467 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181984108 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166141154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177429644 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191545851 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206574868 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146223984 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117459641 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24313536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171948936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125891144 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195352073 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236066596 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.18632017 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12370683 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217434977 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217240237 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158713638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210614754 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159364337 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146068943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142416793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175202361 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17479947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171335977 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143671075 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169660677 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214426358 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140815771 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150026652 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193639414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141448305 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112716982 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158472265 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15076828 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155934065 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.140659943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156183759 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174466823 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176819321 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171023894 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175613453 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158434053 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243209252 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118538042 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176678896 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162777669 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132518356 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203685397 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205327766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143054699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206478285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190621123 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240551794 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181647588 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115294277 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229980748 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115514883 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.136509819 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186508094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179271014 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179664333 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205568191 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237781104 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193160269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170424816 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164701813 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187157524 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193299644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175906868 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15975021 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180998743 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188119134 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134691987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110598555 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.143576296 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154531977 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142808719 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117902355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229944773 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183474622 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20348347 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179234636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15386062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203030528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141115955 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18366941 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.194709828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153055552 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20872753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20045596 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183731496 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156528116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190921078 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135405543 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136077804 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123442037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186286714 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147697064 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147776636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159985662 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204508751 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193952785 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165082465 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248206643 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190749723 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215206173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134998201 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151790481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214301046 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145785819 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20253026 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146204405 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179502067 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196609359 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160297469 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215481206 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181951483 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187616173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256344744 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173249007 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143614973 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13649977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213883942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127173849 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181657026 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161695934 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149917949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171323471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152346263 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113499177 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232829385 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158221874 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205254285 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174682176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1941394 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139373278 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160146309 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177048357 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159962157 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103722646 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188390575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237537652 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15990535 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17493301 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194088216 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114414504 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.325367806 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237412485 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205080637 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15278547 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159341406 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178264004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176670617 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181993327 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202464725 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158773902 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198776529 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174928763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.157282035 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120251378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162039252 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167038182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170337258 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150765142 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173692423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156289808 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207610776 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160489056 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174829975 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181840567 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162411403 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14452061 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154160206 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222655127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176026683 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2246902 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170605933 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188553749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210182829 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108797482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142053782 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142766535 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202482989 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145160985 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147176827 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227829714 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216038836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174435813 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186077565 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155035958 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.139370519 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176817678 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165096571 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217072123 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156253498 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153155475 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214236416 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168769664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143339295 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182404455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298964928 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159677852 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19317653 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104075057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314962195 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113172249 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145292259 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177798695 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191224313 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164873971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195160662 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183868197 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130632957 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177685671 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153079466 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233163838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229745892 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192033362 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194982917 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159800219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177059034 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181306576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1962043 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157732267 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162997501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178593489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20235558 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210034778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15031364 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181404917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179211559 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17657871 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224059376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119517017 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20778853 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145424467 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186811544 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156007449 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140318554 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176311029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197370559 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145655555 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196485989 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175589963 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144072855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113851608 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169096627 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175285648 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159527521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141291017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201678898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138834699 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15300077 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19888546 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144487328 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172900879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161219073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147397676 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156958936 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131436022 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149471573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.18419845 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205140346 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.146306301 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198217001 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194722565 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184637728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177177098 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160553579 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679399922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114696013 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230535008 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132488984 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241078032 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16526308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185715038 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179000961 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137196654 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217640206 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166168192 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209109153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214734605 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179979006 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11794124 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159424016 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161590683 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147534502 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166485333 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178677696 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126776646 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155394473 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177433638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160916733 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.159832943 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151700576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206200979 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162738984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205927766 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203222534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154316 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184687758 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196993867 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142903964 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183319799 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193384488 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156256396 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170507981 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118874421 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152063751 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199696426 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136463175 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18016458 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177810655 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17880833 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179315283 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122866114 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178340197 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156628809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178589581 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142233225 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176165357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174334799 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146469703 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114919422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172485925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176597385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17617783 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142860399 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160520715 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227541015 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108413514 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149047772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300836655 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175971808 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213919401 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.171139817 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149720055 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160048139 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174943236 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174024905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175372079 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115516959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145676824 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147341584 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197840087 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173401402 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173301199 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198601145 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179124176 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209326761 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161029419 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284036181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125717424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173200712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146514023 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.145571206 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127610846 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358326 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161549764 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20916212 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200365304 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.169050295 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160075933 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142779808 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107217129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147144545 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179658441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172576817 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176188025 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160231024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102921653 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160365703 seconds)
  done (took 86.356267686 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174714132 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151774766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15783543 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206775007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179254096 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269205844 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217439982 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237934397 seconds)
  done (took 2.668726307 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.140189343 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.120190211 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152710554 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133296423 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.13540123 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.445383325 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144125329 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106946708 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197081388 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.172435152 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105086972 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.675463642 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131570836 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132895681 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128582678 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133299074 seconds)
  done (took 4.119638842 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.569476384 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.56046755 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.08584676 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264093107 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.246265862 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.192311031 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.765836842 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207433539 seconds)
  done (took 12.960294779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144013281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151144196 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.351715646 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222262573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.170821037 seconds)
  done (took 2.121094101 seconds)
done (took 130.907546171 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118313252 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154914113 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109890014 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15580313 seconds)
  done (took 1.606618887 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.164303167 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122037552 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096109671 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120926927 seconds)
  done (took 1.586089399 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.548900342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091564912 seconds)
  done (took 1.751844077 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144823305 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152609734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154142134 seconds)
  done (took 1.540757444 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.124404916 seconds)
  done (took 1.207019196 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120697038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13600495 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.188848243 seconds)
  done (took 1.533563672 seconds)
done (took 10.308343094 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1390106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.528950391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421818546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116835445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732348237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413807732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.056143344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165477893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202709527 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098182333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147837628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676112381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045429202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.476095501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998914941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374126237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709567506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100623915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133234721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100630478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034258991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125607667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100207963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128278118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677151752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.436038872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124723859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.365117284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125965768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101781734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.417498716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125478281 seconds)
  done (took 17.469819113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152134177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193742813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136952903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099658658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131783009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127176009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110361838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141752981 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203745402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126011355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11918642 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126809665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131689705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099078411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150015708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096672047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130053986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126979073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107512067 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128996983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118861819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1259883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1274185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101808828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125945564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11265682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127202935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139433679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098577877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131997351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104579066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127520551 seconds)
  done (took 5.1648989 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157101498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.20261833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137624608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162369964 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182890425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099967481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217765226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168667592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201193025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127323076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148077471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098542473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167929933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125441219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122828204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126032565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101790982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129753586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134411716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101835606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148853868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098535318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129641206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129141899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099126335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143808667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09856887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142238907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126880961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104383123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134644852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128029074 seconds)
  done (took 5.487461979 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.119224252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141528707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121431739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150791352 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136837113 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110997027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140902182 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10523618 seconds)
  done (took 2.111248246 seconds)
done (took 31.316529278 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132761863 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147308652 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118502097 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142593959 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.201747244 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100161765 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144399779 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.129879865 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112989386 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149045744 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097891058 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133758535 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118208975 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.138616872 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.186847711 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139605862 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.191477625 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185250865 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10588889 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142084337 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10415934 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.19109714 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140006599 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.133008021 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.16573088 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131246511 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.182976044 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136779584 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108228983 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12949958 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185730109 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109553556 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134689576 seconds)
  done (took 5.750539239 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209963517 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.213727087 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103881978 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134151136 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.212827518 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103587455 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230891667 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103848257 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132962254 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104310811 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131613544 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.202668036 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210328014 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223306074 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.242354367 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211370905 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.199473665 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210669064 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.197889831 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.21496494 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.201611875 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132908218 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.213651059 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.215455673 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.103908734 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133566223 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237993442 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.209285054 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.23691699 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197813156 seconds)
  done (took 6.577042334 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12142591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145341384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12387471 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201947663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173484029 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142042706 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111234441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152020857 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153642981 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099840967 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137846255 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.138256288 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147545255 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138107467 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105201047 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.148844853 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153048352 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102070482 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135468968 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119043548 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148430978 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147645231 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115633564 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139952153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098814629 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139818746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133582398 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112841497 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137010552 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109061993 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13345082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133905818 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103656563 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138588016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103849723 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.144296591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156598138 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109107443 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142524938 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16638486 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109118675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134239742 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149857904 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148050367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.13168523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140251316 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113225416 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139677399 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098243539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150650547 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143137043 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102297186 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.154951966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099034888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129579507 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135883087 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102594223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132588534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109183513 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133733574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155131521 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107853342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136241234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101901612 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135532293 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099563075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130414744 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136334757 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124052516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135508579 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160262702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100450907 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139724953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10755677 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135284121 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137539222 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101112953 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136440115 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107989015 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135737662 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10867521 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133361932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133585793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11914323 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.152343946 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.141891037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110459868 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140762499 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10247919 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131031687 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142438599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101739333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134586366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110259864 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132188048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132320057 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.11169385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13998595 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099801344 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148665256 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134969556 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100208783 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146628553 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101285903 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134271406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109851327 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144137705 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129202844 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110102875 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1417934 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098991924 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13583343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.13290743 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100380869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146629573 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110654879 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.134946216 seconds)
  done (took 16.197162617 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312221159 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.314068642 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210013005 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.404267789 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124656254 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.229022751 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.279079338 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.22994 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133442005 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175191854 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192260719 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269918612 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101400221 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165260971 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.281470496 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408346648 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163778111 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176964534 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17589673 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125694295 seconds)
  done (took 5.585942577 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13347415 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174437755 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162134355 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164561614 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107024619 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144867585 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130230305 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127780577 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139721769 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136191636 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101502194 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.144225993 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108702035 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140634341 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148993667 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149829544 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135518018 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136199955 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123043063 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137290889 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.141415198 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159868758 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113512348 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.158579993 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.146468749 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114678528 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.130516849 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137006175 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10418269 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134152954 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106322098 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152036678 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138208508 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106542342 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139511643 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112830363 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132203366 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131636552 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.10270878 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134394021 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118647882 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13956122 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103986365 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126975124 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.113906219 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.133081104 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.14183517 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111977526 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144143978 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116074083 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142519818 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.144062968 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109126129 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149959272 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103425783 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146894799 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145092764 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.141671549 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108627582 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128916122 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09907448 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134977883 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105856273 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143367523 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139927003 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125248533 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.148070198 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133997838 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108235056 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135194084 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104607358 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150473989 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159412378 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.135877118 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104737729 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153888208 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105516586 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123284359 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111888259 seconds)
  done (took 11.466954979 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140740714 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137626249 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121684127 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170044409 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152976956 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106553303 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136308012 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.12113964 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142317231 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145483278 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114913487 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144584057 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157536937 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114733921 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135745108 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146412826 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111798031 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.175735682 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150390898 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136338777 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.147993269 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136862218 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114981075 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144380415 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166045281 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113270695 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166646148 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140745834 seconds)
  done (took 5.025458197 seconds)
done (took 51.697489626 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293589693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418032822 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.194813826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.199604635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.237575298 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.206809668 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220027704 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.393848095 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.944171468 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.197832864 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.199061647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19917665 seconds)
done (took 27.822352 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.241796837 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.795542592 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526079761 seconds)
  done (took 4.436314616 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.193569828 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.194862291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438781722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.195140896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.21043029 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20516916 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.199488945 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192979408 seconds)
  done (took 15.748875501 seconds)
done (took 25.737421381 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.22891274 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.411708167 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468536675 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.214849581 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.199155938 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.195310692 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.182308964 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.228206569 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.193248262 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.188059519 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.205001352 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.486231368 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.193102659 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.592698215 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.181108091 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.193519152 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.205515905 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.457839135 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.197302161 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.239486247 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.180930281 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202928427 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.209502954 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.224555723 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.198359574 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.198753344 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.190090062 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.178401919 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.398503276 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.200837605 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238178458 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.192911833 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.215996765 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.190153823 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296219436 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.232723661 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.387143135 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192506759 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.183220052 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.20021681 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.394018669 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.593971081 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.201748399 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.193616201 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187280235 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.266168112 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.186308204 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.91107357 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.20292481 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.191373699 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.208543848 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.630627817 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.194059251 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.191236442 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.199915558 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.439984127 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.218598008 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.211657271 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.223202884 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.195353428 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.190080357 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.208988164 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.208832724 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.19077858 seconds)
  done (took 142.930109802 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.194263591 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195365464 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.193652347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.256163242 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.196984398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.19692545 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.192862188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194972627 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197622765 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.227626782 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.196571261 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.189589584 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.19965915 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202752865 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.201474547 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.219603933 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.198284412 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.193476221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217200708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.199157355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.200924582 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.195663448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.208846094 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.192409401 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.234295046 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.284214182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.232981724 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.22884617 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.205987507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198188326 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.231589721 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.256716067 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.792694779 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055685118 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211071402 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.207583658 seconds)
  done (took 80.120381014 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197894787 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198056247 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197254632 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23322115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196078105 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.756959553 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760131162 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.945687419 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.441368364 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.52753373 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462039243 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20166948 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292969588 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20649036 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191769733 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20233487 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215769546 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246821392 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199048222 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202236277 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750491154 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20568252 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.400509167 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.383946499 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207805693 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23313343 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600109987 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193515422 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229204214 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527322946 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239408584 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191967675 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56481914 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.682764265 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30592471 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194909177 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232140217 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197539734 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479811626 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193367135 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199087269 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20075468 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850362951 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196866613 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198894912 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.75678785 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150845811 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192720828 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20184439 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199433738 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.190587278 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194481454 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836019237 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217468113 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.201226906 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202647778 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200517279 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201750028 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232655045 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.210604008 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309970241 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218326684 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206148127 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231106496 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199716789 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277149865 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193839479 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.632306141 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274644949 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30809276 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744216619 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196730607 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298712085 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313141784 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193850719 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198064468 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200730793 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200079485 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31003776 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195163885 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.613961872 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19404209 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369555708 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208190635 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.512450258 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296024431 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194312736 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548759485 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193935262 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199816044 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932300608 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289943181 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198233619 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204804035 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200722221 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609585109 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.746441169 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.456218003 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202750515 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.397066734 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195653302 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.610181987 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729595956 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.824688579 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195895266 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312104874 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.366567289 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211532138 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198601579 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.480254212 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194479339 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259115294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19422699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599726065 seconds)
  done (took 365.492021117 seconds)
done (took 589.660143467 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.935152352 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882389797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017720157 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.91251915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.879076943 seconds)
  done (took 10.743947796 seconds)
done (took 11.862345824 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388603618 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381749396 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255063783 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38445905 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229280286 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405239167 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363442648 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214810809 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302937771 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277901144 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301812352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2506162 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238433409 seconds)
  done (took 18.111653353 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468584855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207001433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285572225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.447782234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244664466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466733272 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.505498581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.208012284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34703751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219771533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219976916 seconds)
  done (took 17.741085711 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474578207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.205383232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289219185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485514031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248202694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468976557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512836328 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209127234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348419473 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248182882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219585157 seconds)
  done (took 17.827547139 seconds)
done (took 54.800825607 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246516023 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.373423472 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234278227 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224340129 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21503425 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217263757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222697053 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212861057 seconds)
  done (took 11.065810363 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214626438 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214896478 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21607474 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218307306 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215693506 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213832153 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21691429 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215792565 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217725281 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216519201 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216152672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215827862 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216337184 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216443721 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217077583 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219975034 seconds)
  done (took 20.58405535 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218295723 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216453288 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216744938 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217643021 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21574633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217720182 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219259209 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217793623 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216698506 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214317999 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216692393 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217553784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216079902 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217241186 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216470771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217203423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216627704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220053739 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221836145 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215764534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216225082 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21816646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217526165 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218043967 seconds)
  done (took 30.339676261 seconds)
done (took 63.109571232 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.206234218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.209203994 seconds)
  done (took 5.537744134 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.27689821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276600403 seconds)
  done (took 3.678667193 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218272286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219628773 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219238878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218832379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217412531 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217794561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219354789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217217517 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217348025 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216077149 seconds)
  done (took 13.303966493 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217976068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217419313 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21602522 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218953848 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217417272 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221043418 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219277784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218129061 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221606948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218080837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220348508 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218938156 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222833342 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221757492 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217195788 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218809423 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22038168 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219185886 seconds)
  done (took 23.069660841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235866305 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240081117 seconds)
  done (took 3.600216095 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.357154183 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260881195 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336052804 seconds)
    (4/7) benchmarking "year"...
    done (took 1.326312179 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.261580658 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240257438 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.260710792 seconds)
  done (took 10.166414883 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219969204 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.425201403 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.520285804 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800044205 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220009877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.265132559 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.10494392 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.268538797 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.270603939 seconds)
  done (took 14.219104406 seconds)
done (took 74.699860893 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.208882887 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245099315 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.227515948 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224161982 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.513007543 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.213852346 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.203667353 seconds)
done (took 15.962857203 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.201979999 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.209965259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.209645832 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.216273944 seconds)
  done (took 9.962434013 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.211022827 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566600367 seconds)
  done (took 4.90487316 seconds)
done (took 15.994855625 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219216855 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221762574 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220614188 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221230164 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221382833 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.220032914 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220779668 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220228897 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22108825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221105711 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220846088 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.222580094 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218525387 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.225933618 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221521156 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221803601 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221089139 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221331423 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22129656 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222539935 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221383753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223127149 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22475394 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223443042 seconds)
  done (took 30.444278012 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224577452 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225002512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224807166 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222032872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222671909 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223444192 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222981795 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221484848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220616426 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223585453 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221035368 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224511408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222523112 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222826107 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222585784 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222308539 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22443913 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222881528 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220884457 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.222703851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223848619 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222587474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.222873665 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224632364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223771037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22343412 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222375281 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223581554 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225845124 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224572263 seconds)
  done (took 37.826602569 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228990445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228795173 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220881743 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228211613 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225216068 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222496444 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223553762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228966375 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226265571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226788569 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223639729 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221941911 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22568362 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224201493 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223611829 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225677772 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227110985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224509685 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229349867 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226400869 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227013541 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226340987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226642297 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228511346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223761228 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223495965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226123068 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226208937 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22492897 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226026946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224855119 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225504041 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225849217 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225789097 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229139787 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226881966 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228412562 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231209653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226314053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224421254 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22734788 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227302791 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227263062 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226788896 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231139862 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230495383 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225866612 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226344862 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22602865 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225724986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227195153 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226199528 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225331647 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224023893 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225208954 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227528242 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22667773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227160434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228576388 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227451631 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227447298 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225750844 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227445782 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229411701 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229879597 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229320447 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228998359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227760075 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229271379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228665526 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229197205 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228839255 seconds)
  done (took 89.454602599 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230808518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228125816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229636249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2302563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229109274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228913971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229520927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229535242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229209546 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227126675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227385587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229996614 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225242159 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228319066 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231555517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228935365 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229617253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230589754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22868058 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231089575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230862012 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229968721 seconds)
  done (took 28.176336314 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230100403 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229835283 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230596639 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230982994 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230889446 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232483661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231122717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231540896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229284627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230767549 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22904287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229543956 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230568132 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229075524 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229612638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231735896 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228830617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233547579 seconds)
  done (took 23.284059356 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231551745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229628971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22928017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231989541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231652619 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231728596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231572123 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229121183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231979298 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229829614 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231510758 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230299501 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230416455 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22899387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231076455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233173158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233012817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230240316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232281685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231994292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233491863 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229703141 seconds)
  done (took 28.219710715 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230701378 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235126832 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232504429 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233653386 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233220752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233882155 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23242644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234353139 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235066837 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231833784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231134526 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231467451 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235967753 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234088068 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234756776 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232991823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233448186 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233374932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234247823 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233082428 seconds)
  done (took 25.804053975 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233731897 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232453545 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234048175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234526827 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234780876 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.234345286 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234926489 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233352028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232549227 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235036728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234094177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234896974 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233855039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235303909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234286542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233624706 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235378005 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236102782 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235340419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234233633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233714942 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236733245 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235975526 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232907223 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234219137 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235818021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234241779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237835513 seconds)
  done (took 35.70699273 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235327531 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233120974 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234957539 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236312377 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23453804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235422076 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23529109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235224509 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234189204 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236754622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235813628 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235842436 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232277296 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235565147 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237032907 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238079909 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236264118 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23620418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236181486 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236331551 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237756883 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235694993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236435784 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235789618 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237174111 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235538858 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237943922 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236290556 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237746605 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234853187 seconds)
  done (took 38.21475252 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283781949 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284966067 seconds)
  done (took 3.708563491 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23725144 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236848659 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238133514 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236494062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236980899 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237803454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237948594 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239761146 seconds)
  done (took 11.041865075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23311976 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239343689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238836132 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238825085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239315354 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233391175 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244984417 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259675936 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235698298 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237601977 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23874454 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238438756 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23879359 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239954189 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237385301 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23958591 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.241438961 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239157419 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238332712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239898529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238592007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237782332 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243382117 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24195306 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.23609863 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246140721 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245107432 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244246283 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237338983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243296655 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241037136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.244269693 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243638326 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239039262 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240109493 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240916358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247222257 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261280325 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248155548 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24375538 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241368007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242178381 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239292863 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24038632 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241974692 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245840012 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240935812 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242938957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23650838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24015951 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24725024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237958139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246800914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241437757 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242581339 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247560282 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263465902 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240890812 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244917978 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247739357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.256990188 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252284837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242850131 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.24782077 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251284615 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255591994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246933807 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263957452 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243509711 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242209379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245861529 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256407495 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253492745 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247439731 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241638012 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243350671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243713785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247449532 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249633061 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264775806 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246133088 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243375836 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248312251 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256633478 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240236628 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249898454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243199743 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245168668 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239701545 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24915756 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26663355 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246620341 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2382323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241516779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242503071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.245624735 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237860943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241235869 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245224446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243519205 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245351124 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243262594 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245544216 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247281229 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243706556 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247307555 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249532168 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240367452 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250047206 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249669226 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243832238 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241885936 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.244754322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248187961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244852602 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.245589304 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247635068 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24274067 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247758904 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244093159 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2496705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.261989084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247959304 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.246248846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246962356 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25424158 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244192964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243552359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.248430948 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246360468 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246139836 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244538346 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248865154 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243849256 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249282977 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243868262 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247721849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245601911 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247098512 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244695678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247317188 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244621593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245404717 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247639225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248252881 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244611869 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254643476 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248024728 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244970164 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248297874 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249125464 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245685882 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244545039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249307312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24491628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248753292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243820222 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.248839503 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247409029 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24816621 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249042674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243998107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24819036 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248820806 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248827124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247478596 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249915884 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250120985 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247122982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244995212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251110191 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244980982 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248641249 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253947223 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250303356 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.250111894 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247938682 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250022939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249507595 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24903292 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247490766 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252412366 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250614511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.251892154 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253693792 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250511432 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249945401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246368834 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246535066 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249522602 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248644887 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254847617 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258858182 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260034047 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249041523 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251268021 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247887961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254073482 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248945941 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253189113 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252853704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250683361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247722033 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249719806 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249088911 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252168181 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248901057 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253292193 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254379534 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251343233 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252237627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249013612 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252013754 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25399873 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253490851 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252170504 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24800887 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252526413 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247645602 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250521233 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255251133 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251699273 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254051626 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.255226964 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251354569 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255879074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251884073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24984666 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254043484 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252775999 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2505457 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259000359 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269289109 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24961168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259121833 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271723601 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250299514 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254709006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256033015 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254474366 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251505619 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259657478 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255102323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254546345 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250961136 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249839036 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257893541 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25689069 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257104069 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249038429 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254167886 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250899084 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256128088 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252834199 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250591222 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253223796 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255198744 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25481403 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254744839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250773358 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.252833094 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255005691 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253948958 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25156005 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259004163 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257070225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254045914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253484001 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253483377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257947572 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252669153 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255652478 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252068866 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26499092 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268581544 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25752834 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258694623 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257309579 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257690133 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256702131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254813623 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252238 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252872807 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251988407 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252853999 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255851972 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252089939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258715296 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254883672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259546682 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258334215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25580447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253511552 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258341776 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257597527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258671862 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251903416 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257206079 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257066567 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256231745 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255641286 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258088059 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264054487 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276649006 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258774167 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255584017 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.734451687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252698676 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256486578 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257980916 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257735609 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263197196 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255785468 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26096018 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255893059 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263866283 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261847523 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25572597 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261808878 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259389392 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25382971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25597801 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260065965 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261123371 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279153306 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25571933 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261929171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255978093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258680651 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259473235 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260648533 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261515385 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260561702 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262862487 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278578277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257990328 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259851597 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263269591 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256742956 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25979446 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254841215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262111482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261847761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255971326 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257403031 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256218192 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260877338 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259006213 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259184802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260565894 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259330943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262783388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27923236 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261910057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256284512 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26132172 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264452462 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263603096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28008305 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257147148 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258394513 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259309458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258490282 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256196184 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.259351445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257233812 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255256751 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262976157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.25796579 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259762695 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261976131 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262896631 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25392702 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265069281 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277076517 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25847316 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263188022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259812678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259338974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26500883 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260991134 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253322166 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.258653148 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265578903 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265978951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259045301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.262173875 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257257392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262715195 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261606635 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263536763 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260797604 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262706459 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.260891137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262637442 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263006141 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265192433 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260903785 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262132258 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260343311 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.266584738 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263828249 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259453145 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262896242 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262365552 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260162236 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259984411 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264682865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258961788 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265050714 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259483585 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262407191 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261542456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263581183 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260916855 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264135562 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256192474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.261489234 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263527348 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26222986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263634335 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261751803 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264566814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260646473 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258207459 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264985769 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26203204 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265254041 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263588871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2634841 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263371204 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26684007 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.264170484 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264470445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259486826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261648182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270222976 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269290139 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268199549 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264861824 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266764314 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259318983 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263176656 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.265100496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261766944 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263727181 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264312408 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26304087 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.260107267 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263051956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261573955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265935392 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264079608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261060418 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273360859 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284043538 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267366593 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26078851 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.264786901 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260191922 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2658064 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26413529 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262903592 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270251725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285322243 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266272517 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26385069 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264748392 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261327968 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266288588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267184513 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264966397 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266175989 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264866875 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267717302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265919728 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266942127 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262345359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262664271 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.266674287 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268096516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269180089 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267316809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265386039 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26601892 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267841921 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265121912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268076868 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26843821 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26239609 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266450633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262302116 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267355073 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265993107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.267546571 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270964776 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267677696 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26755447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27019015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273136924 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267509154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26621055 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268321509 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271120319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271102607 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268546079 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265395563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26859949 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269238771 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271828568 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268791239 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26785107 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279666285 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292598691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265713476 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.265367702 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272094079 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275253783 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272961116 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269448843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268562137 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269481729 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274122637 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270710954 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275607255 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291783707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270657949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27143673 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.268214818 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269902204 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268936755 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274084127 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268028719 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268754658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279266526 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274783509 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275192086 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290228956 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290551033 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270235035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272687688 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265616416 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.270922157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268757865 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275199653 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271317384 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273390421 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273617819 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270216911 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273737473 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275038807 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278175929 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27342361 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268955311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270113041 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273838336 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272455996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274505933 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273400584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270077355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272717317 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269140718 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282007748 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282198531 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275445985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274643253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272035192 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272709963 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276396722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277279706 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.275202681 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274084449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273170052 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271138881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277028908 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273752158 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272245035 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271053244 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271532027 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27492868 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282903241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287500062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274672442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274828446 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273692287 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275643132 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271989883 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275281331 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271794232 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270485084 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275821899 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27726789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27394542 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27645733 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.273101266 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277643391 seconds)
  done (took 751.17011596 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274889459 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273784488 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274391241 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274636593 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274364677 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273700641 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27554059 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273965282 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276940898 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277379223 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273815179 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275272895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276718777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275729561 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274061627 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276258659 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277324188 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275738205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277301376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277378888 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276931123 seconds)
  done (took 27.96172222 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274756496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277470996 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277642862 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27769259 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277539969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278447443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277290944 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279009327 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278718752 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280499306 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279809732 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279286682 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274580623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27811753 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277681588 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276334455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279063687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278686643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276969491 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276714434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279331062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281301536 seconds)
  done (took 29.292336219 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277881218 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278244685 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274597803 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.278942441 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278611017 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.280226798 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278878442 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.279451944 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279883742 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.276661714 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27570762 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.274649147 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280269794 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.286841979 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.2771708 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.282524652 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278687977 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279085724 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279920082 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.279094219 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283114624 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.284193321 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279855468 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27391947 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.280464758 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279996791 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.279658053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281734934 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.276244048 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283623442 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.281000158 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277121061 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279106756 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.277141614 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.277840964 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284888343 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28141372 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.280319719 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280332101 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285773332 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.296791497 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280040619 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285900005 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.287168416 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.281883159 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27956546 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285713011 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.280615034 seconds)
  done (took 62.641452184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.875816071 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.892190987 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.887574267 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.89568839 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.890710775 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.892954309 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.892426542 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904572003 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.886921513 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.888911133 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.889546484 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.899165344 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889943971 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.890039941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.886040572 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888759826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87961341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883536346 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.886375308 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.897007613 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.889250679 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.887836552 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.884300629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.883448252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898131856 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886171502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885007417 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.885028192 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.887619241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.883071847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885374927 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888374361 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.899320281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.887746368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887423189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.891281728 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906675616 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.895933653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.889664237 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.891601328 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.892344849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.88480427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.886275745 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886065058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.900606585 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.89116413 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885837559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.890347544 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.888785564 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.898860699 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894238438 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.897807814 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.895733049 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.894580244 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.893018007 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.892861364 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.894508889 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.903564531 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.892622419 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.89110093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.885545086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.906032029 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.895367029 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.894866352 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.891676729 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.89715196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.894405351 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.896202154 seconds)
  done (took 129.788888415 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288090256 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284034615 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285004067 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287537107 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2874879 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285990982 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286285027 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286232502 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286738691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285649438 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288001301 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284088003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286309825 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28539444 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285091764 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284951211 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287214867 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286917176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286503288 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287163266 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286378048 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286351446 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286961341 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288107055 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2867812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285913277 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288002263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285872535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285943164 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289054742 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287886277 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287987139 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288237267 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287037576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286840726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288801408 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287255285 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289761365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288590141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28882935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289387827 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288836072 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288380365 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288433213 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289044068 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287763203 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288350656 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289677501 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288620631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287733229 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289933241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288396929 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289546076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289893575 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289818541 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289417471 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291983097 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290219799 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288201153 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290911198 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290882393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291105561 seconds)
  done (took 81.030746064 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291057338 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290756067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290590072 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290621657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290394652 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291635238 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291193017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290852279 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290938177 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296212419 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291582307 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290858703 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294582745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293340439 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29256979 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294339672 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294800757 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296161429 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291892104 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292149193 seconds)
  done (took 27.032598142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291873353 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293892346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292986586 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29210876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291612615 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291952063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29353554 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294007451 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290887539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292700247 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294467757 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293206056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292427617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290866466 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291668791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292472839 seconds)
  done (took 21.868520966 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294492437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29210651 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292815318 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291803237 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293184391 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291324845 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292869294 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292251548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291994598 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295057675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293668007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296077686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291727607 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295214377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291866206 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294806148 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294833664 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293466098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296904798 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29427057 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29468081 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294682737 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29426184 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296393137 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294550444 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294418424 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294236481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294825125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295641997 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292650501 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296728028 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296237799 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295234058 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293208945 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296019774 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294631642 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295970964 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294708215 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294094947 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296868229 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296509204 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296216363 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29667654 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296999805 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294653484 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293469381 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293746436 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293706113 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295401781 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29458577 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295151712 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295427654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294725864 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298270245 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.293477308 seconds)
  done (took 72.391244885 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295832974 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296621243 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296544485 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296908331 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296830188 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297063737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295321852 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300061702 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296091131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294938257 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296628332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297115494 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295119229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295910229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295985202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299128766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297264726 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299489382 seconds)
  done (took 24.536268238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296635408 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296026811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29925053 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301339142 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299615204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300780469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297140145 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297510778 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299250284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298221937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298204352 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298320308 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299006846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297600181 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299940618 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296066181 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298030771 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297882049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302035536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29703344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295806369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299954377 seconds)
  done (took 29.75944087 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292609875 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292626892 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292861548 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.307939467 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.308358409 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293337336 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292957328 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.2947608 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.313731607 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.361641128 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.353686272 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.310105061 seconds)
  done (took 16.907849343 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298856652 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299009854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301711887 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301225626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301943779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300708632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300489144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299054693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29864205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301297721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299908465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298879135 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299556643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300481892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299282239 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301043126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301932368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300703768 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303114809 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299227438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298843762 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304271633 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298382713 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300353986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299998554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303360976 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300186578 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302078718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305044885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302329803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302186511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303849321 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301892361 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301321694 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302537588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302154514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301697011 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302624197 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299801971 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301638022 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303252159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300702355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302533106 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301128332 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304429597 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305635229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301804951 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305409068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302597523 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303467046 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303430598 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30294421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301238854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303498537 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301790404 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302860862 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304103716 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305058893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302275316 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308103771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306365505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304051071 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302854764 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303702287 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305699648 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303327259 seconds)
  done (took 87.130912898 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30446872 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302898049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303317778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303173935 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302762905 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304058458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303233838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305603683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305195626 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303041232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3037294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304981927 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305021216 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304452789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307601365 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303569043 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306890315 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304554062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305059456 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306152216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305765268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307744883 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304990698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30604131 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305222053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306300533 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309838928 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30763397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307233823 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305868141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309282534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306068879 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309437618 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305796296 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305559035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304934926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309190519 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308350237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306344667 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306682915 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307298226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310610151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306060295 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310938133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30622485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309671114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309528592 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309831437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305708268 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309901226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310786181 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306533548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308507717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308077441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311482638 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310059417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308414686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309489554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307986697 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305920745 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307104729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306115398 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311010232 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31047643 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309566418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30792506 seconds)
  done (took 87.454564695 seconds)
done (took 1801.976017924 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470398737 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.426333995 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304404285 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.319691487 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296203483 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.298834909 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.30877893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.294903165 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302565327 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302558723 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302629315 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492596475 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.299495481 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.29683145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301837574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399501378 seconds)
  done (took 26.619187251 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333420813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30897653 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.419935803 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324416596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33390518 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501035334 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364276883 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308889798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487767061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.32733919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.307932611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325167392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307642626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.297533149 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318534907 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501965394 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.56579109 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.297167815 seconds)
  done (took 28.834222291 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.770544319 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.320493266 seconds)
  done (took 5.293326018 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328539303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309665351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310779207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304630839 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.301658228 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.293024644 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306235595 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.305853927 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.302922896 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.432312518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311963785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322898189 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32640627 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308024797 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.3149554 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353365239 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463465624 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305985955 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310884228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314500838 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308028619 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404795247 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351635681 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314226705 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440029344 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.311863005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.31524773 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316364 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.447226595 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308850506 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307853258 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309380614 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309508099 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.302541081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81314396 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316305099 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.326250107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312403113 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313843846 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.452855053 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305046794 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315740708 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.303180788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.787810064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.455119135 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438350726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.320457746 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.305225389 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311437666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379138142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311731248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314757265 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37143573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.126466628 seconds)
  done (took 84.069870463 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.353374394 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.302004042 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486064888 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3290365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299680341 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302145674 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305602042 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601875651 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312380385 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303711533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598022392 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889774209 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313720624 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.363868184 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.159326019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373830143 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306059516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313494543 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306822349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.303208634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86515373 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321434917 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.300118299 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.42262127 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342417363 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829748291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.298076318 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316166404 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321547906 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.296919801 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851255099 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.328011032 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365607176 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.299913337 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581283247 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687258163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655096668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.299695012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350140095 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.298945819 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.324718574 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826731718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687179712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.300681002 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302082058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827955635 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.306952391 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.311006607 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.317905024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559731405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309904644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309663393 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.318461527 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318501882 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.307284835 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3923857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393435399 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844166995 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311118966 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30310962 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340989152 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307899249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312823379 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314883881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332317697 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679916967 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515374854 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308624708 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690043999 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838416443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325205486 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908033288 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324592326 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316920169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.505860559 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307175663 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299648073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856394908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316168522 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301937503 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67224835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30893962 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594928487 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316995627 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301618185 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884969845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.306689515 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.32017865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310901832 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.301929978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318162575 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339715921 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58540384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.338507979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310316856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.30855091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.32504564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302277163 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.311685219 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316196593 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913525863 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.336114843 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311101495 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312966622 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311897014 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.303619317 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.309711234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311985016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580952702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310985298 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.336472032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310154015 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.303814922 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.313537634 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.421922959 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.316474959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.635636608 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.314924995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321497603 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316366104 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311564923 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355366566 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304515262 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312281199 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.184072194 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.573729724 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.331172466 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.317681836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310284423 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327308198 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322176297 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305891059 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.373359653 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31253611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120081627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334655905 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.327800346 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.312356494 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326011968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313106184 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310058583 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313239098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609237516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591376428 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.51507275 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313374615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.328452882 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.095620124 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.329581709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487186204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.337943666 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307400523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565024401 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524129164 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313842979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.306469026 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.309474378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576293236 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314404141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635241224 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.883802168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329946759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315701673 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.134872851 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052354431 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.316021016 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.31782333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59661648 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.32289704 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314786981 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.313856894 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.312744522 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323389505 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332312136 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.315650925 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.314506512 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.317186317 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.635091839 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507614683 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.335667624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320927307 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845769194 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339134389 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30795322 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326838407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31549698 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.314837649 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382817122 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321020528 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.323138461 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.31923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.312425829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865321779 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316764239 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.3162709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507850253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042202926 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33212842 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318347561 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332536623 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.230263889 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.857156641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.332899095 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643534445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.312226647 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355625096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317033811 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334284286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855893332 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314115468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.339828742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002941824 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.332758168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.775400549 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.312021948 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317120823 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95407357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.330722434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.318576689 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.309335105 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30978571 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614818584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.318661058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.327907451 seconds)
  done (took 494.15700563 seconds)
done (took 640.176230629 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316710775 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.320142986 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.311523835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.316632663 seconds)
  done (took 10.484517644 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331740564 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325194915 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331499716 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322053668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330234874 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321863146 seconds)
  done (took 9.181960917 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317652007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318557161 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318396167 seconds)
  done (took 8.173291093 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532745525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.339167462 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.648177693 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334322095 seconds)
  done (took 9.074156551 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326516584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329317458 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327998932 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329137607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331354069 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332321722 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333938637 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330399422 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332373068 seconds)
  done (took 13.191407571 seconds)
done (took 51.325298441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.487478868 seconds)
    (2/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.360154197 seconds)
    (3/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.310979156 seconds)
    (4/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.490330242 seconds)
    (5/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.445837994 seconds)
    (6/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.527762155 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.395391287 seconds)
    (8/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.367330558 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.398502969 seconds)
    (10/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350048189 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356931691 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.471585525 seconds)
    (13/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.467509222 seconds)
    (14/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.365550648 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.00709193 seconds)
    (16/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.070394787 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.449408772 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.328271486 seconds)
    (19/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.502659567 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.314707343 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360861046 seconds)
    (22/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.314690684 seconds)
    (23/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.378376693 seconds)
    (24/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.230954531 seconds)
    (25/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.450914348 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.460865242 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.384404314 seconds)
    (28/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.384210508 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.362357152 seconds)
    (30/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.313966709 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424765907 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365631304 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.324458276 seconds)
    (34/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.385195381 seconds)
    (35/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.414103963 seconds)
    (36/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.3771587 seconds)
    (37/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.350840573 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.0124376 seconds)
    (39/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.341112612 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.401013154 seconds)
    (41/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.432661183 seconds)
    (42/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.383868309 seconds)
    (43/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325081105 seconds)
    (44/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.544891002 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.410456523 seconds)
    (46/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.52183346 seconds)
    (47/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.422122971 seconds)
    (48/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209382837 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375063546 seconds)
    (50/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.529035224 seconds)
    (51/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.471160811 seconds)
    (52/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.32347833 seconds)
    (53/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.458998243 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103731223 seconds)
    (55/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.33088635 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.362601955 seconds)
    (57/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.422669105 seconds)
    (58/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.109991794 seconds)
    (59/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.354898226 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.407879945 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.465844812 seconds)
    (62/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.348576185 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.477246545 seconds)
    (64/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.491387166 seconds)
    (65/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.112496064 seconds)
    (66/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.506738218 seconds)
    (67/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.324032379 seconds)
    (68/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.075631266 seconds)
    (69/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044084926 seconds)
    (70/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.401295647 seconds)
    (71/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.651456731 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.345313386 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360406247 seconds)
    (74/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.436776671 seconds)
    (75/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.530719916 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.430260181 seconds)
    (77/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.429405361 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.385660412 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.468390288 seconds)
    (80/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.42679967 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.55621723 seconds)
    (82/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331498959 seconds)
    (83/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.041736837 seconds)
    (84/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.396267866 seconds)
    (85/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.434322569 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.399765322 seconds)
    (87/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.403034542 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.423720304 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.329941139 seconds)
    (90/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.387404473 seconds)
    (91/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.432121402 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.443955909 seconds)
    (93/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.120548274 seconds)
    (94/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384579748 seconds)
    (95/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360330266 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.412671566 seconds)
    (97/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.337827573 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.449084044 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.394617706 seconds)
    (100/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364145721 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.358695881 seconds)
    (102/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.541400978 seconds)
    (103/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.347968815 seconds)
    (104/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.316947805 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.471110304 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.463845092 seconds)
    (107/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.530795882 seconds)
    (108/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.438680171 seconds)
    (109/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.981604979 seconds)
    (110/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.37353463 seconds)
    (111/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.347485919 seconds)
    (112/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.364263583 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.382559437 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.438087294 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349008146 seconds)
    (116/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.516951527 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.550836629 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.506717252 seconds)
    (119/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.355903885 seconds)
    (120/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.33023556 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.422087279 seconds)
    (122/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.421402869 seconds)
    (123/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.430343802 seconds)
    (124/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996445826 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.318974314 seconds)
    (126/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.539245596 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.021212258 seconds)
    (128/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.987707189 seconds)
    (129/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.353821085 seconds)
    (130/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.533247911 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.594916045 seconds)
    (132/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.42700892 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.42387273 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.371280004 seconds)
    (135/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.09469693 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.448875225 seconds)
    (137/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.490720421 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32025972 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.67445861 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.356904212 seconds)
    (141/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.414198566 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.487455182 seconds)
    (143/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.393658722 seconds)
    (144/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.345497869 seconds)
    (145/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.32124691 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.334089749 seconds)
    (147/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.170895779 seconds)
    (148/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.320885821 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.51825188 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.409298459 seconds)
    (151/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.486950514 seconds)
    (152/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.31669115 seconds)
    (153/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.155327337 seconds)
    (154/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.338534679 seconds)
    (155/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.369561027 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.519395819 seconds)
    (157/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.478837898 seconds)
    (158/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.261802163 seconds)
    (159/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.437581416 seconds)
    (160/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373842172 seconds)
    (161/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.501161526 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.552497276 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.419701187 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.407470029 seconds)
    (165/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.45738031 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.44512004 seconds)
    (167/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.383649477 seconds)
    (168/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.367901759 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.444406429 seconds)
    (170/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.545395659 seconds)
    (171/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.436018409 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342437058 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362925226 seconds)
    (174/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126567355 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.464308694 seconds)
    (176/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.538919637 seconds)
    (177/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.360781065 seconds)
    (178/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.474385913 seconds)
    (179/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.331683518 seconds)
    (180/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.373367571 seconds)
    (181/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098921336 seconds)
    (182/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.435072109 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.339321974 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.623425925 seconds)
    (185/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321874989 seconds)
    (186/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.490801456 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.402034315 seconds)
    (188/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.025170915 seconds)
    (189/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.472619497 seconds)
    (190/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.371792546 seconds)
    (191/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.507249705 seconds)
    (192/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.448435633 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.361756782 seconds)
    (194/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.493476148 seconds)
    (195/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.323867671 seconds)
    (196/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.480830794 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.449507952 seconds)
    (198/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351734882 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349017293 seconds)
    (200/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.347458802 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113458336 seconds)
    (202/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.377753242 seconds)
    (203/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.489344764 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.517575742 seconds)
    (205/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.703181556 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.564794052 seconds)
    (207/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.377245073 seconds)
    (208/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.450643908 seconds)
    (209/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.4944967 seconds)
    (210/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.51596713 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.518693001 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.554351443 seconds)
    (213/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.483410796 seconds)
    (214/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001595989 seconds)
    (215/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.383225739 seconds)
    (216/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.472705835 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.42930536 seconds)
    (218/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.349745363 seconds)
    (219/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.279756278 seconds)
    (220/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.415297856 seconds)
    (221/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.704293673 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.556683949 seconds)
    (223/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.481392334 seconds)
    (224/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.555868823 seconds)
  done (took 371.838180554 seconds)
done (took 373.059472087 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389619778 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.521688587 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342457276 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341491262 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385435925 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.343674099 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376895229 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.352137609 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353000508 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355035264 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351774104 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.353703205 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356303356 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381051873 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.456283816 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353445021 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340993844 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347362498 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393426671 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410390938 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388615754 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3876932 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360679129 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343715555 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39161483 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389935706 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347356534 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349521784 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339774038 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391949444 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33395866 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356399956 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.401990527 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.399848975 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388520065 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34890638 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387438342 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.524785099 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386430059 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383190727 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355451248 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.400609719 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354720154 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363766549 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.400986711 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363832345 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390397775 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466236839 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334533111 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.334033756 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390654452 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.410452768 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35412426 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343522508 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348048371 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.459779385 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353161417 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393494147 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351286219 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390246471 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.45924535 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39161055 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.40990249 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394624549 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351208131 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359434725 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350678965 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.411761617 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35470882 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392118206 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389720038 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356290993 seconds)
done (took 108.527637985 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.47253625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.344193645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.490929907 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349083281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.514565184 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.493522658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348061733 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351794755 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350456262 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.166135646 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349792762 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35094989 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.377591342 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351337764 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.478173754 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351179004 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349789533 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.058825694 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349892417 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.49197646 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.344166835 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350174705 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351182098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.183436732 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.343438037 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.342542043 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.491611452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349907956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073699035 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.340915918 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.34200091 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.076963919 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.493710246 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370283245 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361378153 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360675464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.516227092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363694644 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.47720417 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.477029175 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.495018516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389389416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343547245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.346519625 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35490524 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352990258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349545241 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379654536 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.348459933 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350892302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.062159033 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362809526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364269755 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351798489 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354605199 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373533798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356482366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353104122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.495594812 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.352546246 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.477431258 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.183359088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.173934451 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.35273224 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.346338398 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354053352 seconds)
  done (took 109.666767401 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417216675 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42599094 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.466896768 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358926763 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404171624 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468816997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357788884 seconds)
  done (took 11.141100169 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355836676 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35346216 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40082824 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397234249 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355158453 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.503704645 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354467802 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361565282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355637704 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403079533 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.354403672 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351695277 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367477628 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.353016141 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401740089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.362763725 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464542685 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351277169 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355033753 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503840641 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354197856 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365000751 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403920335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362261996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356938998 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356005074 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.13548295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353444948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355926397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355959369 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356988738 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.404415233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355303017 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.353713859 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357068338 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467990216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355117848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354129647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.357093334 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.353354034 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.358678795 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356002842 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358152796 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35573807 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356616476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380355473 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357682348 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356879297 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357963686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358407881 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406454702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357910315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358885214 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357692154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.409616164 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36688008 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359367095 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356101855 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360218703 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358902672 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505925041 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402557196 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358248219 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402282481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358863599 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358553736 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360945664 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358195554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447854898 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357512295 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405740248 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357583916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535135535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.380173 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360364351 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357322047 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358648904 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357242768 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.350831998 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362546341 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356999136 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355724654 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36083892 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361010739 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360726277 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512788462 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466413618 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360424166 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369168216 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363707019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360670239 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408396052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359385321 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359621811 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409089409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476582395 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409399426 seconds)
  done (took 139.743587279 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370669669 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370269353 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359385178 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383745875 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370010015 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.3582736 seconds)
  done (took 9.458807736 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359591167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359184539 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362706851 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.359974804 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361993267 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363946494 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361811405 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360248157 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365108199 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.359156154 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363263011 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358810021 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36120191 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358941539 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359409962 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362808446 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361289743 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362029346 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362796904 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363328372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.36140739 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364482033 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361720314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360857742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366082114 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361109217 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381820499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364513626 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364008029 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364837401 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378922413 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361249255 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356822553 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365251915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365648271 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359701617 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366711024 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367236466 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360595406 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.364850074 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362022987 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360884374 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362621384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366743159 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361828129 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363957311 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.370233942 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378505605 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36420289 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364728152 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362603361 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365333383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.36704062 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365679928 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363462022 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378952586 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369847959 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363208033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365049838 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360803736 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368825272 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36792878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362932715 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369812472 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364614552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366538451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360439931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369509177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366247994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365756852 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.367450444 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362231602 seconds)
  done (took 100.486711129 seconds)
done (took 371.735464956 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.372158401 seconds)
  done (took 3.622819731 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.453972803 seconds)
  done (took 3.706480908 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.245476757 seconds)
  done (took 23.504076457 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.394990733 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.437253001 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.392885155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347337989 seconds)
  done (took 10.826235912 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.792489915 seconds)
  done (took 4.044098347 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359331608 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.352132387 seconds)
  done (took 5.965792106 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.635281548 seconds)
  done (took 3.888388506 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.896568179 seconds)
  done (took 4.153455543 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.388656845 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.372979212 seconds)
  done (took 6.022823285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353276398 seconds)
  done (took 3.606991069 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.049738362 seconds)
  done (took 40.304671638 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37518306 seconds)
  done (took 3.63368794 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.384960812 seconds)
  done (took 3.640617947 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.149425569 seconds)
  done (took 6.403439717 seconds)
done (took 124.578359646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.358537377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.350291842 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.350565623 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.349533324 seconds)
  done (took 10.660069483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417767967 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419301193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421625013 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420650036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.419943087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.422934276 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395582817 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409229309 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.42170929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.419610934 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.420966272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421204302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.423639652 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409678005 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421059909 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.423042759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.42125156 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420632594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396820016 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42235307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367507057 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419698423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421823196 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370688214 seconds)
  done (took 35.182934981 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882770361 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436291519 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519340283 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419222593 seconds)
  done (took 7.510264159 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446600334 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.449716008 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461920702 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498984773 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511362309 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46030015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396644753 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392894838 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37789023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447240202 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49892031 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438900743 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525097695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372636022 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.578102654 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370448902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.371975413 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449032218 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501352508 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512006016 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373537818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.44926626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.448493196 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442185909 seconds)
  done (took 36.029061371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.379807692 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385976703 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371234744 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388073979 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37477861 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.373915536 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374302779 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380647551 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.373604465 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.371976409 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.374914218 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38650032 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379273167 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374529441 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.380934738 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375255232 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381359926 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375470752 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374270444 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381103389 seconds)
  done (took 28.814794983 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.362032136 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.360176334 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711525504 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617573228 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.362149228 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.351770612 seconds)
  done (took 14.021635203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440262292 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.596383114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.362024713 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.741657363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81508447 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360168591 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36632232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.626265447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.953303859 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932337137 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429574303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432173994 seconds)
  done (took 20.314404877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.362013353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363948216 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.378142432 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378406409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.426415462 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382196578 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374761349 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.361253458 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43065633 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442061924 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38467812 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428829342 seconds)
  done (took 21.973842327 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464822471 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368829627 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378125363 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412955448 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365198056 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204272484 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421223974 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135483137 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39397303 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64662162 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370453731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459312016 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624066541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378657164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366850083 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355558844 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61609243 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871154047 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362875661 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366503425 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423759416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371079357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369170327 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614845282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387401632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367531399 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631338656 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368197954 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663242668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384555496 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380259599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37132211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646003726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059220493 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488134134 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594952807 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389000629 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361962872 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.385231742 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.407024212 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377050157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372481739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380167933 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371424669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369820718 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369423311 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164448668 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395233911 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371218668 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37192165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639115531 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46860952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378087808 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371598979 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374962111 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372657811 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378771843 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506621049 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97191551 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371784553 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387427077 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.370055927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371643547 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380420752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999632724 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386859322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380514932 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376499164 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373032882 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363916227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407413637 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372828548 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390613258 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372606002 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094153387 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380278955 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372853822 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927193315 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365971365 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394389113 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604961174 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36964032 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371891549 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.374912475 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375598463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122220142 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37899816 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361285031 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429612768 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156947241 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.620881161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414018474 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406595476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597196561 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359697236 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372668056 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.383488283 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376385572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389304596 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145859483 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393844011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374423524 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636600833 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583621853 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385291383 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355186259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907964774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397348889 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.384086752 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387785332 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591775218 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001560634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406199617 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373981037 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397731408 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376133224 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163071083 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374395383 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469063318 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378563614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656152842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.210809326 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374333827 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445294588 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376387098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376308781 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375420366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378312055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375517252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.594375799 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406925094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378851406 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.378983539 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377632142 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.373363731 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388675101 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.378314611 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599677514 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377084873 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64472449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377228051 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374400786 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36799288 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592151967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.391434882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.717092917 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640619933 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385408419 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379120815 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380668378 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39779169 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481889397 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399904267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.390765269 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624471229 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381723686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383011128 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376652464 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381001926 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382280561 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385786494 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374297255 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987654539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373317389 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378564585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269678134 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392231347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446836103 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386806246 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608997579 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411205971 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379306998 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402282848 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.38841713 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603974316 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387543634 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.380072834 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46087699 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893462401 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005859775 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413103751 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.379365818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.376084252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.379543833 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379272128 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380172173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378297326 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60719031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41132048 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396753172 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994130554 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399820582 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373173278 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391052584 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389679001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.387352968 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381090919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.380109084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389858884 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396530731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383989449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524105277 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397954877 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381085374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902941116 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389923183 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379304847 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381414241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418426979 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381300022 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299962082 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66253381 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397031159 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643202393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38275748 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.398656512 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379727226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381847391 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395765908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39641739 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39197013 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392792259 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384167031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385770888 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950187823 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1603657 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942476402 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394843589 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396899146 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374901639 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154423999 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403417417 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378469185 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628673873 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164396926 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400054626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894627581 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400307286 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195400106 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645144224 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619920318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380167598 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.400522527 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655717154 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598135335 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418674066 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397891054 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376735489 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363122615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994404029 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416672635 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469121858 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158627917 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402399963 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387264123 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.403012851 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389106113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819465247 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40518498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385957915 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393431285 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391323414 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308127467 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414662278 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384166109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023652523 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404700888 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894398102 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406223801 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612160241 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415461896 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388266934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.393899489 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.377603956 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650152123 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653887547 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388499188 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393911695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955276889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272226504 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392395011 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384176003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172034692 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384285248 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689588771 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.405976361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402925518 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381433652 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383838787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383280565 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.38316978 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389120475 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363268615 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890634951 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381886123 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403573339 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404469454 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410607112 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641118035 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.401901656 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000028169 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637448231 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38134355 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428257933 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392807703 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392073718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.37685188 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389852781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387405418 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394188765 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614285038 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385111419 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.395579749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435843728 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598739168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386008699 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4035716 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650668949 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.409718277 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.393624614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153656542 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438921548 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388092485 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393388665 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397973352 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431900337 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476010523 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618679597 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.419056736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400508238 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827461839 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421234308 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392565717 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404784732 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48671307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398605987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391926357 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.174479347 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00585783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173490139 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008442585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680868157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390813305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39969846 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390384916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547964598 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389966749 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665610207 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391304271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.387553912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415699092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393328681 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405982065 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603684472 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66604997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390729176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390587836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410716431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.393837192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436451454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601133269 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903099969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956802834 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386655099 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401264463 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174862191 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686506483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390663928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393849961 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390010441 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.399372676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396254739 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398008955 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393563038 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538739451 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663886143 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092705726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423354609 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.421241548 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.91131929 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397041562 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648580218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391209123 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617699891 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027049289 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151705088 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660967877 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462440394 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623595298 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.413043407 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555067963 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.40004415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387101982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394140664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394045435 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.392528795 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402942431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018245345 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670011029 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.400141367 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399243253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428762152 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.403327283 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618553982 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155594874 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617636102 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404403214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401200746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396160428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017026739 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680408962 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395937979 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395669589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655904677 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416356052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420487154 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.913463052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.394929638 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96557767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.365302771 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415632333 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406021564 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143527901 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018384247 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410927542 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913201198 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391181422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398278792 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673772766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.402841347 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406796584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67533677 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400604397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405699872 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62961432 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.032587485 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225427611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.399415313 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402496366 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.398880491 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395204667 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472444649 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39823774 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389913439 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.852484936 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418304265 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397685329 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405998025 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404647267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408365844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.400307575 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398265132 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.400962627 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.399007278 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.386682061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419222602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533035084 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017368929 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418551589 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.075485946 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.728043289 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65275743 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404043412 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38866544 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403078392 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398641493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400899034 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392666817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388054378 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966014479 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.404557476 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.411686752 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404708859 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.398798876 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608162217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39897174 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627349888 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426687887 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418223207 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.385684134 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397507142 seconds)
  done (took 984.174530985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43686897 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.422413041 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.44521803 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.4179117 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449954158 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.513082174 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.47886399 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414780939 seconds)
  done (took 20.869175902 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.409034247 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.404415988 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.399235955 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.399352055 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403159008 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904439398 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.427760561 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399429125 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.420915181 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.403578082 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.392969939 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.381461015 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.424269173 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.40308051 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398388006 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401000784 seconds)
  done (took 33.269444197 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.512567658 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.598253713 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.569998168 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.411097066 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.402429862 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.407318393 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.699400328 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.406929772 seconds)
  done (took 27.300910398 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406969558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.404626391 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.405653986 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.404968696 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.404457139 seconds)
  done (took 8.32032767 seconds)
done (took 1249.697245164 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407415712 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.406272401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408133923 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407003022 seconds)
  done (took 6.919005877 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.389708849 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.38204092 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.382903261 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395077569 seconds)
  done (took 9.840685574 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.154084639 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.06029282 seconds)
  done (took 5.505913464 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.89230592 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.911021032 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.896297824 seconds)
  done (took 6.989849183 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.681164115 seconds)
  done (took 2.970684382 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.309178545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.398670263 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.089005686 seconds)
  done (took 8.088261868 seconds)
done (took 41.605416283 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402205475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.732083436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.556051462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403819917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554202816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.555887918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.129016322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403518634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390451751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391368897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407633277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570094949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.116984284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.742682928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.118201641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.656411681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.558681677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.399788125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408729496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419918968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.127645456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413728542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390527878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.391628626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.552679343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539462751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401576254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.64152131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398734239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402855688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.536777664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401716559 seconds)
  done (took 83.40882741 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414211023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391124404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394210853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409598929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393803934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.395490336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408985966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39251099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413733814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392796438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393596194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394122737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395403928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393954802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397246899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391158989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.394340088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409810458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410501463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392720654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409896732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393729569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416189408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425546778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.407949733 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392956623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410449865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395287521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423989869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394030753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.397040868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.411099646 seconds)
  done (took 78.151506189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403104991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413281988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.399242816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392192453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411124408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.395198904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396728057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.399074057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393849525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413108887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393336225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410293326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398373375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396958884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413266653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.395249233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.396417489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394955014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.396418378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395971741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412518484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403109117 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405615733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397163031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.397997219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420298279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401949522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396238737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412790873 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396051327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419933278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401945978 seconds)
  done (took 78.168952869 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.685067734 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41262161 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418715456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.407480815 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.414764355 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.414970247 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40542104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.688850986 seconds)
  done (took 15.145850115 seconds)
done (took 256.170022823 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40729645 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.929294412 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443178108 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.406095031 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446590448 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433782174 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.642412402 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444011598 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.643279607 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.418652474 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.424590765 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.417898223 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.257403313 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557922224 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.287024698 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.410627459 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.344128653 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.397638148 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.026406074 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.699830345 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.432112913 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.416481932 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.276909785 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.36964409 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.408377831 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490892895 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51197338 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.63436815 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569012097 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489986084 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.950184652 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.418773822 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.420358984 seconds)
  done (took 65.725501691 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.412273098 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536355143 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.414336925 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.414772901 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.53979984 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433797252 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.413062372 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.416420668 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.41768611 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.417631453 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.417083141 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.418900422 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.417087292 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.467573243 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.541521563 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.42780335 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.411524603 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.534272164 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.413724615 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.411070732 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.463986369 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.418188841 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.418752278 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.466756576 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.418747704 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.419923022 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.535553027 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.439205277 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.41851467 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.533369981 seconds)
  done (took 44.708162509 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.420501827 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.046254702 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.195187605 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.413940845 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412613347 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421719942 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.723805687 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.41413656 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.417445117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.417295758 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.937328645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430774474 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451850545 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.223760704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.412138682 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420092883 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419714225 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415751658 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.053048862 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421110485 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.745006173 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414255769 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.725175044 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419587709 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437691376 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416011437 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42153654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27836003 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431894913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.941131608 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.263669282 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.724457574 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.195080113 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.229607202 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.24890296 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423252886 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422436195 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946152154 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428381913 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.416399729 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.725587606 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411256872 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.212115172 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120166677 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43235676 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420411598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.294505835 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.956666376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.688779257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41794964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.236115963 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416740643 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423077526 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422552243 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.678965748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.413996931 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418334963 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.315745377 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439444221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.728090007 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416397931 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419328404 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061149342 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.412029875 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.053749903 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414985073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.427124406 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438066343 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.214584725 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41581412 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.141677884 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.43016777 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.424585908 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.947686594 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.063667311 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.353121333 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417190478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060948183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227479245 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.739411796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418447405 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.253900197 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.74481813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.418312741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.424413449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423979098 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425006549 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.502028952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.728837099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.078089367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.146172873 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.339683083 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.747255927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423809848 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423578391 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.318951088 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439095371 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423884784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.215201758 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147856885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43476284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.429245215 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.153792868 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434999146 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.73094178 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419613007 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.225028485 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.416777003 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.502901846 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425377751 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430344611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.444716911 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.731959212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420846592 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425947912 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.137357896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.972093464 seconds)
  done (took 199.93703166 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.424483089 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.410839731 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.421511193 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.41081927 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.416733388 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.427626788 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.413933703 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.416529889 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423975384 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.414626294 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.415601715 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.42679322 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.422792872 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.414845929 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.417653018 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43065265 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425400722 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.418679625 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429106901 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.414767668 seconds)
  done (took 45.705494661 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426317682 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027413482 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011097119 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.422836941 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427301302 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.423602347 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483133327 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438765496 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.42751507 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.74410647 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.607133387 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.44192496 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.428052295 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.427782223 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.000017426 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.414800226 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.747821557 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019430707 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.422548234 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027918257 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414578356 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428923227 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.424006438 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024239695 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764493309 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.728935757 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481648961 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037581852 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439340209 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.429290742 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028390623 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.424359583 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.426037949 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029676475 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.442511003 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.442289579 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.430383435 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488735648 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.50013533 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.76078504 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111221505 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.750505776 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.436432099 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.615468365 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.429884918 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421135122 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033247234 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44296197 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424033277 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430672666 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436897385 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.010587152 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438404541 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010515354 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441958223 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432036868 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033970977 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.008240913 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.015953225 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607056689 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436736535 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.738318253 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.42686847 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.039169819 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442619422 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432665883 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432420935 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.614535581 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.046452479 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733492603 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.746579032 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.747781196 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.42670872 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496010068 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.443265804 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.829906085 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488060201 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.84691704 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.747894263 seconds)
  done (took 130.476864953 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.723505111 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544168181 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.849993174 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.055916108 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.419594697 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.574566163 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.538433125 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.695367257 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.42331676 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529334392 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.121473666 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547676168 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.256332405 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51977488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552965395 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.574224995 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.854005962 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.418462467 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.175790655 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.09768484 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.423658872 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.568454753 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.005816774 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.652930008 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.430472415 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.093468701 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.438629003 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.124500559 seconds)
  done (took 55.524482639 seconds)
done (took 543.374249471 seconds)
SAVING RESULT...
DONE!
