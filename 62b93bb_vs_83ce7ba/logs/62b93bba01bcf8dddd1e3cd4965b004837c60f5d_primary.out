cset: moving following pidspec: 20302
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.011339968 seconds)
loading group "string"... done (took 0.599054507 seconds)
loading group "linalg"... done (took 9.776954714 seconds)
loading group "parallel"... done (took 0.1858913 seconds)
loading group "find"... done (took 1.542786897 seconds)
loading group "tuple"... done (took 2.178811454 seconds)
loading group "dates"... done (took 1.51548729 seconds)
loading group "micro"... done (took 0.241592172 seconds)
loading group "io"... done (took 0.529504353 seconds)
loading group "scalar"... done (took 47.367066642 seconds)
loading group "sparse"... done (took 14.369623104 seconds)
loading group "broadcast"... done (took 1.272065985 seconds)
loading group "union"... done (took 13.253739054 seconds)
loading group "simd"... done (took 2.771666112 seconds)
loading group "random"... done (took 11.239769307 seconds)
loading group "problem"... done (took 1833.347257247 seconds)
loading group "array"... done (took 28.220114983 seconds)
loading group "misc"... done (took 1.215579013 seconds)
loading group "sort"... done (took 4.071396611 seconds)
loading group "collection"... done (took 20.565834397 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.774927018 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14884881 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.22069145 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.389305043 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.262421936 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.149489388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174109784 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.591882828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023481548 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.29266221 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154910476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.599857667 seconds)
done (took 6.498922866 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.282612368 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.398093306 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18262043 seconds)
  done (took 1.237869278 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0749705 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180210122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112845125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.101282291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114233348 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113524684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.11343983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112716564 seconds)
  done (took 1.507944189 seconds)
done (took 3.771076371 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.551654729 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881137417 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.552102387 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.173524248 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.208033149 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.183132742 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309537119 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157858812 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.114548513 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11306867 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.223330846 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.352186934 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.509953945 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.004133402 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087705889 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126922728 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.09719585 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690874831 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08263395 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136665748 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.619093998 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115817955 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12010709 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124463831 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207473252 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131969825 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173019694 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104625016 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669749183 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103302736 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.23689033 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08377629 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.180278613 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252277364 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079717431 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108334908 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688766192 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185439626 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.119149031 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096614148 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694268017 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080314369 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.250332294 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096457335 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115915387 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188204064 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10382857 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097159719 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103206192 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.076908403 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177368469 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455957921 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107974048 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172204397 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107820485 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.709211206 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098393125 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156197336 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140868522 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107636757 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083754411 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114324285 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155804456 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11500374 seconds)
  done (took 20.218073481 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.162724043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168874046 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093177973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156781769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143406285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080652323 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098598773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078716642 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124912775 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.222797639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131964556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.186025584 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073650611 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101643289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147486039 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245425758 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093513412 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119934159 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101113015 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091236404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144851021 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109370813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112349829 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111424785 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.161855698 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20374613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109587375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123456095 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099764219 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12022382 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13981432 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148926549 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092086309 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083637232 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190183642 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1053574 seconds)
  done (took 5.358418953 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.228319509 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118509045 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.240296142 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173844495 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1475303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183448136 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147436992 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.290907115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.308892645 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18639902 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131144415 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112212122 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091928048 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086270294 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131676308 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096081596 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740129924 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182828784 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149989155 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153155048 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106725919 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102718743 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382952559 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084101353 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097745329 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101618395 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.163472582 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075379435 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22955293 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101916 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.356398761 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116732274 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089608962 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132498356 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209077738 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108998743 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143433643 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100506304 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078989331 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.23536337 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11090704 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077344075 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125250251 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132521416 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133880814 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099027965 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092938173 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246058107 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09772205 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103074081 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.149082241 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201554624 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.136044778 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09668113 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.380025864 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113315957 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089538729 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100659792 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.305271092 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135093356 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079272662 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097110421 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082703393 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09521086 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452241159 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093595059 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.153092686 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084101626 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.186085682 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10187005 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089076626 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097507635 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08488168 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103515325 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116141582 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079148857 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094630864 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094900438 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078290232 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100581394 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118923117 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085159934 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096887079 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14615093 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111709567 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114247487 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124062075 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083590785 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09494618 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127005997 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082334325 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09647284 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082901788 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.193471395 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088322321 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120191167 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104253499 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141858658 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098791651 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.207390873 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080924294 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124839359 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099853997 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127232116 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119250501 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079001633 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102113115 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093299603 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078610378 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161446826 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080561714 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097436677 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099987162 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095956654 seconds)
  done (took 24.787063372 seconds)
done (took 51.020724416 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.51215642 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122616926 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12353204 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.123523198 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105139969 seconds)
  done (took 1.729803874 seconds)
done (took 2.444091464 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.398201303 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193242135 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123611529 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189985873 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107127497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.215169635 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181500248 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120713431 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.229107382 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084500774 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.205365277 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083720874 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107503551 seconds)
  done (took 2.985857725 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099936689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12210738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084896007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115608191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094364339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098116666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112465625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118166441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114975589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106350118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078244406 seconds)
  done (took 1.856714385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09636867 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119589211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083811461 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111944985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077458546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112093844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110385888 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105208647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111865579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108707879 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079500094 seconds)
  done (took 1.831179012 seconds)
done (took 7.381155927 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268937459 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.886127378 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154539327 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210910435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.39133218 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260130048 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.698118002 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172430401 seconds)
  done (took 13.975894779 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.18005351 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103386912 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08580057 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103111614 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085609883 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101033125 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099667593 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086166636 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102276282 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085491543 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101620934 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100776133 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08616622 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099508767 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08567348 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10233953 seconds)
  done (took 2.393388312 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140504337 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141728115 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09484523 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11598923 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106857478 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090882088 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111784485 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109497755 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089320694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106522095 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112888474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111915626 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096903836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104328183 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110783217 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09843099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104558891 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110366287 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.096795733 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111032575 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113123199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092770662 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11159295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113264057 seconds)
  done (took 3.408744215 seconds)
done (took 20.495745792 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.205784092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09997484 seconds)
  done (took 1.031773424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.154744205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157114703 seconds)
  done (took 1.038935244 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117593701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099573192 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144985712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.124756468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.100722781 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0842696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.142158625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100853577 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098536095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085728681 seconds)
  done (took 1.82674944 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089569243 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106199127 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113948508 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15182044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113892782 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090764344 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106031949 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088853624 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105649239 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101820633 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095152526 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127259974 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107839531 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129374678 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105535962 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096413506 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116320136 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.109107654 seconds)
  done (took 2.684441187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08377265 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101986875 seconds)
  done (took 0.912885172 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091912612 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10110337 seconds)
    (3/7) benchmarking "month"...
    done (took 0.104970693 seconds)
    (4/7) benchmarking "year"...
    done (took 0.091055079 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101580332 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084436836 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101606497 seconds)
  done (took 1.404970819 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.571678645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272717848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.390903107 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116575668 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150165553 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.390525382 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153128376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120563567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11952367 seconds)
  done (took 3.07800491 seconds)
done (took 12.702412052 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090006665 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241761452 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.59873238 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124511565 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083737266 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15681882 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342093683 seconds)
done (took 2.36881172 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33153426 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157965086 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090399986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097169477 seconds)
  done (took 1.413639208 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078713779 seconds)
    (2/2) benchmarking "read"...
    done (took 0.109135613 seconds)
  done (took 0.92068623 seconds)
done (took 3.083864615 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084939368 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096590642 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131748268 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.082821353 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098798323 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.081304115 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098109386 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081212199 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097177265 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081429404 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096706762 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080204674 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097018789 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096485587 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082450629 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097302916 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08135392 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095945508 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080862604 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09690977 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081545287 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097184757 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081549193 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097224094 seconds)
  done (took 2.976741528 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109206161 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101915425 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105828202 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090945586 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10700518 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105632117 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105988586 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086291104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.225307909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084467898 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106256224 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108303343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085087629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.107973215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100202818 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107070212 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090598522 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102916993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084199707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108035089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106386907 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085886526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107668453 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106087631 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105962106 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091799856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101326534 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101044054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090548454 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.106830022 seconds)
  done (took 3.864914885 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089343326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093558504 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082988581 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108214541 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078771454 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099804744 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093912587 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08065999 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09906339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08258737 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100077201 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081758982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095840036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084040402 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.1008461 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101227628 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098146077 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095326315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078765203 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100143419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1010366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078894231 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097674787 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082302909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097880066 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078428714 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098351804 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081885816 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100425556 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082403404 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101855924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101507386 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083853518 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107819251 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08674195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099067117 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105299673 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079267494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101115704 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079906278 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095495095 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082674669 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095394786 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090743249 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101024358 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099415945 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07974576 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101426864 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084576969 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103833576 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078941176 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095034071 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102025196 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085039908 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101400677 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078756358 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098815126 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078941976 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101499838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082080169 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095317399 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094024689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.087229305 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098977843 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100734628 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10703752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095744273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086559921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099918953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089308767 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101721914 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109170464 seconds)
  done (took 7.433403753 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115777457 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112436304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.101507369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084667216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101111283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083549707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108016136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0997275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085070028 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109554391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099069509 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084714073 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100719534 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084362318 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099422175 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100662638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094432531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0994976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083629817 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101637916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09867886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092615621 seconds)
  done (took 2.881251329 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.270993139 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091236733 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.156133082 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12063174 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125357474 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120047347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104289736 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090108939 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104856482 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112003255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096252035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104829223 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126793366 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112234847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095429267 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113270098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104072405 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11308212 seconds)
  done (took 2.906200163 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103278589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102681939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127421319 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086790285 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102805161 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101217173 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095685085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118462893 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102535456 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086011294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114352861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101279014 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085206638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101791995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10176534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086245927 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10299171 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087116652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112372701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112986647 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111021798 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097507511 seconds)
  done (took 2.985458976 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103961775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101908818 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.139625376 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090557959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10156229 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099688958 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095278489 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102611845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109966698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086047887 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102439927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084403166 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111964266 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1038961 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09438715 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103926071 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101102952 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087748509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101132045 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100781971 seconds)
  done (took 2.770293574 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184097017 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117716019 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1012244 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134107383 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11942558 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102063878 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133241797 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117535541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117197983 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136897308 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103564366 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117634664 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133543971 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128763123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101482243 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131829354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133558935 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133049769 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120099979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102727803 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134583764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118228928 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133330492 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10217159 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119197297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117219919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101587519 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127318024 seconds)
  done (took 4.170726137 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083711872 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098278733 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082631422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098208121 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082290166 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09899386 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082164143 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09961414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082586089 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099380122 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082698744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098823788 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097486503 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083199598 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098806772 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082630766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09831231 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082760531 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099913454 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082942154 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098956124 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083126075 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099794484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098931488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082578337 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098290101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082903257 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099126381 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082531429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099448492 seconds)
  done (took 3.493431018 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096159632 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10967764 seconds)
  done (took 0.956001656 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092681538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121369163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082753794 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101589679 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.112786559 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084508029 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113764418 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112053133 seconds)
  done (took 1.572180965 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.152189578 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154944075 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090786757 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114193413 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.152618873 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144911188 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147671106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106900831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086632827 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095155177 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.151218052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097205642 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090118371 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102940168 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087833119 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111168434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100253078 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095909481 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110691856 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101802838 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092139453 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115111685 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106944216 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.090292497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09993464 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094122346 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112263025 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110248888 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087325795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110238945 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103039753 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084283782 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106078194 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090142119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102070634 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.151973192 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117656905 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085619284 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107083747 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106554707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095572064 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10162508 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109149341 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086918229 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110170555 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08980637 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108111066 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101493622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081021101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100911489 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084605987 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10165336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099669178 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090706965 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108056655 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116400945 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086721222 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101985765 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085290234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102555077 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114659568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084513286 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10877205 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11359901 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091288229 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105645508 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107287888 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085105562 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.10270888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085501601 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107603452 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124611507 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094911714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107539169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10860114 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085516909 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102914879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091098597 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10661133 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109654829 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089333974 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110659043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109201118 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084162176 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101058573 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109640579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086855423 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106743606 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078121271 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120088017 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103546808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085968129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097751347 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091506581 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100816391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10448366 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082130251 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106492285 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084513955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107124357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10803433 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082693415 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112314926 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090088654 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108222868 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106731674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.146689682 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085533269 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102919579 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104243277 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093307346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100918233 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090198609 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100593507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102652738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085215601 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109795126 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092303245 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.104015436 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10719416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093248347 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110672057 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103771541 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084155838 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104573485 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089342879 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113314768 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110399573 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087144733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103278491 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086605806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108273127 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107410564 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089458701 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110080683 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10328261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085021626 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10232198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091122487 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111356888 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102868238 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089207882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109771979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106934658 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088948282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108908565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085043719 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098659052 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108665075 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08530613 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102625832 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112688712 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08482957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103610413 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084577233 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112863624 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103886339 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091294638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104734465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089886153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10832545 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098631754 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085799835 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105603476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093017532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102415196 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.103012006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084901042 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109821905 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081232366 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106561196 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097992477 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086668368 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.109171417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085664568 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105215751 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103470201 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103487353 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118377289 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109282075 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092644573 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110138579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107707725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089861202 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107686695 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09121214 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108840296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107459684 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087761776 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109888499 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10177646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087696673 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106435283 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090592335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098196319 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087471903 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099364395 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106911701 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092615719 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107392554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087392604 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105664761 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096073259 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103474109 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10678046 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081747129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108058947 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.090470599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110082831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110310411 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092254534 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10546322 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085328659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113706938 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105735909 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087786074 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104495613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099813358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082378779 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110407169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088598599 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103143112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.083845257 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109453753 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110353471 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087734227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099744885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108427539 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096358782 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102673413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090289969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103074756 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108067379 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119662104 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082315949 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102390765 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094636844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108347463 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084096223 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110594879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105621904 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09120364 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.107184856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087595725 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104624006 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112011945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089968437 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.102155809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084523916 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104944587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099248333 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.086246259 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112125605 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086238582 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105044176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114495345 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092461956 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110273895 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106174347 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089807136 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110537049 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109151122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088391716 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110914069 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084245225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100074749 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104198427 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081033447 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104607957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085686873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.109611994 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106076758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090175915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10759001 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11092687 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087087268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111439944 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12280396 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083968622 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099951686 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087150379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107917534 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104322231 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086632945 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.107410742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089828443 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108326537 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112325447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081944766 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103717622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090451085 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.1044432 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111378681 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092305947 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110554767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085155512 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108025614 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104272834 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096601425 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101329659 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110337815 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089843143 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106620449 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104299239 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088180226 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103162912 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081107262 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105025852 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110102953 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084012873 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107480988 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093427652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105395651 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100866975 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085951042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.111413213 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083342528 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111871685 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103499654 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083103959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101466763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.092192767 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110035672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110239123 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086921605 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107599908 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092986218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108456901 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102481376 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096707961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112916268 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09152114 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116090704 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101041207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087219777 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116879477 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103500164 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088053316 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105241684 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083327335 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111395847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1107466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091533865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106891831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081539239 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103867028 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.110785166 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089180653 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.107701491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087666433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108837043 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086173247 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108260982 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111421069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091190411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112750066 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109401188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089810048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106139111 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.092312873 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104265447 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101091897 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083452284 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105472324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.092713869 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099391013 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089392562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110006514 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10652895 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08886436 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108659764 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084821758 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111871394 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10888359 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087477551 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116963887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.105214978 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088681813 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109535569 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090969089 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100759414 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109504271 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089130268 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112274982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109376807 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091273345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108122217 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09134186 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106163653 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109638601 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091419845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.110721783 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082124378 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112348846 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112597774 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08737543 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106361809 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087812121 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102998735 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108053823 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.093482618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107769822 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115084277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.092667851 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106299819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089467639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10959086 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107034612 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093903077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105447462 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094934352 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101433939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112635051 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087923903 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.113377853 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10517297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083487737 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10923346 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090509187 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109229688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113333132 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094359189 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101985788 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082819183 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10633133 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105296669 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098343549 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114132768 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105632663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088845935 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106518766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087465075 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113633414 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084076843 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106728278 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10999836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094386354 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106993867 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103282251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089557481 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111473623 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093896192 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109047672 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103473947 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090096743 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112674351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106963148 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085534347 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105655884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093651174 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109785798 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105272545 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08329215 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117293769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113821075 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094311952 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105632965 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090235075 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107394729 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.107288095 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093412654 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10629849 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110709848 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087643964 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110697103 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099017883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102043348 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102044047 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097793968 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110389837 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113413236 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.089563041 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11128774 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093160017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113308163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10704124 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08368605 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102263738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088403162 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102389389 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.087586911 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118229617 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111322812 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087410246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109330869 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109172839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087442805 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.107980658 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082983148 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11343102 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105671681 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095796736 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10305051 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082165788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.108001078 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110076373 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089134685 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111063371 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086099686 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.107777222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102239022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089179068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115200003 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089563096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.110812766 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108249626 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0872633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107805532 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117339862 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086203742 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11240359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100283757 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.113278027 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109470825 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09118375 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113993539 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112231079 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088137127 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113759034 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088702144 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105523401 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112158996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094016658 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12429778 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108192739 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083986181 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10960202 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088336021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103498213 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116623763 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094635679 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.113453502 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111876709 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086152453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116129247 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087774588 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109451787 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108359344 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089198794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109808676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086248205 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10937122 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104638605 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095457975 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.115267547 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09056309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117183945 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103261616 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10025893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11428859 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114186389 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086647235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103994069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083766387 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108985371 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.113435874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093019678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.109718175 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.090294449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.110249569 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091402393 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110387094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108063469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094116529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111901942 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086669124 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111693069 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10965104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086178294 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106601888 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092852882 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114076276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115175721 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098980553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.113090642 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107218912 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086888593 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110314916 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088197994 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112897497 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110880864 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087454418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10439839 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092562765 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112988178 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109517821 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094895768 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117054874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10698243 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089896859 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116493837 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.092314052 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10642053 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113977427 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088108104 seconds)
  done (took 61.121629146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.16853569 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096097402 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109053165 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087751193 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140884043 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111101708 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107307626 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090428223 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110228645 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123399168 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08743641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108458547 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133703245 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143425552 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140088151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126713185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087890246 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111130153 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08776441 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110246779 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134895615 seconds)
  done (took 3.222092465 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113544051 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13026342 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128770718 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.132853142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118350449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12738618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108079431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126724263 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13292928 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123136796 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131140777 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127323494 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101475444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122120035 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122678644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122501826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.131988721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099478671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128608418 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127277505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120635888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12798234 seconds)
  done (took 3.507591136 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097446356 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109707804 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092966073 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10802949 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09242515 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.107730817 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11839244 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088285888 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118327801 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088496937 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104993186 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105205609 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08751863 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107829198 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086675174 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.107393565 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.098650357 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.111808224 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113815679 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087787374 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128012096 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107278788 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088709724 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104816422 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102120368 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.113594572 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111673746 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.091608773 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103643447 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09162764 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107816845 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10915057 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090832997 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104976201 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.083511319 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.111552789 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092129397 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107966584 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.107196251 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085094732 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.108311232 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092225963 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116923747 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10762634 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088059009 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10483099 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.091321242 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109136289 seconds)
  done (took 5.699782049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.157638133 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173433765 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.119843191 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156819254 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140960444 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110571268 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114618501 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160675558 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.113775482 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094813346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138508862 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13772926 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121764576 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.121834399 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115682661 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09626239 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121151139 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.118642144 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109602026 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121882931 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12548179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12171295 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113411449 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135642606 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12037102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.115649142 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09824145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12246858 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.135908262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126414331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122224655 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104854156 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.141286733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128122562 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116999153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119872369 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136783605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.100732686 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.118696824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.093153011 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121684438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12412486 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119201445 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138575003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097543106 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123536377 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122898794 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098688475 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134952613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120920583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129384261 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139095981 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10022676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.117963403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124608044 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138779907 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119074766 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095753415 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119738269 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137093213 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099594374 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127543024 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138292102 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120857388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129323634 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137173291 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.100438487 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1206652 seconds)
  done (took 9.283137248 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12750525 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120691631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137853119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138931566 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120302436 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100125233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120349833 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121621693 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10155781 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131555396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121208804 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.233577244 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09667768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129881163 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122808558 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101122469 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122043898 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121403626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122346747 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100996519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121402885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138165102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120840989 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137472777 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138320447 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098080847 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121786985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120968649 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137114048 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102133731 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137630332 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121068011 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121025988 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137431138 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139019849 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.100466355 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111550565 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121868501 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100378694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122508099 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116462734 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137568083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101390602 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.117128636 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121436086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121813005 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118352594 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138188783 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129323321 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130799439 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121292882 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137966586 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100277983 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122328181 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137174507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149191355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137629565 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137153565 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121112384 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137697161 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138336875 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148708691 seconds)
  done (took 8.579023318 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08876497 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109084973 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090110734 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.110088809 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088946742 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109428065 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08902633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110671847 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089152627 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110171432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089251284 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11072684 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108911383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089482365 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109785318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090170974 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109480687 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089476815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109638668 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08846978 seconds)
  done (took 2.807064612 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10294102 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136021806 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114513121 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104443502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114658375 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123579676 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093315867 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114125889 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114596679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094204507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127057747 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127690266 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114691478 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103843942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127140148 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125286806 seconds)
  done (took 2.659060695 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118669848 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.138344768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173640436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.118364946 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.116683408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101970179 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.115553922 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.111125883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.092126699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122406439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093183735 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.119067951 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114268002 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.093801103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.115358535 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097684743 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.114266524 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113831815 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.094364744 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.173586336 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123083918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.118103989 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094920731 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118658581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.118850459 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.101978375 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119388809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.114776178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.095467568 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115606139 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.118860932 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100151453 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.114225779 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115532902 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.094175373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.115563957 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092787295 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114239298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.119104631 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094457794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110928713 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117666131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.094718094 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.118163586 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.091325449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.116539396 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112491736 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097072655 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.117705941 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118370374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094534348 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121806449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.09387476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122927074 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119769896 seconds)
  done (took 7.00812792 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108764972 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115763931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129818098 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090493426 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114946576 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097189884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116186737 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117020502 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097243158 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110315463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117157338 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095408347 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116842641 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095688561 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117310768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11687565 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090482414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11589271 seconds)
  done (took 2.787646581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100133612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114753107 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099084817 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114508125 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.113435388 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094111296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112848396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090886126 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112524607 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093034736 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115734944 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113969531 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091715831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113818743 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09433232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115777869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112807107 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093306374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114438742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090931747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114478599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112786034 seconds)
  done (took 3.155717242 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106510759 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172881587 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124110274 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.183609751 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112906756 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.113084233 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102523936 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112340978 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132492326 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090926338 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.111164951 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111815627 seconds)
  done (took 2.300459367 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123968026 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159690137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115917542 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093560402 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130418063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122273011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12220037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102076445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134362173 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139023882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122673601 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138040958 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13612494 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137737514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108254909 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130176918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121456524 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123081852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09568036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149299049 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122234826 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135634385 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122278125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101742808 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122179086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138972423 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135477884 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139495209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122389196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114971046 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13024988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122032851 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137477704 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13974993 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093798057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136091079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121613868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147851327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129752103 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139055976 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093193447 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130255652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135013194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132316507 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136913528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122013274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110648651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124284108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121137911 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157799337 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129211092 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138998025 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130107581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136091395 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115254966 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176570629 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140442855 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136235375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108589444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139648931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137428063 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130365939 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137417056 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141679811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130613022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138238089 seconds)
  done (took 9.320407152 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166503242 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097100847 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12361379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143859287 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139529918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100868908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122575617 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122356585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122032487 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097434166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177528176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125409861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139914989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138335208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122671725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100514142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124992611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138718881 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117481611 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157507743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123180667 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138433489 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13774586 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117954159 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139749382 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129918876 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123008896 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123269488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103003035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122683162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132985972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122348228 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138488676 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096657571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138758877 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122931309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123000414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113723251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123754364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1301302 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139960202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151011873 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12327613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102322006 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140415825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123299019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124358632 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097375642 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123247708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118737103 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140430459 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13981794 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140425644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118392817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123463681 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122707034 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123546232 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101818609 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122863813 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130755771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139257296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101337349 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178629129 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102466869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123974817 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139008075 seconds)
  done (took 9.208928379 seconds)
done (took 167.406557027 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159257161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.180011776 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154800417 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151257813 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108856924 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145427 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121694335 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.15425329 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108741872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087395585 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108485196 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092299887 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176889935 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108291886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087991594 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113126258 seconds)
  done (took 2.890953009 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211989746 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318227814 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132601411 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120453569 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096143054 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112593868 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117206375 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096371854 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117350274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123791691 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09028074 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112017471 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12461782 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091086627 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115968264 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111110985 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103855503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.112472982 seconds)
  done (took 3.147845131 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117104184 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.16718157 seconds)
  done (took 1.123702299 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129609559 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21365109 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297194334 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167836666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141529724 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135237924 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.167928144 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11132098 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.228652726 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140120461 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140858472 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094802143 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14446711 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124622031 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.128504571 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094830156 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148128167 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121753418 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098086386 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11900167 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141850435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09838954 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.124973795 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121357891 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196872922 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13692011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.118113249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09708612 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118346868 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119928605 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097026649 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131518781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13540493 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.209685126 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102590372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.204791864 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127050838 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09560508 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118406684 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116919847 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101727575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123011847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134611709 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11673285 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.098048407 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127496824 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118023908 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.096655171 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121449165 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128894394 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12125511 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097731944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.206738392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12846586 seconds)
  done (took 8.120109171 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.500235172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161525049 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114822264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.606692411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108676194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121146029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.466159354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138262197 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255580231 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.485156558 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111196863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125192321 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260759114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.29646254 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.250628267 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376211587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.373502901 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120410615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122238787 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153313112 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115598014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123567278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096238166 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.618968394 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117871078 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092964042 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115449447 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12398318 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176077622 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115342986 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093016131 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214857502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287730655 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230750638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117864679 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092022568 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114147882 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185027993 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294308374 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247336657 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.20558358 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110308072 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092728481 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120554043 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118469977 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090023646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.200160706 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190969752 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.211335242 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094192907 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124397368 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094464759 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119297834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177408815 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112500203 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3799889 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382882574 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114984827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116871681 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104683414 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297420505 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114757065 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257170821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127734193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240064944 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091466347 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.888332349 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204877797 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093105738 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120918115 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093897838 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116620804 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119643583 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190982794 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.600446463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104853502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115895784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113565832 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253278059 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.114253254 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092134406 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200558527 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095708993 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118018178 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123367057 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099479144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.208848776 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267481866 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122038407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093199082 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118588307 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1228993 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096638521 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.253549814 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250884887 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173892865 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.256113762 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098413248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201622648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18264965 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122149918 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187596199 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116130972 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105251588 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11994812 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246540032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149019147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.11443609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095872778 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115195065 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1512431 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09574618 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11514112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184156368 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.708953528 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.203914686 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089455274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118715424 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093179592 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198602053 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097880337 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291684322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117949631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183441686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11650716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089801943 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116315507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180531996 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125267484 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115072233 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099226955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119100156 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273184474 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248588663 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12384417 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.293411224 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.210760871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099448441 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212983952 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09356684 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.208335182 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098525214 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121335906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119245849 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.883130708 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098378387 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117163923 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117322068 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.212133379 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092689708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115801515 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092355601 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112631006 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.861704712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095114648 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112713951 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.114723728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099815806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11617536 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092636135 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116760885 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175026087 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.288816529 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103146449 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116219662 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092398669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.199119471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095371689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115747647 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114786991 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093691557 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118438556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094083987 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11715222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190289946 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196370408 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253228084 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.855512651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092178164 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115504694 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266312213 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114393489 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345766098 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094249921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.258046379 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.206632351 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089765982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.641181571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186436551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214012434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117597318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189786609 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111086039 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094014778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.198319156 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093405605 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118367309 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173616565 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123824394 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099483744 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284552264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093254316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.274396918 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092019844 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.207008779 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097354345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122443072 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345835365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114471285 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106160724 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198691159 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094794552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115823529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.708978383 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116444654 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117897546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10028714 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275204313 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181883976 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114483295 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094530751 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124569186 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17895322 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253386781 seconds)
  done (took 48.296531324 seconds)
done (took 64.416346358 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.333921451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279818757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.345122863 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235181067 seconds)
  done (took 2.142109683 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.246134348 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.191355234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.200264639 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113986052 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.210280242 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.114706955 seconds)
  done (took 1.942793595 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.538427193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.400695732 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.371660364 seconds)
  done (took 2.178751113 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276977981 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276037348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331254002 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267912744 seconds)
  done (took 2.161278263 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.295205126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14092373 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108861766 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186208567 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.263016921 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.403450421 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163016409 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.216250587 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119439649 seconds)
  done (took 2.819954995 seconds)
done (took 12.109268275 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.317212155 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.311211963 seconds)
    (3/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.308800094 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.156840187 seconds)
    (5/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107073112 seconds)
    (6/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.281886259 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.325720656 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.206564036 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.232766932 seconds)
    (10/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.275252025 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125673577 seconds)
    (12/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.102223181 seconds)
    (13/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.238724246 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.241100297 seconds)
    (15/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.256182117 seconds)
    (16/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.168015516 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.232561934 seconds)
    (18/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.172079152 seconds)
    (19/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.205876144 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147827419 seconds)
    (21/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.192617075 seconds)
    (22/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.177905554 seconds)
    (23/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111206463 seconds)
    (24/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135994688 seconds)
    (25/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.223526452 seconds)
    (26/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.201409166 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134789884 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099159992 seconds)
    (29/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121160565 seconds)
    (30/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182870177 seconds)
    (31/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.280362103 seconds)
    (32/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.242249244 seconds)
    (33/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.174092551 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.160956163 seconds)
    (35/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.321562308 seconds)
    (36/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.219454538 seconds)
    (37/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.146999451 seconds)
    (38/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115342616 seconds)
    (39/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203013922 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142148918 seconds)
    (41/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.269436683 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136431892 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137112234 seconds)
    (44/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.200440768 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122582558 seconds)
    (46/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100379576 seconds)
    (47/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.288189255 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.132134724 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.156177746 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125519237 seconds)
    (51/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212532134 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096987682 seconds)
    (53/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123517714 seconds)
    (54/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.125311006 seconds)
    (55/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09669268 seconds)
    (56/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17882168 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109105265 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.259194582 seconds)
    (59/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201135292 seconds)
    (60/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110849365 seconds)
    (61/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113323743 seconds)
    (62/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.295483828 seconds)
    (63/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122793917 seconds)
    (64/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099513134 seconds)
    (65/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.265253157 seconds)
    (66/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096934072 seconds)
    (67/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.202139772 seconds)
    (68/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098387253 seconds)
    (69/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10686233 seconds)
    (70/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.170309487 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109480173 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.105836271 seconds)
    (73/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.175461174 seconds)
    (74/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10980178 seconds)
    (75/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120251788 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.218563161 seconds)
    (77/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.132835386 seconds)
    (78/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084289182 seconds)
    (79/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.220356711 seconds)
    (80/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.176369718 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215498091 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099978329 seconds)
    (83/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108049829 seconds)
    (84/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083458283 seconds)
    (85/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125367353 seconds)
    (86/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.180146524 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083757754 seconds)
    (88/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082312969 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137582431 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122623883 seconds)
    (91/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086295747 seconds)
    (92/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.105242144 seconds)
    (93/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15515562 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12396682 seconds)
    (95/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.106153671 seconds)
    (96/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189895547 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.154093456 seconds)
    (98/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.219221775 seconds)
    (99/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140188756 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083591129 seconds)
    (101/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120591565 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.159954372 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132952238 seconds)
    (104/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084963791 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123010616 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120156904 seconds)
    (107/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201203546 seconds)
    (108/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115348956 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098739412 seconds)
    (110/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.138158781 seconds)
    (111/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082725606 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123421889 seconds)
    (113/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175261295 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099511457 seconds)
    (115/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.15179701 seconds)
    (116/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.215554574 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115376362 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102092639 seconds)
    (119/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.172893078 seconds)
    (120/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090813134 seconds)
    (121/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.108182886 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107336678 seconds)
    (123/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.108159701 seconds)
    (124/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083794411 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122385993 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106857655 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.111181647 seconds)
    (128/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105343434 seconds)
    (129/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104636298 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.123436163 seconds)
    (131/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084041748 seconds)
    (132/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107564185 seconds)
    (133/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.083545453 seconds)
    (134/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146991949 seconds)
    (135/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.08261098 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115008252 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111193558 seconds)
    (138/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.214020224 seconds)
    (139/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108759901 seconds)
    (140/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083497434 seconds)
    (141/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12552835 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.153369432 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099539123 seconds)
    (144/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138641656 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124220791 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105411407 seconds)
    (147/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.153269617 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095979633 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167592545 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125018644 seconds)
    (151/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.168208716 seconds)
    (152/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091433154 seconds)
    (153/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.140499949 seconds)
    (154/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.148971123 seconds)
    (155/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103901013 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121432638 seconds)
    (157/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091135957 seconds)
    (158/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128498858 seconds)
    (159/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.081928611 seconds)
    (160/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.108462942 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084140236 seconds)
    (162/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107673138 seconds)
    (163/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.082295563 seconds)
    (164/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.081770512 seconds)
    (165/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.172163066 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.153881275 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.139154905 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114211366 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.108049214 seconds)
    (170/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083602422 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126874659 seconds)
    (172/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083020487 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125241152 seconds)
    (174/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199768289 seconds)
    (175/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089979043 seconds)
    (176/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107286301 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.120452984 seconds)
    (178/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148791609 seconds)
    (179/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083234185 seconds)
    (180/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139894055 seconds)
    (181/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108974636 seconds)
    (182/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109491672 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.107443031 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095246046 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.149079248 seconds)
    (186/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082837692 seconds)
    (187/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.109155682 seconds)
    (188/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090479275 seconds)
    (189/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.127875816 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102628999 seconds)
    (191/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108428166 seconds)
    (192/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.17684877 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092033135 seconds)
    (194/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.107193262 seconds)
    (195/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115934262 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121455278 seconds)
    (197/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083575224 seconds)
    (198/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143998942 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.140279003 seconds)
    (200/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.082142862 seconds)
    (201/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106956448 seconds)
    (202/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083300874 seconds)
    (203/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116835761 seconds)
    (204/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10117062 seconds)
    (205/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.107941957 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114323298 seconds)
    (207/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.108848582 seconds)
    (208/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210489222 seconds)
    (209/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109021765 seconds)
    (210/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123395825 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.139027263 seconds)
    (212/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098818996 seconds)
    (213/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.107221291 seconds)
    (214/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102562272 seconds)
    (215/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.108053519 seconds)
    (216/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097472728 seconds)
    (217/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.108583932 seconds)
    (218/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112169737 seconds)
    (219/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.115588105 seconds)
    (220/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09769031 seconds)
    (221/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10965126 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123963419 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104706745 seconds)
    (224/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107573509 seconds)
  done (took 32.719050858 seconds)
done (took 33.601586858 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.504034355 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134055208 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103827455 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129593016 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187219663 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128994612 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113560452 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134752704 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133202658 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.101902553 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117867137 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.133577621 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104354951 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.188393694 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133313989 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.122276844 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095800185 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134992514 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136107769 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11459681 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.21129644 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096930371 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135486362 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095862638 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.186708173 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122419959 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128313577 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103466834 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.13373965 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.126019884 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10781288 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120623168 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137255947 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11325866 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117953328 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100811786 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11844204 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116158751 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.102807377 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.126975236 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.109375492 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.127461421 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.131937265 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.096848634 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.127672554 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126061369 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093126393 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133696594 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118958785 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10507715 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120931302 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138135841 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100231832 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117996414 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094188308 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121319253 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.132416559 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093665604 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133849918 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094031776 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.122662796 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117268449 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104620777 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118388995 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099367116 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120380558 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125813059 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104000848 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124492506 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119823161 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093535325 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.124103173 seconds)
done (took 10.068251558 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103800422 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185903326 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188934801 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.218806196 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.125465399 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137142315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142808627 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151443056 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113340473 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14207956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158133614 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.147911376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.196703887 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134318336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111515318 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.129931334 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13496651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108693319 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.220296579 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.119612186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160963393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134274203 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160118261 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140647459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101592089 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156537159 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129457191 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.10271682 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126028949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132409959 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120662414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126966645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128618819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117643716 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137889822 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.133026142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136070353 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.102482167 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126403746 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099396182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141951856 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137963481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099023929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135215687 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.129081085 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.136169337 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110899074 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.133448651 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.128157966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104508771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129398543 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152409401 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108533048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.137988116 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133058473 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108216287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135352313 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131540598 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104131164 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132975259 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123792092 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102836903 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129012338 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151610911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104415028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134761414 seconds)
  done (took 9.743288494 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119462087 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.164223373 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135591911 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134392801 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108286584 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116611317 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116363134 seconds)
  done (took 1.824057637 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094040042 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189835677 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.189294803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213632145 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.185732745 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.198541049 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143106525 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092501541 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.153371662 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12746675 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190483538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.223397554 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.128976041 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.13461184 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.19120977 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092873525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184654073 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.120276399 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12950824 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189106106 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133127896 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127961188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133444138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11816187 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183602514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095232397 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274013149 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137239154 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101020995 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.129821147 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1069906 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.229626746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184344718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.131746193 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099255553 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185600108 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182651281 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132730741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.188920107 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.125555751 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.184534103 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130039413 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110266909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.133775415 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130328895 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169082029 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112055438 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133152231 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128689645 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19204484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104401085 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211737101 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10262622 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132001907 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131227985 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109391694 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130778197 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102759721 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.217079396 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109857349 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182743874 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21002604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184572422 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184203062 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142906192 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186531216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182972375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.104259474 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125570168 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127788226 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186471033 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104820193 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.132836679 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171744167 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136110681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186124722 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186532625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128333591 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108789861 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124424357 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12828341 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094922662 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17288296 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133729586 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102685218 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140910541 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136951374 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1323972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099385803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142437383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.13085951 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108464038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136877727 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.127040063 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112589487 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21145676 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.104461904 seconds)
  done (took 15.198468969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107032073 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.127340825 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.143379123 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113487268 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.12607672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.127173681 seconds)
  done (took 1.695673428 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130246083 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128613527 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.137008218 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.104387199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187921914 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.193408973 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224658021 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104721598 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138868446 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135999049 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.19804032 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197978413 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.191013735 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130992577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196433598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.133072498 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.198308341 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131628435 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1083927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130382282 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137066396 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.103454691 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12971629 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.184125901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137524156 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107255484 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13391609 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134393402 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105229117 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131161713 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129755141 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136243118 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102083961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130738594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.195541691 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127256544 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135132754 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116210337 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137769472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137797897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.200742767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12981372 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.112161913 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.140425816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130325354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125062161 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.115952559 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131676422 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.196378651 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142078922 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14161179 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.104547834 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.139016416 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140646922 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125978027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104408708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.141559757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197063024 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130387046 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125993268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.104418582 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.138385173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13006327 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.113909788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.137710128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14073296 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126368682 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105832417 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130608869 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104373492 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141013894 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.129774329 seconds)
  done (took 10.983980758 seconds)
done (took 40.370615286 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.150059277 seconds)
  done (took 2.095546014 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.03610884 seconds)
  done (took 1.98207299 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.158350265 seconds)
  done (took 18.141103551 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.521238987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.686603266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986364663 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174523454 seconds)
  done (took 3.316415204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.999321707 seconds)
  done (took 1.962107156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329139924 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.281817748 seconds)
  done (took 1.564649545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.806448192 seconds)
  done (took 1.767056466 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.480345641 seconds)
  done (took 3.437818083 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.382344025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200896281 seconds)
  done (took 1.554500914 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679504759 seconds)
  done (took 1.642998173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.92604861 seconds)
  done (took 36.891411201 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248081362 seconds)
  done (took 1.224255987 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.328887953 seconds)
  done (took 1.296007355 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573773829 seconds)
  done (took 4.544185065 seconds)
done (took 82.373310025 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104931634 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132493452 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10713383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131423158 seconds)
  done (took 1.440037512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116451728 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133156436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136109946 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106833726 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.141455116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.131794339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.106027892 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139176769 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130433385 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.109853115 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132743668 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.131594338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.109476366 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.13155782 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.102964044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135777516 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.136674796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.108289205 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.13431067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.132579096 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.106312774 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133488559 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.135481797 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101769283 seconds)
  done (took 3.95419318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10628326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124715272 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10151378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124936802 seconds)
  done (took 1.433962464 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115227453 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.150387786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.146597183 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114443862 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14973808 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147247907 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.099671418 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.12716783 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.131848123 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.115240133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130764255 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152892557 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.147214439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.109045715 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.141414518 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.099350868 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.136070714 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.148784882 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.113559555 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142111187 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126677557 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.114457049 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128781474 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.145659162 seconds)
  done (took 4.107964799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215623056 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119863712 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.158219438 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185721867 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.160276383 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.129709547 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1339047 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137460835 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.13037895 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.104861342 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.132948894 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192433832 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133830404 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109226247 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.132406994 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139971607 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112739858 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.139272674 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.129417978 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119635034 seconds)
  done (took 3.791862089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108972632 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123608422 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094058207 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120296598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131978988 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102607028 seconds)
  done (took 1.661671556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103687062 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117405788 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098839224 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117231741 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097597473 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117220751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091289768 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119271522 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092087591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117897512 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.116456712 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092212068 seconds)
  done (took 2.261720312 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31242517 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098842974 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127478338 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123998034 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126322041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097381741 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143191278 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123589673 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.243104467 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124410713 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14263238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.205895933 seconds)
  done (took 2.852357593 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236914628 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133023935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26944964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397714308 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175605813 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184588907 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293882926 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2100264 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.213626279 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154426473 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219114736 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172277233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171154797 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199590437 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155309701 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183103175 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195912615 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223394511 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164741447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255070759 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184900364 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186719944 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200116264 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168705677 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15170749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177311302 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.105701057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140719802 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194542399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189446671 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223899757 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163752618 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155469137 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22962958 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267083524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203551872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.338310475 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147393837 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210490219 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.202590944 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284590465 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156102248 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245726867 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170833109 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118467876 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227363015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17594046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208543159 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146767723 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128061951 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237221693 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196926537 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208572024 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15266457 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.343572589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161826014 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137681098 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221334888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213838378 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213137772 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184990021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.133470933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203227223 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2283242 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204389416 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164675006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193135689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139993815 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198154228 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217788292 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201520213 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213350239 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.199209689 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148017843 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185235522 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188589165 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171062761 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198593484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177932608 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104779666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166071211 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15253279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141270855 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202619149 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107308275 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255899898 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149038613 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.208023912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227252517 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177087516 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178631415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183638744 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212022204 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137390538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133810498 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162193169 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178105606 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175908549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144030984 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177628078 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160431683 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.117619896 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169168709 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.134572625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177386944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.121604406 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215672233 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182666497 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.119141705 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183709282 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16506472 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177123767 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194394613 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233551487 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118939035 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144476338 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214905983 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174160362 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155664752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193824962 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238688186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.188418187 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150686616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19323826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218200179 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157379986 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20918167 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158603771 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146140984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169677989 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177021344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175713111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172782807 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113312338 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171791766 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243982574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.111944302 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149636127 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192804231 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14074713 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140253542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158380383 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125281663 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15491699 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169564139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157185226 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173632285 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17846399 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171662734 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178382026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157242801 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219775463 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146777351 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.178294924 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162997937 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.130924449 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206741998 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206241222 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142429754 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207568962 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192648753 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242626692 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185796321 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142025231 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20301616 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142082595 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.106326315 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214887953 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182882771 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183104874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209211521 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237815141 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19294947 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172406217 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165965018 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189100938 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19477178 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176575961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.163960418 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181884515 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189094869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13415226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111435781 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.143307985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155291976 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144317976 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117281405 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234313372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184241082 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206518756 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181974332 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153789832 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203059381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.140191903 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182878922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.225671551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126356977 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.236935935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202482588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187526439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157973463 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196090422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133105329 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109572518 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15138643 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190076467 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145583384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119702288 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159293337 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230168279 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199796696 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165894555 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225373011 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216931742 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214903824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.106924341 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180873999 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189444807 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174041027 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.202842898 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144707224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180270894 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197537483 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160846595 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215980335 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180062654 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2194355 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230190047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.174135042 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143718188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167524964 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188336973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155652923 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176969989 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162586269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12095817 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17382877 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152553934 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142911543 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203738752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158830134 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232945626 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171650236 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197961861 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137772728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159179471 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17639149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134480716 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131787883 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193573973 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238476407 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13391345 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17920982 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22567169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115304982 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.333293795 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238135253 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209332624 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152024496 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158964503 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179114627 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176847134 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186044363 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231320397 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157283025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204651383 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175971047 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133389614 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14863603 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164072126 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167589122 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17234969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150790843 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175013814 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.128557601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237866757 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160449062 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177984733 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185993455 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162208816 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145594668 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155588152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249620114 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176919933 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200590456 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172875923 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185111312 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210715092 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13576607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112139096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.14276232 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230932388 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11786427 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176455906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.224563969 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219070846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177616477 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188784356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152033719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138355203 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179683024 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164067114 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217622438 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156732294 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154443232 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213798558 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167821447 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143917414 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183336025 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302001591 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160504134 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193650057 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132474266 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292124786 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112900488 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144733851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177813461 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189394307 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.149680745 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198339486 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186677154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160735073 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178057484 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153472156 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207437865 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227767962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220205757 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198921483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159407246 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178248283 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186430705 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196558185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160120136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.161947452 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179105414 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204713341 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211543061 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150524005 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184753364 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183861916 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179892161 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197834628 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148630747 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209915007 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144721129 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18705304 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155582802 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13910223 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176942485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199053147 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147777217 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195516354 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176141335 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144556915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113712233 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167880259 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176090272 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159536438 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.142507557 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202469849 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139448338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181234932 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199810012 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1434578 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17083059 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13731313 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144156512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160146865 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160820708 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148326767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157486704 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201175723 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147738777 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196529529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223353344 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184668795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180804609 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160205838 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650818024 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.144601441 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202939639 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163588631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209049755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163265266 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189120125 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181605202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164565744 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190124541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1690237 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240591189 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186831624 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.209717307 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116507351 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159875098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160317879 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143509995 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168946347 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184177467 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127622524 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154987129 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178438667 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162646423 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161130045 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152174454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206158012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163974095 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208253024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231062945 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152695779 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18765672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199548981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143281316 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185989148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192582832 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158111297 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17082073 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119250905 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152567614 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199781679 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135315955 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18044602 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17873147 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182421366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183748674 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151367928 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179135267 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157384478 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178481386 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11296347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174865134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175980512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147881674 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.144240462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171597251 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179092712 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.177131636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115148796 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.186740536 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203145074 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.135182934 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118819346 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329198686 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177710643 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216835871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172959584 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148702255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129290071 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174229232 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173237092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177331231 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139645144 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145366016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149627882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196225967 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142455072 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173147792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197559931 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213234243 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211641708 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132472724 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285406707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153340169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171942011 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146170739 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146934651 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127674683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150455078 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164321082 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20929087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22680659 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.141198711 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160386144 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143270393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135558503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118401207 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178876856 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171702819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17628002 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163375166 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131917638 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131567839 seconds)
  done (took 86.866627956 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193547573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155111487 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157812707 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.208177835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174634023 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.359094155 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215530308 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238063521 seconds)
  done (took 2.777567693 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.139998788 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.120988953 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153214623 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134277595 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136184862 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451819282 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145567293 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106515114 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.199544248 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.171873866 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105071867 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.694542758 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130694476 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133217504 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123004172 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132182316 seconds)
  done (took 4.134584466 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470619152 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556680725 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.02328387 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.26644899 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247488479 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195085527 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.754599273 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20603459 seconds)
  done (took 12.787625247 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14377553 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152879437 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.357824086 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223057368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172252536 seconds)
  done (took 2.122641059 seconds)
done (took 131.156892594 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.11552754 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155247966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109669481 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156386092 seconds)
  done (took 1.600466868 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.164266536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.120748385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094878212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119675081 seconds)
  done (took 1.576663224 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.55859197 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090894192 seconds)
  done (took 1.753896131 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145213966 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.161542459 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163059389 seconds)
  done (took 1.55311449 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.123268921 seconds)
  done (took 1.192690279 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111366224 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1380238 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192596612 seconds)
  done (took 1.517503951 seconds)
done (took 10.269869472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138342461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.531215858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.426156208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117102293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.734205283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415199798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.057718402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166788086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207306128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096764736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148207685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705119176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014215808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469943032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025299279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441198601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707204022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097815125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134403832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127328174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007771838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124934604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125957383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09907751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707304298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404362844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126198717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.482656499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097467038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135305472 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384134374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125349927 seconds)
  done (took 17.647862697 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151758936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195018768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139223443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099450363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13644799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126795408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109750545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142172053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207784831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127639352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148340806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09757441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133043029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099003341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152205283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124886432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099758901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127696952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107116781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129860694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147890287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097715731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129960135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098525839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127548902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140250236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099529481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142221947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124977631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108669491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129403565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098963545 seconds)
  done (took 5.184646796 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156987029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202813267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14020387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161703046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186184971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100183882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220647116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169972756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.235134236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099665954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149330508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097126478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169307525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12715575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122009731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12713606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127663033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098765064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134723442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100180897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148292198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126268565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101227557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126814443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126163908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115070329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126645456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141023706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099102528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136067388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102304193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127239653 seconds)
  done (took 5.49136278 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.118595421 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.14122594 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121865212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151536296 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.133539183 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111289612 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.141903151 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133817105 seconds)
  done (took 2.140135237 seconds)
done (took 31.537035461 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134218988 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147229138 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117746005 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14016862 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.204324762 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12847485 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.11636725 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.130425951 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112582714 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149362078 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096286509 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.132319068 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1457759 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.109245319 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.18617477 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.143164887 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.194318134 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187803616 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103247531 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141196625 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.134199492 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.194728873 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.109800086 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.133044984 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196969188 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.106606929 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183839006 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.138930559 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.137072778 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103755745 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185009436 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.140540699 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10471068 seconds)
  done (took 5.765737568 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209235885 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.215362628 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10389432 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134232966 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.208138159 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103015726 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.233262324 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.105046972 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132489901 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104059088 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.132871665 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205018659 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.21316906 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.226890732 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.237404159 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211880207 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200655261 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.206392256 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199233832 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216598505 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204023666 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133389108 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214130136 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.218802749 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.133795065 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.103571063 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.231985525 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.238666022 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.240633631 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200219008 seconds)
  done (took 6.614243383 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.120658387 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14487094 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124333262 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216895449 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.165813553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138290668 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.114678828 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151108922 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.151205961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096840204 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137705433 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164600074 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121490662 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13863511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103002255 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147264096 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149225779 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.1001666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136448144 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147054444 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119696349 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.148705035 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115127488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.137608617 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.12611922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108671673 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132993565 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.117349881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.140579672 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.138229297 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106721786 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133315424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.133829915 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129156311 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134852053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.138899853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.128491885 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138194519 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.108890974 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158460071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140207621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103683475 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150320149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.191111399 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100415106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141107579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.134643433 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.111134348 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.128450104 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121467346 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.161340326 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.127528784 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121304342 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.130489518 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127532153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129061032 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130422417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104245179 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.142024391 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132973663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128171501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.13489412 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134661134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101040793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133949368 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099385444 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128434126 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103722331 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.152077769 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135346741 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.205942973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099975734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140777352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.137386159 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105823745 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142285101 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097847583 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136990125 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110668819 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135052517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.146088729 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102481329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134213691 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119720868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151088157 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139436555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.139445913 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.112056617 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.13390978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101910577 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157294367 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128413464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105453553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.160879342 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128241884 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102655547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.14159294 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.110063757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128364138 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16452217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106628535 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129217991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.161067576 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100586928 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134163455 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109331658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144352695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126431629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110935644 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.14125012 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099863996 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133529839 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10504953 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12836175 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146929759 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124404194 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135398437 seconds)
  done (took 16.408907732 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31635694 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318430209 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.241303748 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.382944073 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158328747 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.203434692 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.280037513 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.265182519 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.106391382 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17714419 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.224738472 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.244433663 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130552416 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.134164517 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.317780036 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.382701021 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16434355 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178851757 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175826992 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157934749 seconds)
  done (took 5.667983647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130151197 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.176014217 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163661444 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.165988412 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.108164199 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142580394 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128700456 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.156885422 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.109534578 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13824099 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098918846 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142516633 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.137903719 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.112012786 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.150472971 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.181099148 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106774891 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139781483 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148747451 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108190147 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.141505165 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159996793 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.13835623 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.131440519 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.14308355 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142841605 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.100881978 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13881782 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103664093 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.135013887 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13625759 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.125282302 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136442156 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132551511 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.112281066 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.141872443 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.102775209 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.132780547 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102055985 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133685456 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.145171457 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.113263679 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1352366 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097586348 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.144673268 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102216127 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.143556299 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13974854 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11494679 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.144119471 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.111303757 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.143220513 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13610327 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.117488058 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131926878 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146467349 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112014079 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143677878 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137315576 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100203666 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128591143 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105221725 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.134905129 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.142607238 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.112064133 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15550402 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.14259281 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101147001 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.136397694 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104635523 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13368593 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151102778 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161208154 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106103434 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.13393527 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121559455 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.134932907 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092319269 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.138899842 seconds)
  done (took 11.456914358 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139332117 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137215042 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122986861 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.163228161 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152708649 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107513862 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135644661 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.146879117 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.114690737 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143469159 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113599604 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144313293 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159151617 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137904248 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106626667 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146832942 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111698911 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.171988228 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150980026 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161495659 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12140711 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136162751 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115137412 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145041213 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166219449 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114013863 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161900398 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.142073138 seconds)
  done (took 4.991527691 seconds)
done (took 51.986949893 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.225176194 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414460482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.199999217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.210768281 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.198877163 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.201236422 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215965096 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.395798603 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.89079416 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.174203946 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.1970863 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.198608428 seconds)
done (took 27.63465937 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.187194954 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.790366371 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492654255 seconds)
  done (took 4.396588877 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.182480877 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.186423043 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433009954 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.201040124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.195811832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.203734477 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.199661379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199494584 seconds)
  done (took 15.726315144 seconds)
done (took 25.60031761 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.238294697 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.396236906 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.447558749 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.198513084 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.187936695 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181448394 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.175091297 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.220686886 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.19957075 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.178126902 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.181162115 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.467087825 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.181868093 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.582912389 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.179045245 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.199173155 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197515378 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.42605747 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.187239024 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.225926629 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.182662393 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.176045865 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.220133663 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.215160461 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196992763 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.190130337 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.186425538 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.171286125 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.384037599 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.193875012 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.231660872 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.182711702 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.196444714 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.18658754 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.28636049 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.202952019 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.444957014 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.186728193 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.178511759 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.182741397 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.419161995 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594405927 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.193195657 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.182837035 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.189245725 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263661425 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.181961736 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.92328223 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189939922 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180330603 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.240035905 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.561679306 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.197197208 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.185629963 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.189572453 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.429101736 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.208009828 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.210800409 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.227511937 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.193605889 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.19757614 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192511272 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.249202237 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182541654 seconds)
  done (took 142.538764594 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.185225543 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.192824949 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.192130638 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.250024981 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.188722919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.19080768 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.188533562 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191139001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.191546024 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.219205838 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.193259861 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.18348463 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.190551741 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171269326 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.190895302 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.202556537 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.184589311 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.184616132 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210151416 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.186138275 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.190377244 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.1918837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.185612118 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.227727637 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.285441072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.230283497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.225067486 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.197801709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.187352169 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.228153624 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.252968748 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.781882271 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054607536 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.198741592 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.212455157 seconds)
  done (took 79.851010358 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190606002 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190849625 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19097879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223138717 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19329111 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.747753436 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.751319492 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.9406361 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.629520335 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.509244032 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475904675 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192194868 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282410278 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199997516 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192764847 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190059618 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204299612 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228417037 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187937979 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185413144 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751591725 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.202248121 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.407686948 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373149676 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.20416846 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222335252 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189578371 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591240534 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183113541 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219065565 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519897072 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.234694487 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184292431 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56180047 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.508017053 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306436119 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189030745 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225154335 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189035737 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472159541 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18396772 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19086676 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188370246 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854464577 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192173309 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.750519916 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190835091 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151771901 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191543437 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188991592 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.331479596 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.899015807 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208266247 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191369897 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194442241 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190939495 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193372109 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221039355 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.546508659 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301738205 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207550609 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19736422 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221671823 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194202739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.402298667 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191042842 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.335308448 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.24926282 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413362104 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749731058 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195739784 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192722167 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288143715 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30806829 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188599305 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189773166 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191836469 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194806622 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302274523 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187826672 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.600069209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363647537 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205118309 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.565559983 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292041983 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188097625 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590082995 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195055043 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19055923 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971517259 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191422911 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287728389 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.188330444 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190606024 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193617303 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.598461465 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.749818458 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.440800226 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197023047 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.897433121 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195951604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608417288 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.737314402 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907619184 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192821123 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302516314 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.363950871 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205628564 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189778679 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.512510957 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196940241 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25028587 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197608481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591613982 seconds)
  done (took 366.070049808 seconds)
done (took 589.566525298 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926312487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.877258139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.012760958 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.904780981 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.874241097 seconds)
  done (took 10.708296648 seconds)
done (took 11.81967778 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38352749 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38639099 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258054393 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385620795 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22536037 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405692032 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364501355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216731449 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.292720773 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276948464 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296845928 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251502235 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231610724 seconds)
  done (took 18.091775972 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468288585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.199509962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274133065 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440172595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236241689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463081039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491242545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.20158054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346108309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212657424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213422237 seconds)
  done (took 17.666670632 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473174549 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198901071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278233956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452812777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23907306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504276161 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499876337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.199699882 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346877016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209759277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215865896 seconds)
  done (took 17.73391218 seconds)
done (took 54.608734594 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238409059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365853981 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229215548 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214526238 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207718466 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210404305 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213007039 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20711689 seconds)
  done (took 11.002304678 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213165733 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208058917 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208025513 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207902999 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205527326 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211362654 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210401552 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207403355 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208349389 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209455505 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208461974 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207777881 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209676156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.209322828 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207123585 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206898679 seconds)
  done (took 20.457801473 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21276746 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20699096 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209520377 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211646528 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208549427 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209450581 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210486745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211379374 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209359948 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209226982 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20936759 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210588254 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208236995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207555616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209977059 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210196099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209891048 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212053798 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213446316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209701598 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209650289 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209549761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213823904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210035883 seconds)
  done (took 30.162435009 seconds)
done (took 62.736064874 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.198496681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.227224835 seconds)
  done (took 5.544967307 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271985405 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.268301454 seconds)
  done (took 3.665555073 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213376776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210194139 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210860276 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210073595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21224964 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210055967 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210993847 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210566231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213020096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211890047 seconds)
  done (took 13.234211603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213711876 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21201066 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210040122 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212190008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208773051 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213032444 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213932003 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211354675 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21225662 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212492792 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.213165924 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20722441 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213223718 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210306376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21322292 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210680241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214694971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.2111566 seconds)
  done (took 22.935115675 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22425008 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.235781778 seconds)
  done (took 3.582398854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.354508759 seconds)
    (2/7) benchmarking "second"...
    done (took 1.254043499 seconds)
    (3/7) benchmarking "month"...
    done (took 1.330190793 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31576094 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256598608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.23219283 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.250943653 seconds)
  done (took 10.115020515 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215234648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404902036 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505020541 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.778462393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210567313 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.258123326 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.011435302 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.25899417 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264565947 seconds)
  done (took 14.029010398 seconds)
done (took 74.223242289 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.201891366 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.278127309 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.219171747 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224488624 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.507690441 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.214622259 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.204619948 seconds)
done (took 15.972494564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.200844716 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.199511457 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.206185465 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.223753431 seconds)
  done (took 9.952840998 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209536241 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562277804 seconds)
  done (took 4.895084712 seconds)
done (took 15.968550992 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2184304 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212801221 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214239739 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.213968994 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218040277 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.214739287 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213187717 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214688264 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215427263 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213623419 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213479286 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216305469 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.214001154 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220820594 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218082984 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217137619 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214357573 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216594212 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215515757 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213056522 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216887199 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215106582 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218017762 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213212825 seconds)
  done (took 30.295347201 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219444528 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215455225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218899122 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21162578 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.2169232 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212872289 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21665754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218004049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213945672 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21544797 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214314809 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217964368 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212962876 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215614931 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216919336 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217118203 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220786575 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217532599 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219477402 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215491102 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218460318 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216963164 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219183284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217184124 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218791089 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217933529 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220402748 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217188881 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217462884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214983567 seconds)
  done (took 37.632288227 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22454797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225930064 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218000972 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216716021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218410433 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216282546 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217742648 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21719305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219216811 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22057378 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219466583 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21698248 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217907125 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218545767 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217069177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219794362 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21459259 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221346393 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218813385 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.2196745 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219393062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219630995 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220141254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22126605 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219781438 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218540859 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22250725 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217530162 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217728629 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219318145 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219871424 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221694103 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221346349 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219255532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22094931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214994013 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.222979265 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226929791 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219651467 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.220555294 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218847445 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221671815 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221344185 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22299256 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221909171 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220160523 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22130868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219180576 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221585292 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218838711 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221566851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22249776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216701702 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219824723 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220909248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218159889 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222315508 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215358849 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.219311971 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223241677 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221813062 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220624039 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216422543 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218423611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221515625 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219670616 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220780877 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223696575 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222990355 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219417094 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221491805 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223301775 seconds)
  done (took 88.970085325 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224395536 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219650527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223056306 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222893192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220858387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221628281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222300007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223271071 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222042322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.221471694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223430401 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226124592 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218904715 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224634172 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223882604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221542349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224215886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22176884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223918516 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223519496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224191979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223675858 seconds)
  done (took 28.031402511 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222258524 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221952474 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221058664 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223595643 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222941043 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221480271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222479109 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225211555 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2189476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223004171 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225348357 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224502583 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224712542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224263778 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221371532 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225498937 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22002077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223270067 seconds)
  done (took 23.144508399 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22436745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223267637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225422134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224289762 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22431443 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224719181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22227288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224392268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224702239 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221824444 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225852081 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223720318 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.227733792 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22080919 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225667386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224927352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228221494 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224627108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22502775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227645687 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227535697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224985077 seconds)
  done (took 28.076097784 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222829212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225989772 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225632225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225573561 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221698314 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225865444 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223695351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224919025 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223370033 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225338364 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224880096 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225035756 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225731779 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223566745 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223700245 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223209695 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224713696 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223500166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224291282 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226223265 seconds)
  done (took 25.622595865 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226956875 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226511885 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224812383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223136291 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227389953 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226967192 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223216483 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223153689 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22602821 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22660544 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22529033 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225316498 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225142927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227091418 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229130391 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226747078 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22622322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228903176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224772576 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228520327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230388896 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231239187 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229829684 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228110743 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226915897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222603686 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232150498 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231227059 seconds)
  done (took 35.488946972 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231519035 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228020631 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230816646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229029358 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229657017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228138227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227892695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226932357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226538579 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228483716 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229880014 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228357814 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227016221 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223456118 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232671486 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226333164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227689258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22501852 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226862228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227054038 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.229428704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22844363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228995002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229526738 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23245431 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230238498 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227410347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225083541 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229872428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22335939 seconds)
  done (took 37.98357464 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.285053215 seconds)
    (2/2) benchmarking "in"...
    done (took 1.282411599 seconds)
  done (took 3.702164482 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231077389 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228703805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228915696 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229741764 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23214311 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229906239 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229896917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232735999 seconds)
  done (took 10.979132675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226290514 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233080855 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225713541 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235199486 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230102218 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225815089 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234737964 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248057307 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228601109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226746581 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.227541616 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231182016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230603797 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23330694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226526904 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232077316 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232711209 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231527507 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230082206 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23325286 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232444674 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228200809 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233693638 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233264074 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225437242 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238728927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234664979 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234437933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226018685 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234680103 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229183575 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23249329 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231997829 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230938773 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231268269 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23247334 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239189233 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247300392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236587783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237007569 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235447121 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231250363 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231228628 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23577298 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233792509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23242644 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232376667 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232877436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226538243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231278786 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240137247 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228133455 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236013579 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229512188 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231343839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238947894 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255262542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232177546 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237672166 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236996766 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.243049518 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243470971 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234134903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23388374 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239230193 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248601619 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240861565 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253760515 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234348187 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.234361588 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23782624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245797866 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.242391011 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237595745 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235501533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23667767 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23118719 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236964643 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239833364 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256426837 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238617276 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236253961 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236635762 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245369301 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230215309 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230161112 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234768718 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231845819 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230399665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245679381 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256309306 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.236368638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227625501 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232643805 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234328474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235260483 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233343964 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232602771 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238009146 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235724076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238319271 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236306998 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239969116 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235597699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235221694 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239727646 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242090412 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232184757 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.242993262 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243454648 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237455335 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234686178 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238280827 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241939752 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23643057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24059125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240043852 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.235927074 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.240239203 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237437451 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244055279 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.254692632 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240427971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238999957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239067716 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249196566 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23991863 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239304547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241045287 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240880059 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238266838 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236210296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.239360291 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233129723 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24175308 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237128245 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239690945 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239363215 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237084376 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23727423 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240121903 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234055268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238270565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238429696 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.236776904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234998562 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246670038 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.23952194 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23529163 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232040744 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242654648 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241308513 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238937121 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24214425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235762238 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243322253 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237706848 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242898131 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238573126 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241928526 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241613227 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236809361 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239509749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243405932 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2421561 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240901404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243099915 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.240005567 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239980467 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239019832 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243105264 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234330121 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237760335 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.249283821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243226374 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241963254 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239984202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242487794 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241535076 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24069267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240254586 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248375182 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245540658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246743336 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243593296 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241397245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24238415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239409423 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249101206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240590209 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250952269 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252193433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251587546 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242156086 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.246440293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239371044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246982633 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244526407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246396481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.244262483 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242870258 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241027267 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244772732 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240814581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246185012 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236917474 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243756602 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242077769 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243203226 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244128233 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237800238 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244113415 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24766421 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241921344 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243953727 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24038508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248712526 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239598432 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241644091 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247134452 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244788383 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247475268 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250532178 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242514509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246908685 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244672984 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239333037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246528859 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244324783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243105952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249949817 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263012412 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242732054 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251696811 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264659975 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240128034 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247897005 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249924751 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248217145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243753104 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251077167 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24518119 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245623493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246255486 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239591537 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250878889 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249586999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.246288975 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242815272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247860537 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242340927 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247811983 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244376894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246147927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243981932 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242104354 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247783016 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245286305 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242581376 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243062051 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244623239 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244420063 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244755961 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253180725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24698856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243854921 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24642874 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243688575 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25250059 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245875972 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246392547 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240575664 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255521378 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260069451 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249917581 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.248888265 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246187452 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25049119 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243822416 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243261491 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246109785 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246259362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243020844 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243055889 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249309859 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243883066 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250618742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2453412 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247454313 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251645561 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248473524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245010878 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249578791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247962752 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248291361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242528123 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248016427 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.247806301 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247324781 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247805019 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245398328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254471379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265171393 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242874991 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243734406 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248110307 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243638066 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248217568 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251098428 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246261908 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.255236487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245629923 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254664862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247894907 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254345114 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254627932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247775609 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259086793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247857486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.243028962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245979846 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251911908 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254512578 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.271538361 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248421641 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252801889 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249821164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248958866 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250280624 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24974512 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253347705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253475261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255407947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268786193 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249360802 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25129519 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251347789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.252548409 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247497088 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248173831 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252061771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25415328 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250118596 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247474575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249197289 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24903223 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.252063553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253700066 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255140958 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252708691 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255694779 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271107998 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253629022 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.254798091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258223597 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25663311 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254215625 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272828026 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245690315 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.255800937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252658364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250713623 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25172554 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251499361 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253532098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249802697 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254208938 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251824862 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252354944 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251829158 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253173454 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247561534 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258382857 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272358558 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248992944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25689481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255070696 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251160209 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25699754 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253264796 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249663812 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250801111 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257616382 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26265812 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252182295 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254539115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25120612 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255887491 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254843618 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253365075 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256050357 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253937404 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253567334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254108433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253398752 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260152911 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254161081 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253264941 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253340632 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26091732 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258526414 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250670475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256040024 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254844063 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.24931869 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.254629322 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253923465 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251488395 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255394765 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252790563 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257166332 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256167731 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257672609 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.257029671 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261244395 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24844625 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252109975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256930014 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25559413 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256040153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25632756 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.258490646 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249483946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253433731 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256947932 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25366822 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258014014 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257778525 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260087487 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255038945 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25929631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.258456845 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258120793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250863139 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253611603 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26157162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261146524 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.262180285 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259657641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.262002734 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254598471 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25850368 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260341758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254289063 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256526741 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257624425 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255487934 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253046272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258767403 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26109394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262718046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258470546 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255441505 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264556679 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277528447 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261037539 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253186769 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257519138 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251549524 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258311776 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256018454 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250931418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263387319 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280515109 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260869478 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258113282 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257409025 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257481681 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264300869 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258940173 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255819154 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258944823 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257647821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26351159 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25738613 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2565334 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253930213 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254840305 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259150764 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260063665 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262946347 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258475492 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258586172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25948965 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261142754 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259550049 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26261074 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258902314 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257316029 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261585868 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.25701233 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264305876 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259219037 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257350973 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266884488 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26280204 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260755323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268292708 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.270879029 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262747327 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.25830587 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262901733 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26300176 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265833795 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261841105 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257432153 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262097745 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.264626315 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266243935 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263664183 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258860279 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273559071 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287494189 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259889505 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261330532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264958667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.265725971 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262968489 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262760082 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262375979 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263962106 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268875014 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261373267 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267652941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281702857 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260357854 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266763318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262295799 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267304123 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264077816 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268887146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263219901 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262815275 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274115058 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269678694 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269832364 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286609673 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283420783 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266150071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264846776 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2603357 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265961681 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265245639 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266514278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266316027 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266663399 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263951421 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.257668026 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267499223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266825777 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264437041 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263482087 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258315391 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25903097 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263225327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265007689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268838761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267001488 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267533702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.266947468 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262034142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274069415 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278243193 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269886747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266574193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.267079186 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265113712 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.266656169 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270295792 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273234605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266807382 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.265103365 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266909362 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271681964 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269970831 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261789818 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265300599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261559387 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268980361 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.277026675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280730021 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268570422 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267297031 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266916189 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268775137 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265446497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268136447 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268354955 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.261976098 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266869536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269622984 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268923031 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267656322 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262043983 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270581688 seconds)
  done (took 746.101363304 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268769823 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26923738 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267347381 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270516388 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268669808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268298902 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270563008 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269102271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264589461 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268417848 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267980928 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2689675 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268210747 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266507622 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266718778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26931079 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268935246 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269798805 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271110638 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268173293 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267062473 seconds)
  done (took 27.809887653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.268423819 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269591382 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268721812 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269502756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270258609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270472748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268665405 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269402516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269937959 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27203335 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269116838 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272640711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271621883 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272626158 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270508002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271281735 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272287044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271633362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271748336 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268572999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27032257 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270958846 seconds)
  done (took 29.125208643 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2688033 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.271330614 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267642636 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.272684988 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271095205 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.271712107 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270008766 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.273241562 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271683178 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.267532535 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.267789301 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.26685327 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275080095 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.278783828 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.269628763 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.273594409 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271150533 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273154597 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270595627 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.273612112 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274401641 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.277360622 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270136246 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.265629968 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27455647 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.272437571 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.27059752 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.272658745 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.270906896 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275547385 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.271187693 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26770578 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273272863 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.269580165 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.270087274 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275937617 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.2728334 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.274567062 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.271967675 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279635037 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.290130906 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274914443 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278455145 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.281512621 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273379699 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272816673 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281483547 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.275196772 seconds)
  done (took 62.280976325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.872820601 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.891193842 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.891425593 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.890130655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.904445673 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.896914041 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.897845489 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.900124915 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.886737166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.887861516 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.894849638 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.893544826 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.886949965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.892367821 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.892954112 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899183352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.893132968 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.903507178 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.897731839 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.890944724 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.893666395 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.897608229 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.897140597 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.901831799 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.900486423 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.896617807 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899605913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.903480856 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.902097571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.917669466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.896182558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.909071572 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.908408977 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.895364934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897166988 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.900767599 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.901606875 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.897457668 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.899724741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.904883761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.903149609 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.902214211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.923938284 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.899829596 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.913986411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.891467389 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.900416929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.901117465 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.898868157 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.907457925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.908400718 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.905345628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.908893324 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.908723873 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.917964491 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.902145041 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.918935803 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.903587837 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.898967919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.905265102 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.904251954 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907155923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.904668078 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.910815937 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.915970087 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.910957335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.909783902 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.917758744 seconds)
  done (took 130.468564792 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2830859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279049012 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279019535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279988512 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279552868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280409095 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28170444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282020692 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280614959 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279061071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279180299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279588188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27964129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279504308 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280129241 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280409837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278247313 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280659571 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279922172 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279209746 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279251883 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280175386 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281489422 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280239635 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282738632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280479924 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280794349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280231251 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28071058 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279179543 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280422133 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282649085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281718008 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280779152 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28442365 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281514475 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281873191 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280036828 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282228564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281830346 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281398431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2816835 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280865151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282497266 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280260889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282035341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282534824 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282699063 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286056279 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287045188 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283203953 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281350745 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281649653 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283762279 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284156958 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284063269 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283684366 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284873998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282828317 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282489589 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283943649 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283015189 seconds)
  done (took 80.635610865 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285290625 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283458242 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284147189 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280980946 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283361456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283882518 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283649254 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282760248 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282016264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282872781 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283566514 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284671798 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284139715 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285179782 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284574013 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286599976 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28598034 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283908676 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28349599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283779764 seconds)
  done (took 26.863174594 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.283722732 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284879478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284169945 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285662661 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284608711 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282766648 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285523356 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285562077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28456432 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28571663 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286296841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286855367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284572415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287319051 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285393144 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284193248 seconds)
  done (took 21.748227727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288969856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287145887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287855101 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287359579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287368928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287991633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287236449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287720542 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285573277 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287910731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.286913198 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285195097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287399235 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28716191 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28723073 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287340104 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289928443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28478423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287981132 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.287151354 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.287612312 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288480279 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287397048 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285768915 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288277545 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.288558439 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288988003 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28756237 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.287121569 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28975776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.287479175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287709377 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287018673 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287998916 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287898723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288897782 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286684823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.28977238 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289231574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287715513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288903805 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288095133 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287346891 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289543298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28983359 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.288558129 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.288516166 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286867427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285889928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289096603 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288602491 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.290371224 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292649078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28902248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29071558 seconds)
  done (took 72.028301731 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290609713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289109141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.287031574 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288328895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288206228 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290431612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2886891 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291973717 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287913607 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287646062 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291649943 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289673729 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291407016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289042647 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28900825 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288796639 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290249566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288993569 seconds)
  done (took 24.398406029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290851242 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291867049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289171454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288077575 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291813174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289851006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290018158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289002808 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289027579 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29122519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292410992 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291984898 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291606489 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290457586 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288778892 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290070728 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289634158 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291104549 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28709839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291050306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292294487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290597671 seconds)
  done (took 29.577145469 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285081089 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.285310969 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.28793236 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.300891438 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.302095035 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.285992243 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.289012793 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.2855976 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.307292573 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.345073553 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.340152212 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303190104 seconds)
  done (took 16.809496598 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293321556 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29438202 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294215395 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291617561 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292800945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291527477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291979784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292782327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290586699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293950117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292837476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292054015 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295888709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294752338 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292963361 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293641853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293368228 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291483741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292527779 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294799361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292110685 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292057227 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294717581 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292396453 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294463694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295436559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294039325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29561086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291263366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294462306 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292569956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294508697 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295879959 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29257234 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294266361 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292753565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293040951 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295109761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295732492 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292883892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295040277 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297238821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295796731 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294475595 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295058519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293361976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295867943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295652287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293586493 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297243441 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298212405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295734936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297310362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29426744 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296431971 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296368279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29597083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298725936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298758288 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296590176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297136872 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297030338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295653669 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296972648 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298612007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297045009 seconds)
  done (took 86.636290529 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299104105 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29705812 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298528519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299074647 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297539673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297540809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297636507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297431884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298326464 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297839456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295053475 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298456456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300730332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298707681 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294041918 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302123329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297434192 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29723819 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295593089 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298675288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298762575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297656289 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296103907 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298790631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300886213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298795569 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30012808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29806322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301071659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298381409 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300378315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299161891 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30026818 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2998534 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298901359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299666661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298866329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30069962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297853137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300131729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30089737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299794525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301060357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300136765 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301178966 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300616226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300808755 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299753685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299844145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299838503 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297423171 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302144416 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300994147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293513251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300389265 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303400333 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300765676 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300839548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298225351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30042084 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302312039 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30162979 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301677106 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301513896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299982947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301756652 seconds)
  done (took 86.954822189 seconds)
done (took 1792.487474755 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463630649 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416182627 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29693591 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.308283677 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291438597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29368846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.310807132 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291188016 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.2963214 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295809281 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294518109 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487737444 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.293492189 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291287763 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295298022 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395348139 seconds)
  done (took 26.521108757 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328036382 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302659867 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.416052335 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319085184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324293375 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495173579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36240849 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303905287 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.479704973 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.324037216 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.301767137 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318592294 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295860679 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.305286578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313581361 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491467503 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561046463 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.29436505 seconds)
  done (took 28.736654697 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.779206767 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326008346 seconds)
  done (took 5.306803953 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321649204 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299102069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.300414359 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.297887951 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.294664529 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.303776984 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299528853 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.297401082 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.307832381 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433862905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.3042267 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.311764545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318928282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301062829 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304512612 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345910525 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458994877 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307574752 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301971217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307060809 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302390447 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.3980336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346080217 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30873236 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.431825153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.294837955 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307050729 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.307721498 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437050099 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308458626 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.299957391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305497298 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302857096 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295317786 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.772001594 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312867669 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.30760584 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327971813 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304345482 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451952267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305096312 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309191815 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.29775006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.761489356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433637321 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425726822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.314401802 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.315669459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305285958 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375337161 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.3022816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305955447 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365436803 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.124187297 seconds)
  done (took 83.692300278 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328595358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.296069332 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47413842 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318150177 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294408258 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293459817 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297371425 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.603376346 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.363941579 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295871674 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.637956927 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906601975 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318492253 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.324959616 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.296237208 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.324280181 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299175761 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.298899405 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316588513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.304028585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871089056 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30212331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.311120148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.71657542 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.333273983 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833395351 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295645222 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302400522 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318741612 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.297443716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850088969 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315222248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.318085495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.29771551 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580911145 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691180996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653273815 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.297699125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.299940837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300689925 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.30125064 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812648355 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672221287 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.295848888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.304904539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817896584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.296111437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.298520075 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.301600783 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561509445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.301337991 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313911722 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317258599 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.303106504 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.296887186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.33206481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.336416464 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829795764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297823089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30601741 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327055301 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299352235 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30310802 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304136597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324408309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678464291 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.591972975 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.304238052 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677565184 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843423856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31214924 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929371708 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312827516 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305152047 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.652590008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.306106992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309150368 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823205044 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.340799616 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298212745 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658473417 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.302529563 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635161947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.315196901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314049023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890069039 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.316761551 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.318071726 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.300330422 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.306714467 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307287147 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32419485 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593873741 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.320277441 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.300904092 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.301933018 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.308338648 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297775914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300139357 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31005266 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910073727 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.320985648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.302207174 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302377902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323246247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.306476708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.301316772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308215468 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5814412 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302913263 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.30153895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303340923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.299554462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.3078729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.721616794 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.304843562 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622796849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.301611784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300181908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324730033 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301602837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.34659539 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299318945 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316709447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.301760396 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.561188455 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32394085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323391945 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306241636 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307862061 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324313975 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305438882 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323278091 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.307643998 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142875905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311013766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.307087618 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.304941653 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310101425 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303637017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334086634 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304303855 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628045875 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587005033 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.595556123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301231929 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.329179611 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.149169509 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336746022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484864157 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329047562 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303934514 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555156802 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.577786575 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307967238 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.303655803 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.306225018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577088212 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325856519 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621793939 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888252702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318560305 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307720333 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.183278001 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.302070695 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.320706767 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.309800621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6486953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.326542776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308706219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.307198871 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.30915091 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.326488868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308207822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.311440804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.307592199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.307067787 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.567600229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497888629 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325724587 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3124485 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832429167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39616638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310975342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319679856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310399749 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.303755599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.32652346 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.314359785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338858412 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.311628015 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.311989465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.850140648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307596493 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.313394746 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501428785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062958851 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.30755054 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309662033 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.323817192 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.325237967 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856104025 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.311644135 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633709655 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.311370098 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345794666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309812747 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.389030123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860237751 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309776527 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311261582 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052848037 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.324343398 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.825199195 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.309077398 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.312583602 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971010304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.322595193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.313276422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.306380642 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337402675 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62776773 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313170876 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.334391439 seconds)
  done (took 494.761937779 seconds)
done (took 640.218085406 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.311891058 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.310826542 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.307091544 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313340115 seconds)
  done (took 10.463224319 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.326667508 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.317158984 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319140186 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316762183 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319646168 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313192464 seconds)
  done (took 9.131962445 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.314661575 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309173147 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.317501483 seconds)
  done (took 8.158946543 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529967733 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334554033 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.65230804 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.33310377 seconds)
  done (took 9.072239581 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324706792 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318434442 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322275915 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319813959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.322503672 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.404737962 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324779803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322922033 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325452331 seconds)
  done (took 13.204384343 seconds)
done (took 51.244617681 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.464788192 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.331529433 seconds)
    (3/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.006267671 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.421775138 seconds)
    (5/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.007272212 seconds)
    (6/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.055583577 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.30605505 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.398477254 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.528950676 seconds)
    (10/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.462786014 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363516495 seconds)
    (12/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.342876551 seconds)
    (13/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.370606152 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.501361485 seconds)
    (15/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.445624623 seconds)
    (16/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.354327158 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.497588745 seconds)
    (18/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.449815582 seconds)
    (19/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.486198935 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.55156387 seconds)
    (21/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.344417058 seconds)
    (22/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.370476126 seconds)
    (23/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.356055369 seconds)
    (24/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.392580381 seconds)
    (25/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.499072976 seconds)
    (26/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.097245809 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.374736132 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.397695394 seconds)
    (29/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.492400708 seconds)
    (30/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353732311 seconds)
    (31/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.472004045 seconds)
    (32/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.590158488 seconds)
    (33/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.373279537 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332847748 seconds)
    (35/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.581765056 seconds)
    (36/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312847978 seconds)
    (37/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.360748233 seconds)
    (38/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.485766048 seconds)
    (39/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325163688 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.531991278 seconds)
    (41/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.304015432 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.357098612 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.383636547 seconds)
    (44/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.466488935 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.423632912 seconds)
    (46/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.35542142 seconds)
    (47/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.080830786 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.444864268 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.466137943 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.34823937 seconds)
    (51/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.478559571 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.43314513 seconds)
    (53/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.335479671 seconds)
    (54/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346920569 seconds)
    (55/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347252427 seconds)
    (56/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.52475688 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.2539469 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.489255821 seconds)
    (59/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.315449082 seconds)
    (60/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.359245346 seconds)
    (61/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.518549779 seconds)
    (62/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.457598715 seconds)
    (63/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.416710706 seconds)
    (64/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.357948424 seconds)
    (65/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.491648491 seconds)
    (66/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.423924521 seconds)
    (67/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.539217041 seconds)
    (68/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366853085 seconds)
    (69/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086526991 seconds)
    (70/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.474759706 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.531541608 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.223374813 seconds)
    (73/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.394180452 seconds)
    (74/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.51941684 seconds)
    (75/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36270949 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.069589077 seconds)
    (77/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.330820476 seconds)
    (78/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.140673037 seconds)
    (79/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004138962 seconds)
    (80/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.48729452 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.574662637 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.469680122 seconds)
    (83/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.019678863 seconds)
    (84/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.43381893 seconds)
    (85/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.367531698 seconds)
    (86/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.435126174 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.126682123 seconds)
    (88/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.333949571 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.399126295 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.440363689 seconds)
    (91/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.314165232 seconds)
    (92/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.416536501 seconds)
    (93/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.337371162 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.556039386 seconds)
    (95/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.271880241 seconds)
    (96/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.449020527 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.423989128 seconds)
    (98/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04477917 seconds)
    (99/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347302101 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.400741403 seconds)
    (101/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.339398233 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.460693472 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.438837465 seconds)
    (104/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.503899559 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.442567626 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.353501006 seconds)
    (107/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425061274 seconds)
    (108/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.442512613 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.442512057 seconds)
    (110/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.401606065 seconds)
    (111/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.4773882 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.422577103 seconds)
    (113/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.34155769 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.397740987 seconds)
    (115/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.682650559 seconds)
    (116/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.535931871 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.45531011 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353493738 seconds)
    (119/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.414175518 seconds)
    (120/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.329920747 seconds)
    (121/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.458822385 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.545309949 seconds)
    (123/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.341148436 seconds)
    (124/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.322575125 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.441056682 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.12770345 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.379927834 seconds)
    (128/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.426764793 seconds)
    (129/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.657110963 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.701712691 seconds)
    (131/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.317866536 seconds)
    (132/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.187023213 seconds)
    (133/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.478893866 seconds)
    (134/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.546558714 seconds)
    (135/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.362252936 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.423421686 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.474612838 seconds)
    (138/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.535610614 seconds)
    (139/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.016548324 seconds)
    (140/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.463094215 seconds)
    (141/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.371060899 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348102341 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.466054038 seconds)
    (144/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.377929735 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.466850763 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.410269767 seconds)
    (147/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.37628356 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.364181087 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.429931463 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.433617413 seconds)
    (151/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.378084417 seconds)
    (152/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.442356675 seconds)
    (153/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350657635 seconds)
    (154/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.370949125 seconds)
    (155/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.3750672 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.352734153 seconds)
    (157/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.423364094 seconds)
    (158/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.378459134 seconds)
    (159/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.363521269 seconds)
    (160/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.403723364 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317722066 seconds)
    (162/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.437045361 seconds)
    (163/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.419476773 seconds)
    (164/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.390238587 seconds)
    (165/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.440170562 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.397173202 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.457305473 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.407373057 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.459786427 seconds)
    (170/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.319383029 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380659042 seconds)
    (172/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.082246789 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.556254419 seconds)
    (174/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435352136 seconds)
    (175/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.490784691 seconds)
    (176/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.705544451 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.347935229 seconds)
    (178/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.512407815 seconds)
    (179/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990884776 seconds)
    (180/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350624779 seconds)
    (181/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126782782 seconds)
    (182/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.363157869 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.480622563 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.247220337 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.396117969 seconds)
    (186/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.469296867 seconds)
    (187/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.321127694 seconds)
    (188/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.518669572 seconds)
    (189/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364962621 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367457573 seconds)
    (191/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.540060785 seconds)
    (192/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.448535291 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.389325428 seconds)
    (194/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.992676609 seconds)
    (195/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348277173 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.360173731 seconds)
    (197/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.492278242 seconds)
    (198/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.371039371 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.444168509 seconds)
    (200/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.871080042 seconds)
    (201/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.36024213 seconds)
    (202/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.469116193 seconds)
    (203/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.387363617 seconds)
    (204/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.332473819 seconds)
    (205/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.159222705 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.541148394 seconds)
    (207/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104611402 seconds)
    (208/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.357782966 seconds)
    (209/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.477882378 seconds)
    (210/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.357381062 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.529404493 seconds)
    (212/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372023474 seconds)
    (213/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.387258607 seconds)
    (214/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.388397344 seconds)
    (215/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.539949599 seconds)
    (216/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37629162 seconds)
    (217/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.342659472 seconds)
    (218/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.332021467 seconds)
    (219/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.491003536 seconds)
    (220/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.383005896 seconds)
    (221/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.31757187 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.473983071 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.549509642 seconds)
    (224/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.021801164 seconds)
  done (took 372.122314747 seconds)
done (took 373.335994763 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389302177 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.519311809 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.334149906 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338444579 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380847474 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339711358 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373718657 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347285466 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345230126 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34888022 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337661213 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34531525 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34949602 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.374109219 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450502677 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345630169 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337039396 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344189646 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386904798 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.405161316 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382059475 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383887132 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357655991 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340425553 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384700727 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386793845 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.345994861 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347256099 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349175044 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388132412 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328344246 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369076018 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395966821 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.393900322 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381986793 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346268282 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383467119 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.523103933 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379612848 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37525536 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352408293 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396738135 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350155373 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357539732 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.39111123 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.359509147 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392038886 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46112065 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346925584 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346956917 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387336197 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.406963848 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35403664 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.334374327 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347782247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.467306953 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.346124086 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387012701 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346314901 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382038189 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.453015248 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384209435 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.4077496 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387947451 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344863915 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.358493262 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.342111007 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.408886195 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.348379609 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380613877 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383206457 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351014457 seconds)
done (took 108.24434222 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.478838151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.345639713 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.523011882 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350481988 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.51328054 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.501863404 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348243149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342267122 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347809785 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.255577497 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347840723 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343783509 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.332959686 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348988388 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.480159209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343291818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346084786 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.229341644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.346403521 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.506927328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.338792072 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351208601 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344866805 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.298038314 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.337937073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.342773617 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.519616676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349719065 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153635378 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.342013804 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.337905709 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.183349416 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.522113437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370018568 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357479632 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359179016 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.51735453 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36850631 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486804574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.482091965 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.523440521 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.387377205 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338266668 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347267429 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351429125 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351504762 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350628323 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376809579 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.342285468 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345358195 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.140550064 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356752579 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.349604218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350836467 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.34688482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379632742 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345221875 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352572935 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.508553624 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349093289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.480913866 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263568053 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.338265327 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.347104871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.345107025 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351751596 seconds)
  done (took 110.56189637 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.440690805 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42413092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490722998 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363416919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.395906708 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.489664801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360894537 seconds)
  done (took 11.208466818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.348858004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34542474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392029442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389874249 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343848906 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543377054 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350065849 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.350519759 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346986984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.393466817 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.348427172 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346195196 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359211961 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.346784302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390838062 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355202512 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.438539947 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346926979 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347065045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.495868827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347161528 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355118569 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390235968 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354889568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347323199 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347976391 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.113864543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346444828 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349529081 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349992915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350768867 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.429051816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348372688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.336988504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34540987 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462003726 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.344166582 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346184464 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348611751 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.342846888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346884393 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347648313 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341890304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346643671 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.350355457 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.365467248 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.346766619 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349150048 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346856964 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349364571 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394169443 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347454301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346372052 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.346651275 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396742315 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358299999 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349888334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353853877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.348224335 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345313354 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495981119 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393204229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347521057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388930474 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347004135 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351460418 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350301393 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.346067545 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436192184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.349680093 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392282645 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348078699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52684285 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368039797 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348871299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348462634 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351364193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34973428 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341918229 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351497229 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34704453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.345807272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352137269 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348606532 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349931165 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.502226121 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456114741 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349210363 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355328928 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353757884 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350094181 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.39957939 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34589305 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35019196 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39941235 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.443040225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400162622 seconds)
  done (took 138.844793154 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360983495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362263656 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348599492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375352218 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364419586 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345074393 seconds)
  done (took 9.407327869 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348032684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.355558566 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.346316808 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350167856 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352487818 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351418682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.34989642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348299192 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.354246647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352479628 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.353041457 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35373514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.35248085 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.349699575 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352623409 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.351483599 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354049784 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352315148 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35418913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354645206 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.351725094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35194406 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351813665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34905882 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355806812 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.352055118 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369490612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353640244 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.351773092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.354741415 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376137015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.353631563 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349661564 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.353149596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.35607645 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.349205627 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357535904 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355290811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353531214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.355176402 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.355926894 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356042697 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.353150275 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.357031087 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349924264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.352868548 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.35691379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372028607 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356237899 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354893974 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.355552487 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355245115 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356559225 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357675799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352262686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372973901 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.360045729 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354943989 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355994156 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350695193 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35892916 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.355963437 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353084529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359627149 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355223112 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356025704 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350326746 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359951472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35436017 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355055498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35524916 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357340949 seconds)
  done (took 99.799820028 seconds)
done (took 371.062822117 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.196131433 seconds)
  done (took 4.449511472 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.45993108 seconds)
  done (took 3.715276416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.354088933 seconds)
  done (took 24.614586875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.349290364 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.390059438 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.362621638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.353877373 seconds)
  done (took 10.71293585 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.669894592 seconds)
  done (took 3.923477368 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.362609743 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.356289895 seconds)
  done (took 5.974446779 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.630229181 seconds)
  done (took 3.884372047 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.913335482 seconds)
  done (took 4.173540745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.363620696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.364993171 seconds)
  done (took 5.992197619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.336649452 seconds)
  done (took 3.591771926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.375500863 seconds)
  done (took 39.630243998 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.3601682 seconds)
  done (took 3.616976057 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.441404742 seconds)
  done (took 3.695705198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.242436325 seconds)
  done (took 6.49881204 seconds)
done (took 125.727824651 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.346386848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.355800927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.356116847 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.356240085 seconds)
  done (took 10.669780662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41040502 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410841805 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411606421 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40961395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409819498 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408444501 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.38193951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.383929441 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410290934 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411873601 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.410712118 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409636473 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41178282 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385183362 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41046499 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409735249 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410439996 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413508328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.383137394 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.411200535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359505874 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411019865 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410714665 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360708126 seconds)
  done (took 34.906004381 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.873729927 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.427167652 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508887939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406276692 seconds)
  done (took 7.472480143 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439637093 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.439035782 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453172447 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492173268 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502511296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449732154 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.387312473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381503939 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367380487 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.436391932 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.488041388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429530685 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519781687 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360766117 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.568026791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.358960061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358226865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436714466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489652324 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493786386 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361956502 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.437026853 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440376616 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430747325 seconds)
  done (took 35.782753836 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369944254 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377193735 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361984599 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379814282 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.361211764 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.362987884 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364294804 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369448375 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.360052721 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.360943597 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.362938082 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.375439307 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.365785551 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.361402759 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370278131 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363750856 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.366533219 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366643173 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.36321596 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37050569 seconds)
  done (took 28.593581854 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.354261688 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.350426699 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.700642841 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614673373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.351465005 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.359382774 seconds)
  done (took 13.989000099 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434809884 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.606866604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364919312 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.748464954 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827191105 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.358874078 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359328315 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.617608515 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.966625445 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.947958465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426930539 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432981308 seconds)
  done (took 20.348763294 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.358366402 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358933815 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.36033953 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.373718115 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.41674183 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.379584241 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367228652 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.351351081 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423642045 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44063048 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382089753 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.419381131 seconds)
  done (took 21.892944974 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452055108 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356281614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358629533 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471838734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357788409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211957403 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43100141 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092833258 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386063737 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634025583 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363986097 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462509183 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615545681 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364012984 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364374102 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.347214196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596160447 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881696196 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366587154 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363251127 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398662094 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362584475 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357845191 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596700871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388579017 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359636401 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622627455 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358056682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660532947 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380548472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369259682 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361284225 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635730779 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040284352 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479204152 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589064222 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402807282 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363580433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.359853829 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.387583859 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370059244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369927634 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371237931 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362706712 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361326271 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371520413 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11035584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390150943 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362596695 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361154184 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636715295 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463885511 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368500349 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360867545 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37353703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363311738 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.366278581 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507381998 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009433341 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372742192 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385343724 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369633073 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357919831 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367980784 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012555495 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388132013 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36845381 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369181525 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36393535 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377436347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388281692 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362296571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389273439 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362115127 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14642903 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400859056 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368997122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936868743 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365589986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.369593897 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595138309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361105473 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361992643 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.362890487 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362009796 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109240385 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376874844 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.348630285 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434846136 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118748726 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615163408 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409285645 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394958908 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587552488 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.350201377 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364203856 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.362544442 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371911109 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385856916 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104351224 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38558432 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369300861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622787678 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576246979 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377305854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.37358289 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87915698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389634876 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389858914 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37716184 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604871711 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.029619095 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406028294 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366095538 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389506598 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366273505 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131779045 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368251836 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.476373772 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373504984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660008491 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191230487 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366500258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432884591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373672377 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364227936 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373645363 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372388094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365252001 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583948945 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392857079 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381179286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.370248796 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367635522 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.369144808 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389930664 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.377177142 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590835312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374751994 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653371491 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369174593 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368691512 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367670676 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591857443 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369927019 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.731643714 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631662964 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376525018 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380651397 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378535699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385757563 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471695709 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387532685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.37006617 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623580936 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.374554336 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374222861 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378975561 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380624213 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373762945 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.375346538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376122683 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003836712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362874162 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379989749 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262768828 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.382562467 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436964928 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37689151 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596990367 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.4051683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37014311 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.378677558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.371783368 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601542258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378574925 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.3796928 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458786997 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871406236 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012700002 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412032217 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.371038158 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370096187 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.368730919 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371026252 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370360301 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368794859 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600240023 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410351538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389455181 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004045569 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399319442 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382645571 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.387229425 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380624138 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.377542577 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369985179 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373456318 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388288503 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392095131 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389145362 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513786935 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.3838633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371184527 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88857057 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379040708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373041799 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36958977 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401437267 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38207739 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246399233 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656050008 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368490879 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669702179 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386198355 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395350724 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373016551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38483234 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388783905 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.384132297 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38085821 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38522625 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388085876 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379285496 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989798844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213954641 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952595356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396931595 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.389981986 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378855414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1186108 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39149197 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372132781 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626996839 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140821529 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392174933 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884809289 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.39241673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204320231 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659660093 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61366946 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374750349 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.388391298 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663458368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592731811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408888695 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385491314 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38281172 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.359549826 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962875664 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396227784 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461374445 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126815527 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406405004 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382393011 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.413729088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384580715 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819657755 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400619364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375058952 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387103683 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38179454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254032227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401183473 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378013843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038184371 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401388444 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890900823 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394389954 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611192034 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.409595112 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38196075 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.392362194 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.386777511 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637397006 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650915165 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382884165 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378009993 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96086308 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268773434 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.388883735 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376558586 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170566873 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39502859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689577431 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394788417 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399209907 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387616933 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377369246 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378871431 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.3777644 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400157249 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353707044 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907866157 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.384215797 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392195681 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39843245 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384976823 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636059402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394689507 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013611065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632187078 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378268604 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419628797 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38732178 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397848709 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371063494 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380823988 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38115217 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383248286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605991443 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381483082 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.36542749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462043276 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592626088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377260919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38469677 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647641582 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.402649982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.395366274 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230042944 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436262406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396367711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387868838 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377947399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423792737 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467333282 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616966542 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.413825599 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391774416 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8256731 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404406285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404924614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39573243 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474226128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389265532 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.405909218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.167392938 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055055016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208154908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042600912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687817379 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389557989 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391661486 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383091313 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544314404 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383334627 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653153198 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382424929 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.394555575 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407492954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401711431 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402774932 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600017899 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660302724 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383924855 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396896249 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390013861 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.381736385 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390163077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599837242 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914766006 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988682035 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391237599 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390738869 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141479459 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679173104 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384431948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384382919 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382440279 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.400278677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388901149 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.391052781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387783069 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532929322 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663152923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094202104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.413123805 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.415977766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.905268541 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382593553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663276047 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384871957 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622847378 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046641189 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170822783 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660204214 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453823595 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625930447 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.411184135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546023498 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.399491697 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39444686 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387063862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388078276 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.38662989 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397166122 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031092536 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675724792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.389723233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.398584036 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419703125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.397109191 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60750216 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143243855 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608959293 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397788168 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409400792 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394672325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028487214 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693002562 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39363342 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391916475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650985566 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411558919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410687138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.077154759 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.385892175 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981970614 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.367589732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408377359 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393099541 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146109809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027878165 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.411888654 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943116161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395368721 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394063651 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670325715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.393066439 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398228002 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674760305 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393950887 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396877175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632870509 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.04366197 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260099143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.396066734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39649222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417063215 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387852153 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391438426 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387711461 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389023514 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.857264107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408647987 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387228135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398665261 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.387625333 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407142747 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.393988445 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390030901 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396993554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.412469288 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.373690609 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404377409 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538184609 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034481038 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413747983 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.065069503 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714652768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643806872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399233805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.382842847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395407897 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389325864 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391140549 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390145341 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383792601 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973617507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.40645144 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406659128 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396687264 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.38904654 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599109879 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389215134 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640173993 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420202569 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412460533 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.373915175 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387823661 seconds)
  done (took 982.170896505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.398890121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.414500788 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425754099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.497519387 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417954364 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.880017326 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.435733517 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434144336 seconds)
  done (took 21.190121834 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395255875 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.390762641 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.398138579 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39854821 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.392813937 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.876871255 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.399505693 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.400019674 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.412446248 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.396328844 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.4046761 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.388417816 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.401127487 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401893654 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396157039 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401064906 seconds)
  done (took 33.153632971 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.569970274 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.646405065 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.753417655 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.39744919 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.416717044 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.405071552 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.752866229 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.417829864 seconds)
  done (took 27.647632916 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.395645731 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397573613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.395478606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399506502 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.395830032 seconds)
  done (took 8.271145114 seconds)
done (took 1247.344099651 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399184494 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401886746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400387764 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.400254144 seconds)
  done (took 6.885311602 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.378014637 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.382868869 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384469311 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394613818 seconds)
  done (took 9.826792433 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155048652 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.078264198 seconds)
  done (took 5.522745323 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.900033557 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.905167448 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.902089924 seconds)
  done (took 6.996195205 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676302232 seconds)
  done (took 2.966210893 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344825153 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.391381022 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.066471924 seconds)
  done (took 8.092475948 seconds)
done (took 41.577897567 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.395898947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.734424814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.545665265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389523846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.550616263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.552689434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.171090336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39142689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41159526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398659662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395539764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551196096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.151555082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.735841437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.148596095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.740789857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.553849355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389734186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401426745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396043241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.171052627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391459205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390721311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402754404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.551608183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543777652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.398547967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.736152039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389736642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394257439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.53435201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405234098 seconds)
  done (took 83.606613464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401755536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391920156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384941865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410761272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389387395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392290753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417303785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390506423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389931586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388541371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408574455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392331047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40628823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.402253784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40325363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403084765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392599218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394035081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416689862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392376865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411447175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398528638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390403862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400645566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.392812483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392415486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410995382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.390243773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391588672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41290562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392910151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408674277 seconds)
  done (took 78.056077202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391155982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391898348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.405333747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390354791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393823271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391711426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.387997417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406463488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396482704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396696352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390881205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391267503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.392971222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.390681794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.3917721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39227677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.394138495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398088192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39533895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.39586505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.408877996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400528899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407212744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398010373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393217186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402200872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392291676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421051876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392151984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408488167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.422572327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392963647 seconds)
  done (took 78.0186866 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.677091249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402890711 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407264964 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39789777 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.408314077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405522691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401432876 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.68123543 seconds)
  done (took 15.075922792 seconds)
done (took 256.046881439 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.396389524 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.94784181 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440798994 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.414337743 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.42565783 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426661865 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.633345248 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445816735 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.640304982 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.426571459 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417993741 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.411520239 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.272168741 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557001554 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.295590328 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.398687661 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.356111891 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.395535104 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.024194246 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.695435571 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.426539101 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.401636281 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.286397765 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.385649362 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.393571053 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.486218537 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.506708641 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.631060722 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.565940016 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.486102846 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.947270821 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.399894348 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.420715734 seconds)
  done (took 65.65126629 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.40277907 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.526829435 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.40538345 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.405157688 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.525759621 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.425285163 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.400865501 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.407000811 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.407958021 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.405489086 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.406967277 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.408068549 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.408892113 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.458239044 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.532187557 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.424102648 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.402574944 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.527816664 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.404875544 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.404110833 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.450637471 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.407531995 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.409158388 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.45524788 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.408894142 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.408309834 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.531690323 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.433267142 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.411079065 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.524310061 seconds)
  done (took 44.426318706 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414753972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.057249501 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.205460894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.425729463 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409639864 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415449321 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.729332622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.413578121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414197943 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.416176769 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.933820278 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430816556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448500383 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.230873551 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.409066075 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.414123989 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412755466 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40841474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.067408348 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418046424 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.740128814 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417010103 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.721614818 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42191704 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432796746 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411321841 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417466298 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.298819672 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431035659 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.939077166 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.273213071 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.72748695 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.22577241 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.260983596 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.265348555 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.424357221 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419210201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938785061 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433717677 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411969217 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.728353107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407344508 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.216565102 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127518894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428908215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.414841773 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.306051439 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959624228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694645571 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.426195244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.259363384 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.415512762 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416309986 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412529923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.666981973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434365014 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410853252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.335582527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.43881352 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.721088749 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422124993 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411813406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059171391 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.416188638 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.052288741 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416834614 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42068541 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433870798 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.212410784 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41158077 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.192685215 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437695936 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.417886732 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.923740032 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.066561059 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.382160952 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.418502205 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054538317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.25530652 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.735214706 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434630947 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.270627066 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741492403 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.421750095 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.421114109 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.417544213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.41876204 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493736322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.715443504 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088327186 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189192654 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.362237517 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.751978574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442427578 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414041259 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.349515837 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446178736 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.419137476 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.206976221 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.199862502 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441964371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418529759 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.203715428 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439092524 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.732623239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418198989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.26356495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.41071917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495205134 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415176373 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421506584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.436653541 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.732082033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.415260563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421316797 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.178505053 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.978147011 seconds)
  done (took 200.385979922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.406295684 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.408298981 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406017726 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407608534 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408808296 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415522238 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.409311901 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.406768313 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.414692104 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409280443 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.409682626 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418762703 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415916584 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.406262715 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.410861588 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.427735222 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.414175963 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.428200755 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.418063775 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.411592197 seconds)
  done (took 45.562452173 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419554463 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.029562002 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.027076444 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.426975399 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.419708875 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.415040864 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.477305403 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.441751229 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.420924592 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758096609 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.607445942 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446418131 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.420739233 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.421178925 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.008528585 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416859478 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.755443559 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055991847 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.426073007 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.052048615 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413921605 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420060423 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415009235 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052909051 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.788192378 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.745044843 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486983423 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.079274331 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447902251 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.421922716 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05416907 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427994219 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417494806 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05734632 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447142705 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.444710761 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.423328791 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.480909158 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508003755 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.785390482 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.145232822 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.773593751 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451856877 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61229958 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.428607912 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.410802196 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063739562 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447021909 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408541836 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423332518 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429897593 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.019736093 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445474658 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.023726463 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.451825178 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421770575 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059154947 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.028268856 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.043281733 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614651966 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.442120963 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.736997538 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.430296817 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063574818 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449474502 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.426253715 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422900065 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611295096 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080957012 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.74723193 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.768269736 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.769937797 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.433252372 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492973798 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.448424506 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.838321029 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496838889 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.867795718 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.771712811 seconds)
  done (took 131.07741213 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712159203 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.550233253 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.872250407 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.111175421 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.420818224 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.564367125 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.550266849 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.712631677 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.438996202 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.497380768 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.129704915 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54211842 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.227064875 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51788967 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554306749 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602469648 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905543947 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.422103197 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.173191688 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.145059246 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.431399408 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555212999 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.029111965 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.658229863 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.428250252 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.048248442 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.443684782 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154224386 seconds)
  done (took 55.71435786 seconds)
done (took 544.109784907 seconds)
SAVING RESULT...
DONE!
