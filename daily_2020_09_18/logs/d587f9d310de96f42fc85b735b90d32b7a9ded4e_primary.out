cset: moving following pidspec: 25939
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.728536726 seconds)
loading group "shootout"... done (took 1.013321309 seconds)
loading group "string"... done (took 0.410197449 seconds)
loading group "linalg"... done (took 7.678613679 seconds)
loading group "parallel"... done (took 0.159196957 seconds)
loading group "find"... done (took 1.275957251 seconds)
loading group "tuple"... done (took 1.964350342 seconds)
loading group "union"... done (took 12.391213315 seconds)
loading group "dates"... done (took 1.330251863 seconds)
loading group "micro"... done (took 0.204507134 seconds)
loading group "simd"... done (took 4.345786094 seconds)
loading group "io"... done (took 0.991416733 seconds)
loading group "random"... done (took 8.623175824 seconds)
loading group "problem"... done (took 1.498019557 seconds)
loading group "array"... done (took 19.280250662 seconds)
loading group "misc"... done (took 1.462920105 seconds)
loading group "scalar"... done (took 39.149897448 seconds)
loading group "sort"... done (took 3.101406425 seconds)
loading group "sparse"... done (took 11.554370687 seconds)
loading group "collection"... done (took 16.966240917 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492009433 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116380034 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120878636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.113732906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192633551 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115748442 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.118260797 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080533048 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809358639 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133874534 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.107459064 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41204917 seconds)
done (took 5.15051978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.159422607 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083519926 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074858638 seconds)
  done (took 1.279838311 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060947584 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128256237 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061880932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062351292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063071077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063171364 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062674234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062786823 seconds)
  done (took 1.626550638 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067710573 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063379927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061953217 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064308509 seconds)
  done (took 1.381667017 seconds)
done (took 5.650972926 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229162197 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095053388 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.274314071 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.380291211 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.479646659 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089828982 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069436977 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066505983 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125083285 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315841125 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.096595797 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.171012209 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.083753948 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.166664415 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.956501875 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113010067 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081161168 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117352333 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088884645 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127019214 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.367739463 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072878181 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068638805 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065627662 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063296566 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641616485 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656955252 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12559808 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078716986 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.096132739 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112709697 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.644154771 seconds)
  done (took 10.275565413 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.086894591 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.084590666 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063682369 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118700201 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.086558645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06445771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070135912 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062760792 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082083961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.116875175 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085560182 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.091997011 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061493398 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.063795427 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069123951 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.189523901 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074474977 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075685427 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062478092 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075605287 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101122455 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072504887 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.072946176 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072419588 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123276 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163121389 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091896155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093519432 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061190319 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073404755 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109989937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.119916403 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062068361 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060835934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117420854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090637285 seconds)
  done (took 4.342690662 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930775797 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088064191 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.09567013 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.587363301 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061710195 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14162662 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.224363721 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067744065 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.285002635 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.10690759 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.140139635 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.10559007 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.138485241 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111739507 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064261143 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.15247124 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109618044 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.444894374 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062882781 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062198183 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060708169 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063545434 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062618218 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059195989 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059253651 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064397807 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.08916405 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081592483 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.153690399 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911215815 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.277604737 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064625447 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156995387 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079410596 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.372170492 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065746962 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077353468 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.399240591 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117101053 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061106008 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15898347 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110641226 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060114454 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114201204 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075244415 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065627115 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066399432 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064891902 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068349248 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077229561 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061568551 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098214659 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063543654 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06204072 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1632539 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060707548 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061464123 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062950598 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146085726 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060396492 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13347609 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059769832 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064234121 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095301157 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064351519 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.081744411 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089626211 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059802457 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.323974501 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.026533905 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062964253 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921605461 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073654462 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063150092 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067173562 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063229314 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063048302 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062989167 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067667252 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065826109 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064399443 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103770875 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061858842 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065303502 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062293636 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067069834 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09330259 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061085442 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46283575 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09228374 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061915828 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.070910536 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100307601 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062342655 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066536357 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064575648 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06281782 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061506121 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062659588 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064472798 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0898524 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065440444 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108071385 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.156390793 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064535086 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062621508 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067724281 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065185991 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065306532 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062410552 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064552217 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063890756 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060969441 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.102750252 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062571813 seconds)
  done (took 20.8255877 seconds)
done (took 37.497842943 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237701829 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073178923 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074908832 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073806948 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073928177 seconds)
  done (took 1.752372246 seconds)
done (took 2.960196033 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102080482 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059741759 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093697247 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092626827 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059930967 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059728758 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095117303 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.05964451 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.09174637 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093261326 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.094601889 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.093939152 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059542488 seconds)
  done (took 2.269591321 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065924559 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076525472 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077610054 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057775907 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067707194 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076632038 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058036952 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075757054 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081522158 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076274936 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076407467 seconds)
  done (took 1.991648265 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064907435 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076369845 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07779793 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057809093 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068083775 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076493947 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057855792 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075736927 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079425887 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076852311 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076430949 seconds)
  done (took 1.980648717 seconds)
done (took 7.437758203 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.06172364 seconds)
  done (took 1.2447189 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.483525802 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.141744401 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.062940352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.080999634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.175933592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.086779076 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.192048051 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.066185485 seconds)
  done (took 7.639964158 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094062563 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065293115 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.062740039 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.064205128 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.062692793 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063309116 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.063445172 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063041889 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06298326 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064702851 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.063991395 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063041398 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063141831 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064001008 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064427645 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.063732172 seconds)
  done (took 2.329607612 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09245637 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091338093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068096058 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069127038 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068193336 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067498249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069888894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068818168 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066201915 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067231547 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.06917404 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.066404614 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.065888883 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058028328 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067550347 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.068715078 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064814144 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067281149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.067994559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.068500431 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.067535474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.057812261 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066172395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.066837549 seconds)
  done (took 2.953561681 seconds)
done (took 15.366724639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168261855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069776347 seconds)
  done (took 1.427196854 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06374625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.063565915 seconds)
  done (took 1.332258698 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068920633 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057028243 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073476172 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06500698 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057271501 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056647369 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.072916815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058692231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058438303 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058282027 seconds)
  done (took 1.83141068 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058507415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064470609 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062338997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064225751 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.061983704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057696316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06090358 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059202284 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065494073 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05749727 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.060983238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.075945078 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060747635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077147568 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.060530203 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061613554 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.062644525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060561089 seconds)
  done (took 2.33917018 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.056717535 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057344714 seconds)
  done (took 1.329783278 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060076905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.057385885 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059604913 seconds)
    (4/7) benchmarking "year"...
    done (took 0.059647758 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.057838693 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057279784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057694855 seconds)
  done (took 1.61678825 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384030963 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113821892 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317114837 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063595873 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.071228673 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242436026 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06044969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065016927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065228486 seconds)
  done (took 2.631388163 seconds)
done (took 13.72498241 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075464011 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.166884813 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.082380938 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.391208364 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08608137 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062135065 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108401771 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.158610618 seconds)
done (took 2.359598737 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223266457 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.242688661 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.855315365 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064781821 seconds)
  done (took 3.383347196 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.304191363 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.073505221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073929073 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064487634 seconds)
  done (took 1.739876789 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060533411 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065917538 seconds)
  done (took 1.345902505 seconds)
done (took 7.922073785 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059793431 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05948586 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059746558 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086728411 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06021401 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060478718 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060235337 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060573555 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060928992 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060688408 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060179137 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060200564 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060024686 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060547101 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060659502 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060591753 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060431374 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060620527 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06099278 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059902158 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060177102 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059706672 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060615564 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060375201 seconds)
  done (took 2.721629452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.073937662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061032536 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062279293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063342854 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063760594 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063797045 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063409544 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062280231 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063672415 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062001209 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063768217 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063658641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061937917 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063637791 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062176176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064741895 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063431199 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06252032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061730203 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063791326 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063799985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06261433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063441229 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063055304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063423763 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064120035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062205038 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062729642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063277569 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063755332 seconds)
  done (took 3.139950745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060220766 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055688755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056657075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064943579 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.055774891 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056374265 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056579883 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055392641 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056971076 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058468062 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.05765339 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057084433 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057692431 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05706622 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056764793 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057598305 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06122864 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074358986 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057147424 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057054732 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06130135 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056918128 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057027252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057212329 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05739927 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056277552 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056312201 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057594387 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.055576606 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057118918 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057138216 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060855775 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061854241 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057299276 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066165078 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069668689 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057039222 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061520507 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058198088 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056800462 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056842898 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05652045 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056898292 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056758201 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066305031 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057085008 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057964868 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05766072 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05746625 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056527198 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056724272 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058605555 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061873063 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058663252 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056468543 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057960742 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056550522 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057660919 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056749804 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056833557 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056695747 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060256057 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057947973 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056489096 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073237386 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05719155 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065476404 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059048312 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057358912 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060206285 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057491303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072684211 seconds)
  done (took 5.477463678 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076909463 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079589399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060567412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060831005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056522582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056620306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065041589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057420036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061454767 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076034315 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056320201 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06037737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060127461 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.059980804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056221378 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060380979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063663187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056653697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.055900073 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.059796191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056399168 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063177024 seconds)
  done (took 2.608907881 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1300406 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061199697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097255837 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069345259 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063731162 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069430007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061231533 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06108341 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061805573 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062330971 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06199798 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06143222 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063198581 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06160998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061944629 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062070185 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061161282 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061490551 seconds)
  done (took 2.471851477 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071682084 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061154854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.080233281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061378873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061642372 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060934087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06536656 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066521215 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062364115 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062607013 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067187735 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061779436 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062042025 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062832782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061678823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062820631 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061867352 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062569908 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066510186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065994133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065514563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066033215 seconds)
  done (took 2.660823398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071324651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06068415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074753468 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061708743 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056613749 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.055983692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.060946888 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061439898 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062413537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061226764 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06158114 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056968973 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062271154 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06037258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.061805176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061688578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061393814 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061923574 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061741853 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057716169 seconds)
  done (took 2.475251417 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081166031 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058517883 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058860703 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076322776 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059187544 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058999852 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076312964 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058216841 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058901894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07866459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058358789 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058268626 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076851325 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07651769 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.058469674 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077466393 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076535541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07636015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.058763652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058568203 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078205478 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058257166 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076669325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058529445 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058467599 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058984016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058179478 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077012238 seconds)
  done (took 3.107630183 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059866001 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058790792 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059193531 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059817024 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059576556 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059305761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059633353 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059248138 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05923841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060107145 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0621149 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060861232 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060040171 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060085387 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060292568 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06005164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060162744 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060634379 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060452446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060695831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059982572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060598083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061045355 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060686156 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060764339 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060172997 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059608407 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059451464 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058987752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.05915076 seconds)
  done (took 3.046970262 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.067946943 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067186239 seconds)
  done (took 1.381359671 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058121561 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071863057 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056191902 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067296399 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063876675 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059723776 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.063994042 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064195558 seconds)
  done (took 1.749299542 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.061866538 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083949937 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058430258 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059978306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062398132 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115945945 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.070921404 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071696524 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071531802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060903457 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058825449 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07017938 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058190834 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07098306 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060503633 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066959236 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065594648 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070371897 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070384604 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057250589 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069372458 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05828003 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056413127 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058037992 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057346646 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063473214 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.071737643 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068997852 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065400668 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055633489 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074576587 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056359263 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057527135 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065016152 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.060457311 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056529515 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089927802 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057053807 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.061624799 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05647286 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067721313 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075696255 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070480182 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07478656 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058932749 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058348395 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056325826 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.058988808 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060671858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066839064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057669815 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064483099 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05707623 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059222166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066088904 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056396083 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06107099 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064925491 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068706982 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066405018 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0680547 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070499422 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064533633 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.063855217 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057191291 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074027009 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.057982372 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06853453 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07098983 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.057708831 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068466658 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056015343 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055131367 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.055984627 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086934865 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.057529855 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057189352 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056592633 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056175391 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058020236 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064976557 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061444976 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063119194 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059584298 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070581366 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064823887 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05610523 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062588607 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072427978 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059420396 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056168905 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071354197 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059158009 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.055978435 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072098375 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065342014 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.057586593 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057100026 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059637063 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.06895092 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057330271 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055377264 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063959457 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057578435 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.058746821 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.059758599 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063263074 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056030634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065450109 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060171687 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.056727932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.0544128 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.05948806 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05619984 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054078885 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063643051 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055440191 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068234191 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061281154 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068224917 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069795473 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065884902 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069702723 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055145441 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054544791 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072617214 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065308153 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.05753431 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071422105 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055031984 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.198212001 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057398977 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059148951 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066868512 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056896034 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059151008 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057636071 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.061608906 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058441916 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059401941 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062240052 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066425601 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069528233 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059614378 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066275553 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058507998 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072665842 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066839706 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062048906 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061985773 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058713913 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069231755 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06427908 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066833011 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057212064 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058399307 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057135805 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066413944 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066127566 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058138984 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063458529 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060811771 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057310469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.056781635 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058261328 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061113713 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061506825 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058217194 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065432129 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066169584 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073245632 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065073304 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066510401 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057232444 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057279361 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059453629 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057301711 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060741604 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064863489 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070619286 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067238647 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075165395 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056286028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066150713 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059448149 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07342864 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070239842 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058556742 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061218866 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055699641 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.057656757 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064738316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067054814 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069590806 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070197447 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060929803 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060926311 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056149671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0702187 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057100027 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064723531 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065226709 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.060722369 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056669303 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058353306 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065360339 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061207561 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.056858765 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071285812 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063964739 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057707037 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071084591 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058108747 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067681237 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057862669 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061127092 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062640608 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059802283 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066286769 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071917427 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057268998 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057857625 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071631508 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058285534 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05855159 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064153551 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070907036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060639748 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06368797 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066133241 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065543508 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060802167 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065483461 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.05708477 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064791215 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.05892069 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067035865 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056036688 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072431615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05533116 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069426985 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056280131 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.065720637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056157195 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064415833 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.056825442 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071337708 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057465204 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056268148 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066024712 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054386473 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063731816 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.054965936 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060276903 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061214739 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064112191 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057149671 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06412041 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056534247 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063209154 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059351836 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.062658226 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.063545521 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059572876 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.055075292 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.062912538 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.203583833 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066038241 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060367192 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060128404 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058503572 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066261732 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059091683 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058258413 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065139108 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061099248 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0620933 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.057927701 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.058623695 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058652615 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06504253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066003499 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074634461 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064643049 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063689312 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065738969 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057118099 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072131874 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057895223 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064514531 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056368439 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.062265017 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065149454 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.056347911 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074315985 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058439403 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064351313 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068539886 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064801636 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060706254 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073214596 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060335027 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064462769 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.063916394 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061009742 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062860792 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.058415102 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064383764 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065577833 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066613033 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057298931 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063571298 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065023356 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058265756 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.064177344 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.057940746 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064135937 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058343581 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.055553295 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060763046 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067433946 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061316107 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061376348 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056620535 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055600995 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.056548598 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.062749484 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06073791 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064574094 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070903575 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05582823 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057852626 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056285584 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062195477 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073145237 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065608463 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064092453 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060808838 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.055829573 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.05806193 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.058308225 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.056660862 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.059748265 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.055950755 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056593696 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066229763 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058184377 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061485832 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05785675 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059382905 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066511685 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062590915 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058302602 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063844487 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.055995475 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061088817 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055794262 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058308114 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060332743 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.055791291 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06034726 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066422234 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071345889 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062236276 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065847794 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058719544 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065059741 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072448673 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064604088 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05867534 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064893524 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055935466 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073245146 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065026446 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063948794 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065409755 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057016547 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071727827 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060004384 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065014566 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070089924 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056999863 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.062088292 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055889637 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070601972 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061189106 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055664532 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062842873 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062670842 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.060756863 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066101045 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056027981 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06260013 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05985083 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058623715 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.05673666 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.056489124 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063053285 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.069435727 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.056051463 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.058856644 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.205421255 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066094768 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063045835 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069701927 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065408271 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059421679 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059031164 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060541543 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.057908679 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.067890229 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057065291 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060783778 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060998359 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0567605 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.062917388 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071687777 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066005673 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065789303 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05670156 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056109996 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073236822 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060361905 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.060082596 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0654782 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067035592 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069817951 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066607517 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073776168 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058612616 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06349114 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069994039 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058780068 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057914971 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061416068 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060214479 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066714114 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067255564 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064986825 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060040265 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064893026 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070461119 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059352774 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062157738 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062666574 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058835336 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06772369 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065427951 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066561345 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05971721 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05783143 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061332548 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065813755 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064843848 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066328109 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058864914 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064322718 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070990243 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064629111 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061052018 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057452599 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061351467 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06501547 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.060517125 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056106454 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060518076 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060182217 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06367965 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065379701 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06062903 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056495605 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07180219 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.063726055 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065263891 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058212358 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.058678589 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056838787 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056616268 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066702767 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057340073 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.058641197 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061783865 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059971179 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074713903 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065714398 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072937508 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059002763 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062039789 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057543753 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067513859 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062043241 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058154878 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068008326 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057624933 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072316296 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069582467 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066110062 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058016686 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062558533 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065870925 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071497356 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067002932 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066212815 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06181653 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067167314 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059445523 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068246415 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057579826 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057326176 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067387998 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06619584 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069481146 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057876753 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067477823 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059647106 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065441665 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064877338 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059391194 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058987719 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059328637 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066180136 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062157764 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066109709 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061576254 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07289399 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.05776474 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067239888 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065083878 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.066762123 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069492969 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068431876 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064364615 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.057583943 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063618418 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064416392 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058521307 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061515505 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.203016016 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080292555 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061623562 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060086727 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072398098 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063442075 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057128293 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063383565 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062623908 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068785011 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059343469 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068715506 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.061995501 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059091812 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062650662 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062495948 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056963573 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057841911 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058074762 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067400663 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062821617 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058193181 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076076948 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060032938 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066093369 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068874187 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06455074 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059556725 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057301902 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058916399 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070629594 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072923717 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061837935 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066506981 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060108285 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066639309 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057235589 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066006582 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065854779 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065908348 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057688281 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058376178 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088410828 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072228273 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062257468 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067107384 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066653788 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059544977 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078472886 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065933 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058906898 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067787663 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060087796 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056998698 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057013493 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059499834 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06895683 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057990344 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059865735 seconds)
  done (took 39.336044127 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092063421 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057498142 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057168803 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.056556226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066536199 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05756195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056618894 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057597872 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058328896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060395058 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058076842 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057564537 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068289617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070241735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067679652 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061914441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057605134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058278483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057783474 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058206735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066922407 seconds)
  done (took 2.664102705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062401404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070311345 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066761896 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071459504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064013164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060309263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066975801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060346073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067697667 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065232139 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06734104 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06030313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064836343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065006197 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064921397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060964409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067098279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064027496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060380583 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066692604 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060364725 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066656255 seconds)
  done (took 2.765684156 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.057907435 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057181381 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064720236 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056191054 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.055846291 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060111089 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.055813869 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.059806488 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060135149 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060495609 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06580921 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057859398 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057192924 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062639678 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056962053 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057630728 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097509846 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057144939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0571626 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05592943 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.060964953 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064907855 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056643443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.05631048 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061369026 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060872749 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057635965 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060202578 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057944413 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061379755 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.05852493 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057505529 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065759391 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065658903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061632799 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061935067 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058868829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05823282 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057550287 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057603655 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065406477 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058943617 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057975152 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058681281 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066181121 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057224155 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057210775 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065812568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057474765 seconds)
  done (took 4.306196797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066068704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104680395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063122725 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087980684 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070030942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063622542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062604485 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088485041 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057665836 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.05923323 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071389104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.070430547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059015616 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060256417 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.062827069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059100255 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059703577 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058508408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062073954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060010952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063248259 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064117731 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069871929 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070229876 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061022675 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060084165 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059882266 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.060633583 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068216458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.062244425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061159277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061981561 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.069877898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063337047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059793331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059904813 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.070574405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060583568 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059968803 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058624206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.05994738 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061659256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064107235 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071277722 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060876351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064881136 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060447311 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058406474 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070847981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060295985 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.063496775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.06965933 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.059961001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0592668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06045579 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.068469499 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059616713 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058013896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059305573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.068690914 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059166612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06151532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071120197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060003898 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06373617 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071320664 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064846989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061614905 seconds)
  done (took 5.864738038 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065323716 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088979084 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067001638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066862348 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066424632 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.065697492 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066629 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067570014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067555491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067002512 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066337849 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102980979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06387614 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071381694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06579107 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066122233 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066476632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066075429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066728981 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067630995 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067005426 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066981691 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066816209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06753732 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070260764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063306926 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065814952 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.065870776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066839082 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066566733 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.069049891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067294337 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067931402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06843767 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070775024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067743991 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058506861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067589582 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067744851 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067691047 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064431585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066716359 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066248953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063673186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068159197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068237164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068573087 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070367522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07265334 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066824381 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066531223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066841859 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066198143 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066520321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066870604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072950364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067119698 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067176126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066464322 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067055903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067119931 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.072665214 seconds)
  done (took 5.605708336 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069506523 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063121239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074329366 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059304764 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056161641 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064829376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056250814 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056621185 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063044393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.062977397 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064296773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065106554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066973026 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064791048 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064743292 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067915141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065214344 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065206122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063110194 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064953882 seconds)
  done (took 2.650331764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070968011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074097937 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.061712375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065216145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.061652307 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064991348 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.060814632 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062026242 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06294631 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062595359 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066113757 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06629997 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062038483 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065494945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066270628 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065483649 seconds)
  done (took 2.403208292 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063241105 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.063662361 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06319313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0581414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061521659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.056814017 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057661191 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056771831 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058290045 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071896713 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058769087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070146631 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059151089 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057736083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05870484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063999164 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058040991 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0587768 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058724648 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063185277 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06541128 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059738052 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062965619 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058595819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064863061 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065759872 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060172295 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062323777 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.05892739 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059155486 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064685989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064848264 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059048149 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059883142 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058069787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058619114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058743636 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058990911 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065097283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058898762 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057566764 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064072569 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058717212 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059559761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058250211 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059343105 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058356328 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064309252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059363578 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064412421 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058914619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060656187 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059274635 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.064479264 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.059349103 seconds)
  done (took 4.714298826 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072940249 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061663594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056850415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056559001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.061981346 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062476849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061637817 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062777333 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057571955 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063466242 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062583905 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06367454 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062644372 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062233859 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061644575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056536882 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061380884 seconds)
  done (took 2.484829084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067346916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061536353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065879459 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061720334 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061388512 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061054597 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05700239 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057023924 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056475536 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061326202 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061389763 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060748331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057033399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060815162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.060850625 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061406754 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060874251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057133871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061496876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05706811 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06070653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056936316 seconds)
  done (took 2.694974555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083087707 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.07917211 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119110971 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074906102 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082827607 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067319201 seconds)
  done (took 1.874797257 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087129103 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096556878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061421111 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061127777 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068982614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063987258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065551983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065988816 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070958066 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067608208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064180798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069230259 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069048874 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06554141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069219945 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071366333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064217225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064192827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061147221 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071580986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064029522 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068909568 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064076031 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064334211 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064424946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065940537 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071507167 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067593087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065832874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069295263 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071689486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063826441 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069258073 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067668703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061680275 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068972142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064256697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071423197 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069387314 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065762672 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060818877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071798862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071002055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067571185 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07268552 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064171529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065748005 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064164891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064446893 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073837527 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069356395 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066252873 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069419818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071841164 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071670586 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073481433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068043393 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066003961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069754891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067944193 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065831433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069713126 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065811543 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067681237 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071928054 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065874017 seconds)
  done (took 5.86797122 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093029737 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061911203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064726185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068525675 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066442138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064125021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06471957 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066266639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066463502 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06395964 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099284355 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064650146 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066331863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066346682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06435924 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067365443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064071625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065983067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061913337 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073439433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064015813 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065881228 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065734016 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065384213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067607109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071454936 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064224734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064331118 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06397395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064005189 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065535923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064798261 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067068391 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062502794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067320454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065380213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065466005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067199716 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065257104 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070883961 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067515601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073437332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064055139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065129822 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069593891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065113093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065692714 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063121365 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064504492 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061465984 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067888125 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069538836 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069889518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067639888 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066034914 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065841862 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066083444 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06590625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066212197 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073076706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066059555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064005972 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074149778 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064270644 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063945536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066162378 seconds)
  done (took 5.821353197 seconds)
done (took 121.120781075 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203423114 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180270636 seconds)
  done (took 1.740084483 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069067118 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.090594772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070210927 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128828296 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067729461 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100169809 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099478989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069878716 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067314476 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068058069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067948701 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070241299 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133396593 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066980663 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066289883 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068616743 seconds)
  done (took 2.680469279 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099796968 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170761383 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105410141 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064647636 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099442451 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070830937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064497656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076146797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069740521 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067976866 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072897477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071337088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068177942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071395555 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070382239 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072979009 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068132522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072942251 seconds)
  done (took 2.841032109 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.087981306 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080372107 seconds)
  done (took 1.554924975 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.146662215 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099903845 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.136775952 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.304682439 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.12408525 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.120661463 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123394293 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.119424256 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.104604816 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.116582592 seconds)
  done (took 2.776037395 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099115637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.166825034 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293027085 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111774597 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070504063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092509139 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.113953142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076604757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.073631218 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07476539 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077644555 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072771094 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09657203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072215589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071656577 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073069225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09950539 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070962277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071162095 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072369871 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100472379 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066818593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072422807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070886282 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078641624 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074233376 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068102256 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066630775 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072390039 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071850989 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073806486 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089836357 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07342119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.092090933 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069359754 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093421878 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069522119 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068439906 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069776267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068745912 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071445469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071147278 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07340889 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071771165 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066642204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.068681045 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066628718 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066532551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075006997 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067436113 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074834832 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073458625 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092929442 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065592907 seconds)
  done (took 5.862092823 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100523872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.09866701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06527863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105480315 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097665158 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064919716 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098046316 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095154326 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10232114 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064411944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064047064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063992208 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070875446 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.073491092 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108366154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099729436 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065823934 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064365382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101001743 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100456097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065332345 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09560112 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094668808 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099558368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063077117 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065181806 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063499767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063995326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069045861 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.069652281 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063982665 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071776632 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076803688 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069993938 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06292252 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063705227 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063420908 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071335808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070645162 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.070681801 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069044692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063238172 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06354224 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06381723 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064492423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063140613 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069413764 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07052928 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069617865 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06327066 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064179019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063296972 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064022291 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070151778 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.068969252 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070838662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070696952 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063179815 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063534255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064958335 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071041589 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071146081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070782414 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064261709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071522286 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063297423 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071716287 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074850321 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064044785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063568437 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063278157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063663928 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063944644 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069143325 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069148696 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06415631 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063369268 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063521172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.071663818 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.069339446 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063395629 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.068670679 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06280648 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063423114 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06403196 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063923129 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.068799484 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.070606041 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064135537 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065588836 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063421319 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063345514 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062981059 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.068840002 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069928442 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070243346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069484806 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06388391 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069306211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069033021 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06351225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.068712476 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062873421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062764737 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06267884 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.068460343 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.067109947 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070029094 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062863633 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062339969 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.067827652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070374094 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062471921 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.067620834 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.205480434 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071147068 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064211993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075877239 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064505787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.071781166 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064849661 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071897347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064743385 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070492467 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065460451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064553684 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065912316 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072524061 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066229197 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0656729 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066281308 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065934422 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072132796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075864557 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06525846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0701798 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.070112579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064407741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070019766 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064960034 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072714644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064799448 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066132155 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063885991 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072640416 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063669183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064088643 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074382008 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065278137 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074273974 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071843654 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065328676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077154953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072532354 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.069351378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072241367 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065314395 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063768798 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064056022 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063944212 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069189531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070289177 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064455158 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065456275 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070966737 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074233562 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065284736 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072056893 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07138355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.069786307 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06352285 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063769837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073791322 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072021761 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.069513904 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.069757694 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070374704 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063839197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.069182486 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069793446 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063415616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075063628 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063706755 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073985024 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070046087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.06910756 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07063964 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071550865 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.071932563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.071798319 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074188197 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063478554 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063979731 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.069579541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063235022 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063684653 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069413673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064107236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064085731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074226449 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063707914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.071732655 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063149128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.070820383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062977182 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064193863 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074226545 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063884156 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064085077 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069544452 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063756192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069680585 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072322692 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069996721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063526788 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064243927 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070444575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070352203 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063339819 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062910229 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064917605 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.06993552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06980125 seconds)
  done (took 17.112445096 seconds)
done (took 35.961708298 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19532551 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151374234 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183589286 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108347762 seconds)
  done (took 2.119287847 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.086522893 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093034505 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.071606138 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061003023 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.075072374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061094127 seconds)
  done (took 1.87657744 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249482808 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176913443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162473537 seconds)
  done (took 2.008700692 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203135679 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.180051055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457028636 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278223175 seconds)
  done (took 2.635991029 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.121405648 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.072732271 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.05857347 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.06863902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.097915994 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.124625985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.079944209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.100156672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.069142496 seconds)
  done (took 2.276554264 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122234139 seconds)
done (took 12.490499445 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.095626613 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066256364 seconds)
    (3/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068288893 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066484753 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063403403 seconds)
    (6/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.192806254 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103872013 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.240985924 seconds)
    (9/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161242513 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062696072 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.141805993 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062866734 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.071037483 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070835149 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071607527 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071358732 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07709674 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216191756 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069623303 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166976501 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.068945611 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085713868 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112998954 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080194867 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.415373296 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067419792 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068122945 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064383393 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070672651 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073870546 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148238561 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06837409 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223358567 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.180127184 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.138991707 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068279221 seconds)
    (37/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.088051329 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207212648 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196090149 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059327147 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.16991715 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.168890101 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114005651 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071374983 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143997499 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.071353371 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.140067327 seconds)
    (48/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069848293 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061202119 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07154472 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141826035 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182590122 seconds)
    (53/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.060683715 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24121865 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159853271 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.062396646 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072636502 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207616697 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085857923 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076969843 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150950798 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 0.126841513 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.239309231 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090698337 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060747175 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069563961 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.156827207 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.186237186 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058977338 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081217004 seconds)
    (71/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079677117 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082707937 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061049104 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.060373234 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116440509 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207063725 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074182898 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07036386 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183068589 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121806183 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.210700344 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.082991977 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.059081967 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.324965385 seconds)
    (85/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.06969043 seconds)
    (86/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075686069 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.188175342 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083741416 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171781546 seconds)
    (90/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.12000638 seconds)
    (91/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.061120824 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172253065 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.189442492 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060775939 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061399032 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060934738 seconds)
    (97/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065315661 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199530703 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060777457 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155554627 seconds)
    (101/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06219614 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.189940484 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063903861 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142737729 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072034875 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069205623 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061585721 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151619704 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067941202 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114033089 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086750223 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061923936 seconds)
    (113/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.161406741 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.084533388 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069252304 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060393353 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060497826 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062680068 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061970104 seconds)
    (120/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144384838 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065772726 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158224016 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145599513 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062566002 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079305376 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070566295 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163993355 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085831459 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061444464 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.186899118 seconds)
    (131/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065326176 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061568149 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087505937 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132727379 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067871654 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070840726 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.084829167 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071928245 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158335674 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173597353 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070351084 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061250886 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119456292 seconds)
    (144/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068739557 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068547607 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114065247 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061706532 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070331121 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137859643 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068383958 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067639186 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.156982474 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14007581 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071517055 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.061395306 seconds)
    (156/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.061352205 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061559721 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.138365987 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059249738 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060329831 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061148934 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075380595 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117656599 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061688634 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139971465 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067945549 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06084519 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.177812008 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062986112 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06096778 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11406029 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061377086 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069211414 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153536794 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072199823 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.061030703 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059798075 seconds)
    (178/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131425743 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083298146 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133626265 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085605466 seconds)
    (182/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.141130605 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082748249 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.064464518 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212044251 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.136075792 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102575639 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059320227 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066500939 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.060908568 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.249871432 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069593495 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06145229 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063860664 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136107762 seconds)
    (196/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071486712 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069894874 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062455478 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068625408 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087608159 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08683107 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065843237 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070600695 seconds)
    (204/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075728645 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071252451 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063811073 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073650081 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062454531 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072892619 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18763144 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138193366 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063319315 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075809911 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062631755 seconds)
    (215/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077870295 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064310579 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.131316109 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125356053 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170528334 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069288512 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063646678 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07038533 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063121454 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061151279 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121065424 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061692529 seconds)
    (227/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.061859525 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061379306 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140765529 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061986061 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083455614 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.0602017 seconds)
    (233/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087646217 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060158184 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071194637 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060183989 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061736058 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062349823 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.060901588 seconds)
    (240/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061949516 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061173841 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.059946013 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061207043 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073291073 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061289732 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17150574 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063983116 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111686623 seconds)
    (249/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.087453016 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138760039 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061132458 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061787181 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065970458 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069181985 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133391447 seconds)
    (256/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062795997 seconds)
    (257/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.071760484 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061591824 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06110302 seconds)
    (260/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061643257 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060949259 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060532614 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.079954327 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.060294344 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061980396 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068285238 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128794201 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061241401 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069003236 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113966858 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061909381 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064752777 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061560355 seconds)
    (274/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062699767 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061794796 seconds)
    (276/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062493027 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084436134 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074153375 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063976082 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065024238 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071945893 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061119116 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069233413 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060832952 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068809737 seconds)
    (286/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.060605437 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061600904 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067735288 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061638817 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060623718 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068448185 seconds)
    (292/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.067934812 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.080721063 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061717137 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060227552 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.059966243 seconds)
    (297/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06099842 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060568737 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061400137 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06168642 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061177885 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060606741 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061220239 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060034308 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068214401 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063575523 seconds)
    (307/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060170104 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061570919 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060059097 seconds)
  done (took 31.243604896 seconds)
done (took 32.686136582 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080257561 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083852646 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068454356 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.079147405 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.075323172 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089776635 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068735495 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07259797 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075420006 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.073579025 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073346141 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069480842 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070133791 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.069951472 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068757511 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08493103 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077744094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070800495 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071289338 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062045547 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071245229 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063058924 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062183973 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069477934 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07458173 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069571764 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072152742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071877007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063166015 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062871434 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067370504 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071664975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065207056 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073797331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07101691 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071257419 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072427527 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075222212 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061961109 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06297967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073421023 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063680273 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07079927 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069018025 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067814054 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06984187 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070939453 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073814057 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084840992 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067004416 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073114638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073421787 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073779017 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068282997 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068361005 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072891185 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069172318 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084711567 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07020035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065143241 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07136561 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069808022 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067878266 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068938016 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068896985 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071796677 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.072080544 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067621102 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071355737 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068092711 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060965844 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068766579 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065489389 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061062535 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071974053 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075250399 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060905627 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06686634 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070864557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070968811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062107011 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067573816 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061690651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067777656 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067134199 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06954852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068166968 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070409437 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061713516 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071038661 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070007272 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069369631 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.059555845 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072003894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061707502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068454335 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061297123 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061180154 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060247161 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066364156 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060713265 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065466014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069142392 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059686441 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065666963 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073332378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060754897 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068312128 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060051751 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060502762 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071114408 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071121919 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061566427 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065100964 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060036084 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066477526 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060217604 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060757813 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.060696067 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061010161 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065423465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061222373 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065122492 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066453299 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072135947 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06063213 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06674666 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065088661 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061129797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067444659 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061130136 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060930947 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060224899 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073465012 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06457978 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061073356 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065868629 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064157713 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067865884 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058693629 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068427559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066079751 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06447674 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066342886 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059296889 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070877167 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06412613 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207804817 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060969972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062746051 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062429777 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063285268 seconds)
done (took 12.047215344 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062046723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.085938247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068489577 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076678922 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.072657018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062314659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065573825 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.076464619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064321285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081820481 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086851768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083723393 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088724454 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062274153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063527023 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06450886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062238802 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07031997 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077597511 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084868854 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090770444 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063212151 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071824571 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078467149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072492039 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079138001 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064445371 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063793253 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065855162 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079836203 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087597969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06378709 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064329183 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076524735 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076470916 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069353208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064053452 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067337362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064263111 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063734308 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065215503 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076882081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068977735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067902345 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064083394 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063930271 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063467835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066536916 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07655816 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066319365 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070789819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074593219 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064983534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063223095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061654366 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066829896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063168747 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064121744 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063946268 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063365383 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063378651 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065757165 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064338614 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064272017 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067020674 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06526393 seconds)
  done (took 6.115429859 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.07856816 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.087295487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077041536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077897667 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06171469 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062348005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062639564 seconds)
  done (took 2.050248976 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062201707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072647667 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076142841 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076735066 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.069406518 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.078369819 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062269838 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090543727 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062817343 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075468271 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107189933 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079670994 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066737652 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073619413 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062499513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069129495 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061962167 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069931894 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069063387 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076877248 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06579508 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08866119 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075108508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062268465 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.080172081 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.065783038 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061011648 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062245726 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062909196 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063109433 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062759178 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099054852 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.065082639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072650825 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063028829 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061255583 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067304694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06474691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064216348 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.06998377 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.066366387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063084038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060697089 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063211161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064693363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065497776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06132507 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064033487 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062661305 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074183071 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06283136 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067288097 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066512121 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068190666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069535772 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067517002 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070395492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063325709 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072453887 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069148811 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062733135 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.069427684 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069919628 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066852726 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.06966464 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.097450987 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.06500159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.066229495 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062577733 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063822341 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063306014 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069033315 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061600931 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063854599 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064458073 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063570155 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065295845 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077477652 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077200718 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07425155 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066015476 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065246499 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067540897 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079686282 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068300747 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064282838 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066865646 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063450778 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068414836 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06471533 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069858414 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065049249 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071519013 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066014244 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067369839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071882335 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062636625 seconds)
  done (took 8.21649602 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064135483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063515509 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064031862 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06289607 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062834291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063330304 seconds)
  done (took 1.955636867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083355672 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062498291 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076385222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062684431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095542851 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.068607821 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.068647918 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069358925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074523053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074296177 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.068427447 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071134318 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.068110679 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.063835396 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068037859 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06337402 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.067734395 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.064745509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073068717 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064475513 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07460143 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064111208 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063959436 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.072922443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065336784 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063710539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06283313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074014226 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075474967 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.070247256 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063422446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065947148 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071885285 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07135596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070399594 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071925944 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064367813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068962911 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066072014 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065284471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.070340674 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063742928 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06443133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067460558 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070049693 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070033751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067642904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065623476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.067970448 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.066969138 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06891208 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064731939 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066776767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069213898 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071564886 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071490934 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069391923 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070007572 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065952278 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071756433 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064298823 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066696579 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071649996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066003056 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066105623 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.066954881 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071676917 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065907817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066247281 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064218434 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069717043 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06419993 seconds)
  done (took 6.486007524 seconds)
done (took 26.355713011 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.876014598 seconds)
  done (took 2.402236257 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.550545753 seconds)
  done (took 2.116257002 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.688825402 seconds)
  done (took 8.249402944 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.282176084 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.297610013 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691180331 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.123877974 seconds)
  done (took 2.991270288 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71368423 seconds)
  done (took 2.289280401 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.223588019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.214927722 seconds)
  done (took 2.027513671 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.336391574 seconds)
  done (took 1.904758245 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.070245813 seconds)
  done (took 2.629879519 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.214027797 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151384973 seconds)
  done (took 1.938036885 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454449697 seconds)
  done (took 2.019103904 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.072060184 seconds)
  done (took 5.638515097 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22489702 seconds)
  done (took 1.831281507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.226060852 seconds)
  done (took 1.795055494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.766313312 seconds)
  done (took 3.329331787 seconds)
done (took 42.734001933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077739146 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081167092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080697204 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076048383 seconds)
  done (took 1.860077266 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.068806125 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065191854 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.068279879 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.068767022 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066906166 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067508204 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.06770538 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06451641 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066021821 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065060495 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064278193 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066371536 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069808771 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066050927 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067732439 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.068047746 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065446076 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.064673268 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067264863 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.064180339 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067049357 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.064803045 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063192759 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064733166 seconds)
  done (took 3.16089668 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073224226 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068002458 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070353925 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066701485 seconds)
  done (took 1.851370736 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.070342073 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078529793 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080259052 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.084551524 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071578439 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071031611 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077209607 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.078002651 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060862961 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.079668551 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063051226 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061805005 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06212038 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.079451734 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077174392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058173745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059230287 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071450827 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.069899343 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072523941 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063403227 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.060941099 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071331264 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.069986266 seconds)
  done (took 3.267704825 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074487661 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061258413 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073384045 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084832425 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087504962 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.060984652 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073883341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086841134 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.115857278 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.060940559 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066524827 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.060998079 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096966794 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06098403 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075558073 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.098899451 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.101980326 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06453234 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.091648484 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060655052 seconds)
  done (took 3.139916532 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.070943527 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065356656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065419868 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061063047 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072544367 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068352368 seconds)
  done (took 1.989370519 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064087129 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063684213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06273132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06256599 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067522422 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062615405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061830527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063160927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062863622 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062564233 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062191574 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061582783 seconds)
  done (took 2.337282596 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.152961104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064377981 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065554703 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063844609 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066800128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062292526 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.075461661 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063549089 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.078642401 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062207848 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062126313 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064168463 seconds)
  done (took 2.463536303 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092263036 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093700028 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136415812 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108892206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087405374 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.084918788 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.14761337 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127309838 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108656034 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.064566608 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081119498 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094298718 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092539547 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124926071 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104940171 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067913357 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.104321977 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075881394 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106955581 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11404253 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107630714 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114219156 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086372548 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092085918 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099848042 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110165965 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066682003 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.065902536 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139006233 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093913322 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086244838 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09241784 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104097291 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.063899275 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080142602 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098882261 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07742005 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10816518 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083857327 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09277652 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074975423 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.12332404 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098757695 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096784757 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123600874 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086659197 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10332256 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099416559 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077290346 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111102169 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092070374 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085196297 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07435179 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149451345 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083442075 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103243541 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105015009 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.075665434 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081554152 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095172103 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119822868 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098098224 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105046592 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.251423345 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085859479 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086392406 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.124037046 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079760879 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094952177 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123153982 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086375525 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071249158 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090072037 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.064950659 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.090252533 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100056642 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086392872 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104625323 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072441057 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119570261 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101966423 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068049051 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109677325 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092778724 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147167037 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089275058 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095287541 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085582839 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.139569664 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07946612 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0750068 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091416296 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120785664 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088219373 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090079651 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11989969 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089883809 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080942009 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070314981 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083122425 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095359914 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101112033 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094743709 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083086793 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08124418 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090198391 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.069922802 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075225955 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094857974 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081520541 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11632208 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103126999 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115592578 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073903129 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100437175 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090616555 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121662343 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.109804491 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078334158 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101976817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132505366 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106472309 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079333961 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094520822 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103409123 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100433487 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089272414 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127329087 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108511723 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08253311 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086108051 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.242144287 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105245176 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146549172 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084680158 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.098764251 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130958113 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105793231 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086984275 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078552302 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088604449 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099326233 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133128437 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089764491 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066165749 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086438711 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123274168 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071780606 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093069285 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087006488 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078315261 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076344013 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063919134 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097190299 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128534137 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107015492 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092371662 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.097719577 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064711646 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094031231 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098080924 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134133679 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109183697 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092176136 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091886314 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097498722 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074537527 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125146412 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124659434 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085628981 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084993758 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115759859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089557287 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.097853849 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10756226 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097272379 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095034228 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133477499 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112609231 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.117505137 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099097473 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116480882 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076513804 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108706151 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069233719 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09738133 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071649197 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098891782 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073742426 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103003175 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073305593 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093007536 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064102172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068209681 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.261849921 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084658666 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081489315 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127710596 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122603769 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076629057 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095344294 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09400655 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094547475 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102156103 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084409723 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086221991 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07364077 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075482265 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092367388 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088536318 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102199643 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073255481 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070744701 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130431502 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097313545 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086008125 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088319577 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.111162314 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08298326 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082021667 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096588873 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130369061 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110883226 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074871417 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085757965 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065087502 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079474504 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.070581564 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102110197 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.069813945 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105014939 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064021194 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122007308 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082070024 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095025594 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090820996 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120463629 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084597823 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119990988 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081716349 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101049585 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087601004 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08852935 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102309514 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089324029 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098368017 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104433321 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087229612 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084194829 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11359577 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099035705 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109510841 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100367292 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127980671 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104725151 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070400603 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09769748 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09226097 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1447451 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093322404 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082897222 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087516176 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095785683 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.231614736 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137027134 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081688119 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081632881 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106828117 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.084609744 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091090212 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071765122 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095293668 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088206493 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10690945 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092369338 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.08700549 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102762705 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103971271 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080769644 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081482145 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115755912 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.120545876 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.095719859 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087702162 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083017573 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094596595 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08842664 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.101707315 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075494874 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07120654 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.063966356 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067269931 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110509867 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101029192 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091762907 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092054574 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095972036 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068636826 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081754929 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084741243 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.07814677 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084515729 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.107361449 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096593892 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121215746 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.095664516 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086972612 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133277254 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121788545 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084761807 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086347525 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094699779 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071557659 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139246562 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111241954 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.072583753 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077546679 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.072174953 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08032048 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.066761297 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098994936 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097625592 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07106897 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096760251 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091653971 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116677837 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090854498 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071984577 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074291164 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070111899 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070236013 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094574217 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.071641494 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070667393 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119524826 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095075358 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.256643707 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080235574 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071379601 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124978454 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065063201 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124528311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077153086 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103475087 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.075677371 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074185378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084608184 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099312999 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09951312 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106555668 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06607852 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097117356 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144992673 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072048419 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070924327 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.06972056 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104714737 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081406713 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134489156 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08357554 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086616207 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072191124 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119904537 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096885789 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077345907 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119795777 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074454281 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.066839425 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080644359 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104554437 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067813769 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070325571 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106102975 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.624410703 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084910244 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.070471769 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082441701 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120058984 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077481709 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10163606 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.110253563 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099925678 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.174877303 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069364942 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085700469 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.097101696 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091743379 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08588879 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074283411 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083111681 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081973154 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079020474 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100450247 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075844089 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085156767 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074900655 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.09751878 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121619832 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081139483 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096513705 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081153215 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083950254 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091747801 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104098859 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0976679 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.080887182 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.238095939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103976697 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079066925 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.074041788 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094048724 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072011717 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073397363 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112612315 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.079810042 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087856404 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097134157 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.083738822 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107212558 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111537224 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104839536 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092001803 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074576079 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080895643 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.082177569 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069418715 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073998971 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.070338977 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.065996539 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10055787 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082501296 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076936661 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.094393252 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105007773 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09448348 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100214453 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085442547 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090820304 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093334432 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.119092722 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145901938 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09421399 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115913445 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124259274 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.071727335 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.070702327 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075472916 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124087134 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.075568757 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086531511 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227649152 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07274776 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076174273 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085760759 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100859255 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07770532 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075606915 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092668326 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104010781 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079513572 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075802693 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087345064 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100239762 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.12120015 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084016928 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.070655049 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103218357 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0960258 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116803534 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069734597 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076708487 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121495802 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08269842 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098634847 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075021802 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117217872 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122185031 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068076071 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08215547 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065505374 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.238267427 seconds)
  done (took 48.406599116 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.143568852 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.137763797 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077885578 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093611007 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.180946812 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191224834 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113763395 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.08998113 seconds)
  done (took 2.721760925 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064396088 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077536075 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094285254 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078012152 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062347766 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063308208 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.188526949 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.075586793 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061821729 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099954711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07096904 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064121165 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.339272433 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061800226 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062647798 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069520647 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063173147 seconds)
  done (took 3.292602225 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.347493962 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604345679 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.310645871 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069855766 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.670824243 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08724893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.089812291 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131097683 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076600557 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.510774594 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367242988 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125440503 seconds)
  done (took 18.086898051 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070482179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070541089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073502597 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07285632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069701689 seconds)
  done (took 2.055324449 seconds)
done (took 96.226008579 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077672128 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.159690676 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063616092 seconds)
  done (took 1.954146932 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.076796218 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.075423913 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.075398657 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.073014408 seconds)
  done (took 2.005037368 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069456956 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071842403 seconds)
  done (took 1.836478129 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221893011 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15473627 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085281919 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078423837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074842434 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075778134 seconds)
  done (took 1.934224806 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067150558 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.066979758 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067085921 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.067511536 seconds)
  done (took 1.963000159 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064785448 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062373289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064347667 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066880917 seconds)
  done (took 1.952637753 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078754495 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078909594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073054637 seconds)
  done (took 1.923456653 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102787917 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090881443 seconds)
  done (took 1.888687895 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075497512 seconds)
  done (took 1.773914134 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084611224 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089960255 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134481732 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.100494131 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133574019 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119691516 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072195198 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.072703847 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.068655688 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067476802 seconds)
  done (took 2.639480367 seconds)
done (took 22.108039218 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074500478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.356527411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.354736814 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080987315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.664517051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352023373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.962604247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.084392705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.092574546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063584039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.078988261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643776253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.95372467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320934339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.940141151 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320049362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644201105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064250703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063292864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063632212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948902842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062876794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063368859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064238409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.643955015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367425682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064342381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319318385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.062993163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065381766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.350822734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064728522 seconds)
  done (took 15.932191118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066319705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114310546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068397968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078542917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066037417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065251451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067163869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064290536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102484413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063904068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081820514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065697036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06764349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065380351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083031864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064389627 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065436101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06560781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066574888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065528424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081475199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064074677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065145424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065621245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065028318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076847863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065109512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064966762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064540085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066379892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068075719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065826614 seconds)
  done (took 3.977221974 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11422332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118909039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06869572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102356063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111015332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065602614 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141192598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085666272 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106265959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063984493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080388271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064247689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097988975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065189599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083690071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064559747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06614555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06532497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06463051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064939157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082795035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064532996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06530928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065114438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065319423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078456456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065597637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06433669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064236608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06682505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068637826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065683969 seconds)
  done (took 4.229325793 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0647275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067115309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074693466 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.075420192 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062460485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064595704 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06581255 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06241869 seconds)
  done (took 2.255009237 seconds)
done (took 28.105846299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075025805 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06397193 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066692692 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081845479 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068728706 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065635617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060820177 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069560675 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067166546 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066698681 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068268329 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062683353 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065353436 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060661561 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067603635 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062096571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068137331 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06650712 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.06688886 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068030999 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064251386 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06750251 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070334439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066978135 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066684451 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066776759 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.070803336 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067976179 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062739902 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064853981 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06450584 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072304095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068444499 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068376597 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062674167 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062310984 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066267039 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064304873 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068358952 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.070879848 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064420721 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.070762691 seconds)
  done (took 4.50213826 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080039359 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084951408 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077459767 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07723108 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095702062 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077627823 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081397392 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074258419 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073593272 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080573611 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068881222 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074119821 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074896303 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067785437 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073596128 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070337215 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075585198 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069427383 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074575376 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073735443 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081978642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068164503 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074206191 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075317276 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069400846 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075476259 seconds)
  done (took 3.697141017 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068662893 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082239056 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086080866 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144387754 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102894921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077569601 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077346528 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090971857 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094516147 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063715416 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068322688 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089492255 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090198644 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070682581 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1002098 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080797887 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074521245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065209411 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.06984399 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096014057 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085522158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08158827 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094536688 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082435708 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062995102 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072336246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069661446 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077535755 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070658463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075297542 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067147377 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066999599 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065133197 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076769858 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069287215 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063656281 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085722529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075015133 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080460556 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104109261 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07353947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065421532 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090956486 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123562325 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063776424 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065527515 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066831175 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074646745 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064754321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090747398 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08014819 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064513428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083134172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065871545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065669425 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077929003 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0646899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064635109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074276346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069199373 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081864891 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067427915 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08199238 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063424762 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073948079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064646649 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064817724 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06234445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096539335 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071618557 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111482468 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064731079 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061955476 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074317416 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073210746 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069629807 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062924077 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079885608 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074042062 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066611675 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074043393 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065799116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065995983 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096030733 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062020308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061245793 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061544738 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065249528 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065905461 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063505689 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075660848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062597367 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066182869 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077234158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062743983 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064075025 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065557996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064469932 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062572547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07315554 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066341053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064775782 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074801246 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064282759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066321227 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076803924 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071650472 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063047539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064291139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065784712 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064536077 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067375703 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066422356 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064894174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069041042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.06985752 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068418773 seconds)
  done (took 10.412700701 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152662511 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14336184 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065097005 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.138927158 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071616428 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067455012 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.139380804 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.081890672 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063669305 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065187908 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063312648 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.089425199 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085269867 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.096745328 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067676618 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064360955 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087245469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09499796 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141596664 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.136137988 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085560951 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070879728 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066102129 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06550318 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065449728 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072151549 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079715261 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071708901 seconds)
  done (took 4.257045853 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.070763171 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104316637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068065899 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086901112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081928921 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064999892 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065918354 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065490738 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07966821 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.070801687 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063480119 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067903161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066883028 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06622725 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06436865 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069915651 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069899288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062738793 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067429882 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068010926 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073461156 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087534335 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069220891 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063823599 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065933695 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064092701 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070614267 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07303601 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063401901 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091993678 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061066301 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068352123 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077129712 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064580618 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063460289 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064273395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063885267 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063324305 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064054279 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062019856 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061592972 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068259795 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062647059 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.069435475 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076786759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070543336 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06474563 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066021607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066399991 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060887756 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066510618 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066491213 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065983348 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071330334 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067460711 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065858256 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066580953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087393289 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069542391 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062762296 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062587905 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062211526 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065305126 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071231273 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079089501 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.064719595 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062119149 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063672637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068003019 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076669017 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062991141 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068120011 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060962863 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063473979 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065688959 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066207544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064623325 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062065848 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063388644 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063790671 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064175445 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063179441 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063105344 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066098711 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061363671 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062150906 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064091036 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06446395 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.069707157 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062370233 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066034114 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064380093 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062783743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066197554 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0689676 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066393841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077346042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.071768962 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064083 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061837302 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077196797 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065265112 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062796875 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069660208 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067760456 seconds)
  done (took 8.888021945 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085392328 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065288139 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082404938 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088842239 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073507407 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069174022 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076751127 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064270073 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.0793264 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063416598 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072634318 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062868251 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074991404 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.071216833 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065548203 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073083795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065710393 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082563738 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077220181 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062620096 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071632736 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075161682 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075430032 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079742026 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079012035 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080076697 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075193833 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066098399 seconds)
  done (took 3.831172319 seconds)
done (took 37.300263079 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.799565861 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.961722178 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.784945298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.996072057 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.874114361 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.929453325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.915282221 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.784993863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.961007201 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.819303899 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.106501316 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.186303925 seconds)
done (took 66.902892785 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.862974703 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.938557704 seconds)
    (2/2) benchmarking "String"...
    done (took 2.008516093 seconds)
  done (took 5.669869171 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.912848778 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.416510968 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.049473672 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.783816119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.790493005 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.212023536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.555878783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224031895 seconds)
  done (took 30.754963369 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.959960442 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.007130429 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.474627838 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.515250635 seconds)
  done (took 15.729661216 seconds)
done (took 63.746286182 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.790068564 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.784731193 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.793742652 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.81846748 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.794319373 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.789461238 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.786144681 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.78738409 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.81241852 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.924323006 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.785155619 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.789876531 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789485098 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.835045881 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.596719524 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.846917287 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.805365311 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.803325829 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.795130531 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.840829054 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.789645495 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.787186654 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.25411337 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.974698997 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.392101276 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.110194976 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.324219474 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191254783 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790669178 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.786250879 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.833599722 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.121542716 seconds)
  done (took 205.048129611 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.786757867 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.565781356 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.640043375 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.798012717 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.064123593 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.965830202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.889019265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.172224672 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.79261641 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.796435314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.962804464 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.789451108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.000578897 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.814521342 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.822445294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.868553887 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.927984277 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.005378621 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.827372422 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.936694353 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.794940594 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.79434578 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742150117 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.952721759 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.826448838 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.814668865 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.790860054 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800677413 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.972697852 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.900585665 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.813638 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.814698034 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955116637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.657429439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.810940916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.79059698 seconds)
  done (took 169.385216316 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.975300919 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.796118217 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.790319021 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.84627975 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.912085821 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.792621755 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.444050957 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.79968713 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.969104899 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.792373867 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.790455094 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.789096417 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.788504516 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.788428026 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.801110924 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.870976825 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.793098336 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.804134021 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.790287389 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.81393694 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.793107298 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.788198483 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.78911241 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.789013005 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.788873223 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788320843 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788929933 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.790205321 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.497371468 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.029364856 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.790359259 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.790358244 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.308890454 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.801437922 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.24397428 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.792818125 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.880961556 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.849802 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.899899357 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.788459119 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.007239241 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.870216314 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.790694865 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.789759422 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854408454 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.80379595 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.794410542 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.792933469 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.796200546 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.856918908 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.790456779 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.041745276 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.791354631 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.913446033 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.285975251 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.790128656 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.791670542 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.790024307 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.377897907 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.791710988 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.791947809 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.796731575 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.797823859 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791555805 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.79286144 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.177162739 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.862373446 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.792584002 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.268473727 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.453720619 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.792837013 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.4014707 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.865290893 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.791422145 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.791665857 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.79138283 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.79409613 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.791444051 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.794310484 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.913800207 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.801702169 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.9070376 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.873975023 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.915484025 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.797104367 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.804366353 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.627663297 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.86269972 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.831033485 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.613939976 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.793306641 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.164712442 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.564691998 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.792786932 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.792310257 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.805107316 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.792302609 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.796115378 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.792995942 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.871475988 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.793159502 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.915703439 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.537525583 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.319468072 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.793170956 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.793786153 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.802469722 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.875321194 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.916056748 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.797058175 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.859066864 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.799780826 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.796140475 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.910608907 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.795521804 seconds)
  done (took 403.790236793 seconds)
done (took 781.986183682 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.373537503 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.34438086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.432688899 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.359107064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.3360267 seconds)
  done (took 13.57897107 seconds)
done (took 15.309457635 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.80816255 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.801442643 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.852052116 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.877139186 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.811275747 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.813610933 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.875157827 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.814500552 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.844582703 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.848448374 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.878590704 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.878747049 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.818620908 seconds)
  done (took 25.654726897 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.803601918 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.933157738 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.009886656 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.100802279 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.804057886 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.016501114 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.863704012 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.929072542 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.937821257 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.019265425 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.041905767 seconds)
  done (took 23.194583844 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.805220293 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.940018304 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.017922635 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.841622188 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.806496019 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.025536882 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.867746961 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.932927863 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.940868527 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.025413905 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.035709913 seconds)
  done (took 22.982483112 seconds)
done (took 73.563548212 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.799935554 seconds)
  done (took 3.534195075 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.8170117 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946420804 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.800557945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.80026742 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.800551442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.801979218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.799936456 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.799867414 seconds)
  done (took 16.300422873 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.799947463 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.799580835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.799920927 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.799983253 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.799924024 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.798854081 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.799406532 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79993884 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.800150152 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.800593332 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.79946844 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.800039256 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.799478862 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.803108784 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.800476206 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.800414337 seconds)
  done (took 30.537573507 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.804053412 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.800645169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.800613697 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.799873671 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.799944276 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.800853813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.801214083 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.800442053 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.80090601 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.800028203 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.8008484 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.799872133 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.800723461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.799997447 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.801360067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.800826936 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.801946505 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.80108041 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.806154856 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.800712097 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.800814451 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.801813565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.800560771 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.801288249 seconds)
  done (took 44.963683996 seconds)
done (took 97.079593686 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.600374889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.60976802 seconds)
  done (took 9.946737273 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.802403386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.801711984 seconds)
  done (took 5.345117269 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.802765981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.802012694 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.802141778 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.80181927 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.803230808 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.802114518 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.803948198 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.802705794 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.802026481 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.802580925 seconds)
  done (took 19.762897004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.803089983 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.802418182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.803032769 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.802151737 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.802137835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.802123948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.801992513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.801992637 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.801580718 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.802719566 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.802328372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.802751984 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.803646951 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.802625301 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.803804219 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.802459233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.803121577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.803376094 seconds)
  done (took 34.185773272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.803852949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.802383948 seconds)
  done (took 5.344104419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.803017455 seconds)
    (2/7) benchmarking "second"...
    done (took 1.803314834 seconds)
    (3/7) benchmarking "month"...
    done (took 1.804567373 seconds)
    (4/7) benchmarking "year"...
    done (took 1.8031411 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.80252451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.803122047 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.802554676 seconds)
  done (took 14.360781929 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.804003234 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.952771683 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006123794 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.387364477 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.805229625 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805290414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.667930262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.806348118 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.808441529 seconds)
  done (took 19.782804624 seconds)
done (took 110.465965173 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.622102621 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.80479992 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.077126152 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.878001014 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.82657695 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.140994349 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.810635858 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.452374133 seconds)
done (took 42.353025768 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.847540522 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.802070443 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.845081146 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.846170331 seconds)
  done (took 22.23327437 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.803160049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.086835718 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.825813705 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.658232276 seconds)
  done (took 22.130901943 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182017292 seconds)
    (2/2) benchmarking "read"...
    done (took 2.151557106 seconds)
  done (took 6.078013967 seconds)
done (took 59.031954267 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805436684 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.806436851 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.805286736 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.805513001 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.803990072 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.805577888 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.804637134 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.80562226 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.805534208 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.806183427 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.805928321 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.804968485 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.805060872 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804865755 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805764511 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80622529 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807027148 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.805578931 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806049111 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.805850217 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805102457 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805566334 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.805680191 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.805641088 seconds)
  done (took 45.075486261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.806767232 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.806597411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.806233678 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.805611027 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.806952923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.806619297 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.806466096 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.806007799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.80595235 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.806252379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807040208 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.805849224 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.807725715 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.806971317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806883898 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.806689218 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.806686895 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806512126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806706357 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.807286168 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.806574644 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806566777 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.807352647 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807000068 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.807020883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807396778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.807642932 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.807770392 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80740351 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.808799105 seconds)
  done (took 55.948722216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.808065005 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.807725703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.808411764 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.808379015 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.808021007 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.808590783 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.808419878 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.808768886 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80884462 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.808702568 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.808673913 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.809350773 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.808433278 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.80901903 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.808559242 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.808993343 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.808809947 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.809479987 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.80854025 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.808989592 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.808710792 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.809677774 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.808644356 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.809326313 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.80929773 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.809628099 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.808167122 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.809686719 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.809459452 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.810051472 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.809989757 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.809210626 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.809310151 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.809231645 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80956479 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.809210421 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.810226906 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.809796533 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.809539301 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.809753753 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.810598973 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.810067797 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.809959981 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.810159729 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.810091833 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.810817406 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.810379091 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.81041267 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.811166555 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.810702967 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.810458761 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.810284452 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.811207266 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.812108725 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.811789881 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.811171942 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.81164426 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.812109797 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.811933889 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.811925139 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.811241087 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.812024908 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.8114775 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.810929525 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.812150445 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.811082053 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.811102747 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.811777559 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.812356182 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.81150419 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.81199836 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.811559567 seconds)
  done (took 132.066734903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.81272307 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811938885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.811659318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.811102807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812077637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81207814 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.812956621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812256956 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812658227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.812297065 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812910424 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81327029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812797088 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812792435 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813103111 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.812278294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.813251276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813225227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.812236873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81238287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812024034 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.8124917 seconds)
  done (took 41.623319962 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812909958 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81193666 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.813477299 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814068588 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813411387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813150411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.812496132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813972903 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813683391 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812980943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813555397 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81290155 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813139763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813740858 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813207345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814932382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813873226 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814450255 seconds)
  done (took 34.391038967 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.813928444 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.814816289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.813499017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.814945552 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.814900413 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.814659967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814926744 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.815254796 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.814307896 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.815095799 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.814652646 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814283003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.8151309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814075037 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815175484 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.814552635 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.814996865 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814935551 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815628398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814726223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.814862932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814721051 seconds)
  done (took 41.674856403 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814899907 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814893023 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815069349 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815932544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.81460656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.815301829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.815555212 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.815291016 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.815538838 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.81495794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815845123 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.816514037 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.815914394 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8157445 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.816042964 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815759624 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.81493734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.817874771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815707556 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.815907582 seconds)
  done (took 38.063406041 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816896309 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816950602 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816505753 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817418097 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817407765 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816555537 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817234311 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817126809 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817043128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817112123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818189899 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.817603573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818059643 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818031618 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818142327 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817824128 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818554497 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819398161 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817353942 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81899118 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818580261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818970461 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817603431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817911451 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818987626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818277906 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817556271 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818389285 seconds)
  done (took 52.651288203 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817128575 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81830301 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.818020318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.818159585 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.818282173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.818380879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.819040313 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.81784346 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817722886 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818772048 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.818641707 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.817822771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817919941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.818385118 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81859216 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.818786726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81841315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.818369786 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819242667 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81940773 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.818711061 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818363436 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.819283343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819075043 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819751849 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.819114944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819973953 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.819554345 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819431937 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819250713 seconds)
  done (took 56.314054952 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.839078598 seconds)
    (2/2) benchmarking "in"...
    done (took 1.841421777 seconds)
  done (took 5.434671195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.820170343 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819546835 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.819534009 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81921383 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.820203618 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.81966452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.819449644 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820415184 seconds)
  done (took 16.313450518 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.819226821 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.824391514 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.82048146 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.820754645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.82086439 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829243719 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.822665999 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.822804489 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.822807911 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.822700799 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.824747243 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.825004545 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.828071946 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.825926461 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.821001525 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.822332557 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822529032 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824174433 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.82316094 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.82177875 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825087084 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82173073 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.821871665 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.821169737 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.821762369 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.824153614 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.831950914 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.823546492 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824221593 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.821904454 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.829605617 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.822267392 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.822450306 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.823121271 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.8220747 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.822000725 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.830019604 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.823097941 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.822651736 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.822842232 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.824678541 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825347438 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.82749714 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.830670457 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.823254366 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.823099518 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.82377265 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.823323746 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.82425141 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.825791555 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.831145588 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824279193 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.823975673 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.82340592 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.826268028 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.823431266 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.823654304 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.825104278 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830244896 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.830886752 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.827143377 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.844352015 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.832568523 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.82430123 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.824391591 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833414922 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.846684733 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.825665053 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.826873942 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.824229021 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832887684 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.825468577 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.825136831 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.823612462 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837265136 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.831893552 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.824939383 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.824722748 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.824239034 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.824385163 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.826108239 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.825467526 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826424487 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.825082972 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834025285 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.847773875 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.825420831 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.825343397 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.827135581 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.826907068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.830058919 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.828188997 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.826390267 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.826094201 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.827484144 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.829561677 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.826443525 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.825774474 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.825889264 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836660149 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.826516339 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.826211642 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830086417 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.83347411 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.827904933 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.827366632 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828209955 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.826793822 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.835272876 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.827140162 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.825668679 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.827008545 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.828159525 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.831327519 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.826299696 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830226897 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.833752601 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.835058845 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.829759689 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.831827293 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.831232277 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.829568517 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836780793 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.849729446 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.828008763 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.830692054 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.831977874 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.837380254 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.830740851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.82759189 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.830391282 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.82722133 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.827545049 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.830155648 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.827669766 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.827735117 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.828919107 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.828587935 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.827557464 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827790155 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.83182616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.830126701 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.831014997 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.828746334 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.832995854 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.828985492 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.831997129 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.835560916 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.829781079 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.828962903 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.829490194 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.831518716 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.831629372 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.830464689 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.830036635 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.829575753 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.829927877 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.830718186 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.832049895 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.829528145 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.830056675 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.832146957 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.833028732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.829479025 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.830842683 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.830004337 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.83076 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.830049652 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830975273 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.830511697 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.833054625 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830194199 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.83446609 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.830106645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.829919211 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.830798595 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.829863302 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.831151425 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.833671748 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.841746854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.83409068 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.839634423 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.830117521 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.839451565 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.83081664 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.832281015 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.831431109 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.830545767 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.831388034 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.83064213 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.832427635 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.833784249 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852209606 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.84106045 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.834132039 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.833242362 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.837164347 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.834406233 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.837255005 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.831751858 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833247179 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.833817086 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.831505463 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.831721627 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.831655195 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.835103856 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.833388052 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.831871247 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.835626689 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.832734437 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.831224999 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.834055424 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.832582501 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.835493172 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833111552 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.832535473 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.834324808 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.831731087 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.840817325 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8355941 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.833889077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.832388519 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835444567 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.833019095 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.833291206 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.834666227 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.836506293 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.833633131 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.834315849 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842090288 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83454817 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.834086338 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.833671244 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.833203262 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.835315342 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.833515204 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.83639688 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.840846705 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.836770652 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.833274049 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.83846823 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.833440317 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.836900958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.834087524 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835531089 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.833953408 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.836747106 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.834497016 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.835358809 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.842288612 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.83488079 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.836428507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.834155393 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.837887192 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.836798995 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.836344677 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.835023604 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838748775 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.842635751 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.840514065 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.836178189 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.839301585 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.837779496 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.837583521 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.839697146 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.836468991 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849669336 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.844649085 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.835240013 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.835831677 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.835501259 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.838590247 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.83611943 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.835858844 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843117094 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.836266753 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.837825555 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839130188 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.836048602 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.836515209 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843003785 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837751166 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.839143737 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83803179 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.836309999 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.836315164 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.835485397 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83920461 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.83727623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.837707134 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.840966057 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.836078404 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.83762289 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.836775444 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.846493744 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.836445658 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.837164613 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.845430784 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837475629 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.838546657 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.838497958 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.836883742 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.838234578 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.837481546 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.837191186 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.839890712 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.837259516 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.839927114 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.847405538 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.84008283 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.847134452 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.839183157 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847679647 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.83770752 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.837717325 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.837713252 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.840722306 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.845496925 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.83821549 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.839346967 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.846842942 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.840040455 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.840511857 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.842438512 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.838537745 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.839102929 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.839155918 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.841274635 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.845365244 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.842026732 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.839425908 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.839172504 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.839129851 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.839658911 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842090255 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.841491478 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.840243537 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.840978185 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.840518643 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.838764338 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.839383718 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.838743068 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.838852089 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.839342413 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.840068144 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846885051 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.839949741 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.840656628 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843180482 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.839065768 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.848770324 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.840007905 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.839711438 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.841483467 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.840304283 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.843417958 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.8405282 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.840666588 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.841702538 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.839638389 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.842271642 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.852405452 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.848609866 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.844553388 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.842557818 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.840594661 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.841716202 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.85037573 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.863278242 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840772483 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.843406875 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844926978 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.848255196 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.843088498 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84684753 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845025163 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.850279803 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.843865338 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.841843309 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.844681202 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853824393 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841378895 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.842300513 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.841484905 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.845791238 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.84413676 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.841502636 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.844293732 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845309161 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.844558334 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.853693936 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.842703563 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.84546908 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843533653 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.841057642 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.841684522 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.841797619 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.843854155 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.844199331 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.842571402 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.842532955 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.8440991 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.846910757 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.843832884 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847216848 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.851897731 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843552698 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.842673985 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.845135476 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.843807842 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.845473528 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843253795 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.843500899 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.846755334 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.843251823 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.84483048 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84691209 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.851485809 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.844587469 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.844513235 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.844305256 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.847621036 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.845328172 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.844427692 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.845608687 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.853774074 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847700802 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.855660388 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.854091301 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.844611421 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.84599894 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852076263 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.852979726 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.84541621 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.844734788 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.844502062 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.848664519 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.846319114 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.846638099 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844880285 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.845814049 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.849784495 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.845370177 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.847152103 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.845326319 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.844944336 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.847990706 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.84702412 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.850941127 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.845099425 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.845332425 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.84547832 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.847106705 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.84650859 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.848008605 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845475691 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.845735983 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.848045974 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.847082074 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849426527 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.844758107 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.846063394 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.847689126 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.846341665 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.845970664 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.846532418 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.84742228 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.845743781 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.849166619 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.85426292 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.846249486 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.847986984 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.849268718 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.850512391 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.847158337 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.84623592 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84680089 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.846359763 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.855409552 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.847647985 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.847131887 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.848902519 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.848236018 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.852396603 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.849209004 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.853009258 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.848049493 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.849228281 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.846655563 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851289231 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.857468464 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.852126991 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.852103415 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85598985 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.852796462 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.851353284 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.848091644 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.848509395 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.849465936 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.850943859 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.852972694 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851156185 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.850995955 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.847936916 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.850010775 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.849861768 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.850656167 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.848031769 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.849042648 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.851253957 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.857599723 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.858817603 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.848884533 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.850541538 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.849921156 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.853426806 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.86091971 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.849737501 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.849540689 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.849636874 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85027404 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.851303612 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.856448452 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.858069166 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.853576773 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.850332141 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.854923676 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.867501478 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.851774481 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859397219 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879388484 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.852022008 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.850785223 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851363736 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.85249402 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.850492096 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.854411886 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.849624047 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.857123844 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.851057049 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.850317584 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.859147478 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.851089259 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.850143218 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.850373111 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.852698869 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.856631749 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.85153362 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.858568076 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.851628833 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.850598808 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.851293121 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.853749528 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.850755539 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.851542498 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.851126515 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.853372963 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.851287614 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.851254288 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861290203 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.852485275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.852515851 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865406334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.86319078 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.851973154 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.852169328 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.852364588 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.857672563 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.855239804 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.851368644 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855731451 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.859101623 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.854865795 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.859951908 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.853782947 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.853792253 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.853369975 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.852535237 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852250989 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.865940402 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.862579563 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.853503343 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.854705971 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.858718082 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.852652918 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.859349194 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.859611049 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85387638 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.855278677 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85384456 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.8537171 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.853668963 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.854026465 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.856427742 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.86150145 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.853925112 seconds)
  done (took 1098.226327573 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854426806 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854449861 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854305907 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853686101 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853427935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853962698 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854135115 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855115736 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854315206 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855606288 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.853775495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85452156 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853954373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854352071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854031239 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854073573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853466385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855093693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854463642 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854455805 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.854293113 seconds)
  done (took 40.728057285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.854436391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.854775671 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.854586826 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.854423777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854206734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.854217622 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854843827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855268094 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855734946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855848742 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.854832927 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854719914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.855651419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.855169427 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854313909 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.854179767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.855387459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855229775 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.85513957 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.855692466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856329868 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.855204028 seconds)
  done (took 42.598180015 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.856069729 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.855375949 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.856678104 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.856256445 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.856569161 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.85690048 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.856673123 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.858828248 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.856247213 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.857495939 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.863516509 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.863405066 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.855847981 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.861204067 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.856806037 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.85682376 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.002350267 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.855355763 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.857070253 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.856897955 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.857607996 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.864068671 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.857172104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.857196351 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.856949766 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.857491193 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.857900296 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.857229858 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.856910402 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.858773986 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.86140381 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.857203979 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.858235254 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.860365163 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.857601896 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.859542093 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.862297886 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.858640873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.858008071 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.857788833 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.866505443 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.880092586 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.857719325 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.858303792 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.867314709 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.858551056 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.859019093 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.862170563 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.866672609 seconds)
  done (took 93.036695456 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.858621549 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.85821983 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860114418 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858780559 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.858654006 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.859139454 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.858097071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859404027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.858934313 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.860357587 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860098543 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.858212467 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859442453 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.860620887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.859217532 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859153352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.858366453 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859593563 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.859752117 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.859536531 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.859079906 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.859892796 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860760828 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.859919123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.859558932 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.860009954 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859894606 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.859889691 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.859377332 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.859487733 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.859727641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.859816954 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.859787981 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.860208926 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.859707652 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.859915245 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.859948904 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.860494951 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859945807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.860110867 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.860183999 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.860544931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.860777139 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.860614559 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.86057788 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.860808847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.86025548 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.860166067 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.861385423 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.860151734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.861376946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.861293326 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860152899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.861175906 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860639671 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861004902 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.862287253 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.860667354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861543541 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.862110534 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.862122875 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.861046762 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.862401482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862634059 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863783336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.86244695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.863099221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.863161165 seconds)
  done (took 128.29564049 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86270246 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.863314814 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863221147 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862309483 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862953612 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.862716624 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.862897057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.863247208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862855483 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.862544777 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.86274312 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.862565481 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.863126837 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.862746928 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.863801095 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.863941611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.86212718 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.863601264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.864410612 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863535364 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.863860058 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.863132683 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.862869362 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.862773857 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86320565 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.864383562 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864883793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863437816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863747288 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864048904 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.863944808 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.864250339 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864290768 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.864272683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.863516334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.864115618 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864567981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864131604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.864623477 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.864522179 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.864056869 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864215963 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863966165 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.86529011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865551145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.864701625 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865363112 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.86522692 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.864075438 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865059306 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86430379 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864612405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865600152 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864645591 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866084904 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.865941097 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866452213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865030398 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866508041 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86578585 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866511701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.865814036 seconds)
  done (took 117.373230862 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865660481 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865970078 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.866568474 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.866189576 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864775352 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865668324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865706051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.866667748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.865778848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865623263 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865517698 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86552262 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866490063 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866093897 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866433658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867406984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867268031 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866104649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866082547 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865774012 seconds)
  done (took 39.121683995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.866393749 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865298469 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.866242999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866553579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.867137318 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.866587364 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.867137006 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86717452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867100469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866808503 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866806656 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866834641 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867203617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867115192 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.866382667 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.866506812 seconds)
  done (took 31.667040108 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.868078016 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.86784714 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.868273016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.868434595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.867158974 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.868375904 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.868726563 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.867417735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868340863 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867794495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868236894 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867809858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.86753087 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.868812777 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.868515504 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.86696783 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.867934049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.867616613 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.867566781 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.868911208 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.868221887 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.867603249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.867267146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867960706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867943808 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.868114785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.868796291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.869195001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867972114 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.868656059 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.867944481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.868419449 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.869341013 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.868546548 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.86941726 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.869541632 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.868844636 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.86930357 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.868848351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.8685686 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.868984278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.869055892 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.869922504 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.868966855 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.868945557 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.869958684 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.869552868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.869993095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.870228643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.869952117 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.869959504 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.871038995 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.870195099 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.86950312 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.869601518 seconds)
  done (took 104.57976175 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869616752 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868834941 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.870478123 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.870090538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.870572444 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.870037696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.869575599 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87045844 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.870412904 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.870851255 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.871218708 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870312222 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870243401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.870646974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.871047561 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87023129 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.870663404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.871550939 seconds)
  done (took 35.469909369 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.871259047 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.87160291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.870451714 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.870646103 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.870921255 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871547595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871711 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.872029256 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871400862 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.871613282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871960541 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.871811614 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871903339 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.872104623 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872211211 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872834388 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.872400151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870869312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.87136678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8715126 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871617414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872060966 seconds)
  done (took 42.980881436 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.872258816 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.87226566 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.88621103 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893060524 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.89259331 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.907905212 seconds)
  done (took 13.129740874 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872922877 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872613182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.872890843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873251499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873638348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874106204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873695247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873370938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873452292 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874135642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874376113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873702081 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873951122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874412776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878083504 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874038843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873739053 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874297895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875360499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874621957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874286297 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874561877 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874325569 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874916595 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873845468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874791394 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874426696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87466181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874460326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874887259 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874381311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875531043 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874049797 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875009089 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875108802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874304253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87506991 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875548295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875736 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875389421 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.874526772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875158213 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87525875 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875071141 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875124218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875280596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875275225 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874865114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876089999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876080573 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876314983 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876622263 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875409452 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87568456 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877881911 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876187934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876795093 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87618053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876568401 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877766285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876668386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877067678 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877024835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877483734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877053246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877103958 seconds)
  done (took 125.564389955 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876629288 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877081364 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876391501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876342186 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877200601 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877240667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877154704 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876538858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876787697 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876504384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876196287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876742059 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877626431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877068788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87781931 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877062153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876814804 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877330216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876547433 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877916046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877983958 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877220617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87822341 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877670861 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878003946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87856351 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878707098 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878071116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878568215 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877429665 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877715589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878305324 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878353526 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.878239934 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878710175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878410294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877819914 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877511157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878679913 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877912664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878881282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878661256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879390622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878028651 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881264993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879200831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879228793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879821118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878990722 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880276204 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8821535 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880037975 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880112191 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880402003 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879525247 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879044785 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880157 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880085978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879859718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880717093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879894067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880798315 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87971836 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880328679 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879257614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880816874 seconds)
  done (took 125.790252426 seconds)
done (took 2559.868463884 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.918661932 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.962033548 seconds)
  done (took 15.693185994 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.044981329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.999847165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.884649072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.933550599 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.884164648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.907799408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.911728609 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.885462813 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.88426374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.884769585 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.88446849 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.069386331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.93832247 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.885148794 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.885541015 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.97767827 seconds)
  done (took 52.692539413 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.889722716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.888274811 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.899533274 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.889172399 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.890879541 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.902484575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.917675909 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.893285005 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.926096414 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.902138854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.959289084 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.901226406 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.889535947 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.941579323 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.902909503 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.904411169 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.984640617 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.967200792 seconds)
  done (took 36.265058485 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.970128291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.898327822 seconds)
  done (took 10.689244656 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.9158902 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.906912314 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.881431658 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.903979564 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.910993636 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.884923247 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.887368922 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.915888116 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.90514549 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.8847157 seconds)
  done (took 70.829855209 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.892121183 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.890740493 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.890697572 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.887029467 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.884450718 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.890714762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.886906908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.888307563 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.589645893 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.92814304 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.898711917 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.897072992 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.888518722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.89028537 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.884677296 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.913155508 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.003351489 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.883704172 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.884265063 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.894180516 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.888804369 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.944056148 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.902381396 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88827348 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.921793787 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.579184676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.902188877 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.893372607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.997298097 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.885158747 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888410577 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.100973617 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.895336455 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.340101661 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.214686996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.897850959 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.901634201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.895901682 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.885312 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.001351134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.890657426 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.896113837 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.79229801 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.192416727 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.990146215 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.935524952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.237878953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.894204246 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88946647 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.923831079 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.892396936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.88996884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.907021855 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.402371416 seconds)
  done (took 134.043962028 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.888126181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.236808513 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051300768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884924946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170068939 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0914291 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.888228082 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931668464 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.889271961 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115865227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.138428298 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.989924014 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.88772795 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.88509446 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885568898 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.88509707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02902526 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.956178031 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889815003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.886046381 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913161927 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125230958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.007007168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.889744017 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.914280795 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092932655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.007434726 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.989706575 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.611785185 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.886539542 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947717157 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.889338992 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.886899805 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.886951075 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041532038 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981104827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969648412 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.890230506 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887258208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.887851919 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.543483002 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085686903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.982134845 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.012786843 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140297173 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091530401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.666016001 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.887230097 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.620637722 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049825456 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.114208891 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.120179636 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006481265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.890676485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.141165406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.887418699 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.887145719 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.132833144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138373156 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.985630321 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891709941 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.889822125 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889305352 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124413924 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.892023075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.983964401 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893310155 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.89052753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.984462141 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9870779 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.135362296 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100307104 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.918447973 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.225236367 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.392486467 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134314996 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.953728031 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13809106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.89208162 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889383882 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972434664 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.730697246 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141049913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129350466 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.133718128 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924219893 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.608481475 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.889633206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.113847419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.110292197 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.139623094 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.137085471 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.127187253 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.218341387 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.890501451 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.890386238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.133948257 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008561854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.892208352 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230673264 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119794408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.442278378 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.917719245 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195347142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018993464 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.894196401 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.51487736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.890208068 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112543598 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.929619013 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.892771253 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.891156663 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.109377821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.865908874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.89102315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.53919861 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.951886797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.896465523 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122427151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.895375901 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151376632 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893820731 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119303753 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.322450422 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.920599992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.063418326 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138153673 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.895073622 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133613914 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129411991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006589025 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111477019 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.595960872 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.893323503 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177316795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.895398227 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.891735852 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061310124 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.893354337 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.060193541 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.89685279 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173730687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913879603 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121139066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897729402 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.147992775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925061336 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942261812 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896169213 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017944198 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.896451114 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716325167 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.048119636 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895239174 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.894846089 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.443224488 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.89289249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041651056 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.116178275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914719644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.964134896 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.559393246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.893234053 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973186884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916499451 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.287679542 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.895185301 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.145648105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.897734724 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.894503575 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.894700005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126328802 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076642767 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.898195724 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893382068 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.789280519 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.894422988 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893570692 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.074607861 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.831408599 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894767347 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094224859 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897886804 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021310046 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897971674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.965154444 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.226962108 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895771831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.895070131 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.895277921 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.895867678 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897176884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101864591 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.920159002 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.411246995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.031015326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161859759 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.205209467 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.134892606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.938568277 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.89942814 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.148886882 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901014873 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.957428856 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.899164784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914923065 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125211742 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.900092417 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.102867946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.166060161 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.744884987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9435123 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.898972465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897761841 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.897561084 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041762854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979497175 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899617483 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.89778788 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010627628 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01703784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.105402312 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.899684901 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.980878305 seconds)
  done (took 907.78357425 seconds)
done (took 1229.811679128 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.898157262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.897279042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.901971596 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.899694852 seconds)
  done (took 29.427277011 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.899550656 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.898714879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.899506495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.898502806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.898584538 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.898688757 seconds)
  done (took 13.22411365 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.119992764 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.898441865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.900441079 seconds)
  done (took 21.749397895 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.976411263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.318202743 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.041671952 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334659161 seconds)
  done (took 10.502138568 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.899784408 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.899359296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900003145 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.900767232 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.900585582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.903440046 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.899527946 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.900419175 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.901741986 seconds)
  done (took 18.93746799 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.910876167 seconds)
done (took 99.581602894 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.027907688 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.976348928 seconds)
    (3/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.984913764 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.963711085 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.031483852 seconds)
    (6/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.361689501 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.380888526 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.905831806 seconds)
    (9/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.950012902 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.782580091 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.642125862 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.817127147 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.113492635 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.915014351 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.194683064 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.053616216 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.901087502 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.193938336 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.980639628 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.050854519 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.929894952 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.217135145 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.033317995 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.754304969 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.90718117 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.023379946 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.986815298 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.964783772 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.918178542 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.902022508 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.041147113 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.986565788 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.334155975 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.999759052 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.034916064 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.045631563 seconds)
    (37/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.535741607 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.901485429 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.957596076 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.995045178 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.056194879 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.088100949 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.90950926 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.51970698 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.906125617 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.325363045 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.118435328 seconds)
    (48/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.926908776 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00072017 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.907971607 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.937599685 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.276838326 seconds)
    (53/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.034923059 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 6.902148278 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.236062957 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.532731463 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.907424421 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.204802541 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.020329852 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.155026657 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.001408191 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 5.615338647 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.671396654 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.868022249 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.066614154 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.923799987 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.902224186 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.213120811 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.989018328 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.235497504 seconds)
    (71/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.705493538 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.795668755 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.317786042 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.165644583 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009102605 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.283923987 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.226320061 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.924543953 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.288884136 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.038422866 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.831872057 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.56841001 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.226371616 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.013051754 seconds)
    (85/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.299596939 seconds)
    (86/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.783300944 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.665528518 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286997232 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.906956938 seconds)
    (90/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.382916207 seconds)
    (91/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.657160464 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.906371997 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.308794703 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.015502054 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.225640577 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29733039 seconds)
    (97/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.984818836 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.902974667 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 4.121938897 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.004751526 seconds)
    (101/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.225951565 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.243320995 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.051530797 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.93189643 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.550657547 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.073268469 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.086733938 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.015372332 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.926476562 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.727357065 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.066470558 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.12912097 seconds)
    (113/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.425506185 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.51161325 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.582748418 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.27227383 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.208610241 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.217064428 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.096442105 seconds)
    (120/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.170218194 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.969130058 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.167072814 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.90797496 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.301947486 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.232554359 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.92787941 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.906095456 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.909217582 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.913295955 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.204555151 seconds)
    (131/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.060508908 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.827309419 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.999111305 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.234774789 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.251168732 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.940226586 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.559194171 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.91946534 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.167122005 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.915512214 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.161772976 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.306499937 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.910751973 seconds)
    (144/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.930640969 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.007390232 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.705959482 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.012653176 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.869300608 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.996300985 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.93851471 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.174717787 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.876215761 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.909242099 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.546822398 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.455069737 seconds)
    (156/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.805789324 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.230726218 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.252186282 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.927215337 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.298893747 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.33655951 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.407694658 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.040574127 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.139087841 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.913397432 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928101167 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221080941 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.216670236 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.91656779 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.320973354 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.044399584 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017060454 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.938549866 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986401182 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.621565894 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.918764285 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.371473287 seconds)
    (178/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.073679989 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.804335434 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.917684627 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.257838256 seconds)
    (182/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.137858374 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.911047285 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.681537841 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.910013993 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.928079113 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.103819603 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.175327 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.098954819 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.915400123 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.810361605 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.991559789 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.021507445 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.133628151 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345661202 seconds)
    (196/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.91985246 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.93313289 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.910256919 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.948402204 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.68727287 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.709795017 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.986838375 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.141113988 seconds)
    (204/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.076959005 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.93446576 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.910825849 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.549921924 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.008700868 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.227649553 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.080042469 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.915577192 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.048796428 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.731927202 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.224221984 seconds)
    (215/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.425865868 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.914535869 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 5.583860074 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.022168053 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.115361796 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937023231 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.915114757 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.927513243 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.912051411 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 3.987142021 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.038075446 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.691372857 seconds)
    (227/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.508316019 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.256074167 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.916509553 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.666833143 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.025271508 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.014391021 seconds)
    (233/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.94176761 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.992170334 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.913157633 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.078698597 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.19690624 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.169600142 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.055892805 seconds)
    (240/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248649044 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.925376305 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.993821248 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.071791348 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57479399 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.028162319 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.116561635 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.915375603 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.717614417 seconds)
    (249/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.949975002 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.208211383 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.230483355 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.333568327 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.014147974 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.937470837 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.084295953 seconds)
    (256/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.921675612 seconds)
    (257/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.42408128 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.197063676 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.257446747 seconds)
    (260/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.105852557 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.216981762 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.13292436 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.852629766 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035696087 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.921289621 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.922243116 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.041093446 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.175512146 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.936748017 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.915981374 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.243820262 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.605777066 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.201338904 seconds)
    (274/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.632793312 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.188965359 seconds)
    (276/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.369160797 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.931529836 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.47225758 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184673708 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.982446122 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.886083419 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.046995174 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.736604603 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.344837568 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.954755207 seconds)
    (286/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.321762461 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.715195141 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.031335022 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.972620255 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.919473731 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.949431499 seconds)
    (292/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.919580944 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.830276369 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.01087941 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.105388716 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.024550732 seconds)
    (297/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.61053796 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.233663855 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.041069089 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.187152183 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.169089744 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.097368162 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132549703 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.066447562 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.946482723 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.997012021 seconds)
    (307/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.119858065 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997302259 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048457029 seconds)
  done (took 1025.804437781 seconds)
done (took 1027.699260936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.944319376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938866572 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.920580988 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.94249183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.034410467 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.966298056 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.934395346 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.925237567 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.971583181 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.972090116 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.921490698 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.962257287 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.922608356 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.923256309 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.921718807 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.939690528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.2325973 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.954695855 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.942145463 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.934579697 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.940578479 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.921850736 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.973510646 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.964018382 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.928017767 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.927705748 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.926185024 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.941966778 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.035203844 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.925453058 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.928137913 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.935744322 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.233461536 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.951743785 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.92114352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.94394191 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.9364474 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.935428205 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.927826309 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.956869524 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.38466325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.929857621 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.924648331 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.924330748 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.924447412 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.93025938 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.924777547 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.932855913 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939482221 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940408886 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377634143 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.947465929 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.927580233 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.924316325 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.937671728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.925369313 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.9282413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.941014473 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.945168427 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942089438 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.225517846 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96317568 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.928935302 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.943909568 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.9349674 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.412803971 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.930938886 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.931673893 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.384113974 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.940587751 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.413592391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.942856218 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.92822155 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.941497448 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.959876033 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.233926103 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.954420443 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.924256753 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.935705079 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.923766682 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.938177903 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940838451 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.931399197 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.928200568 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942264559 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.970017735 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.938958515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.926292918 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.938105546 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.945929976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.935086106 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.939049177 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.930583957 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.924900371 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.939737589 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.931092414 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.929806676 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.930673482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.931313558 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.940837734 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.382361355 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.951950603 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.924510851 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.924882664 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.926785819 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.941946629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.383055259 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.934960957 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.950907278 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.977348519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.929428151 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.227003743 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.960747234 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945804888 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.93985439 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.930494387 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.926034528 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225694624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.411293213 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.953262414 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.928945564 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.926356755 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946598691 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.930773587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.92703141 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238058574 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.961328439 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944976829 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.052362769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94238237 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.961488503 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.927543858 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.932954959 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.974229266 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.946759106 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.962214974 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.931963847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945954047 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.946946972 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.926995726 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.94221875 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.943320774 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.929731735 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.938833901 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.927007095 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.97502922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945228784 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94475861 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.951876266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.053308277 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.92747672 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.228618489 seconds)
done (took 302.972451029 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.004757479 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.927987686 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.018564299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.928962295 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.016202441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.001105469 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.928930815 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.930111561 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.928566706 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.426335772 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.92899164 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.934116005 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.92821814 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.929152389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.997374427 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.929339415 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.929603261 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.210302271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.930563658 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.007277199 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.929477056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.929793455 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.929836766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.429554912 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.927465702 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.929795902 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.009314256 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.929947803 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.22506169 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.929924604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.929631044 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216029322 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.009380248 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.942673416 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.937289975 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.936513546 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.017625162 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.938533074 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.995821833 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.996207683 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.02106583 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.96346117 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.930078904 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.929070323 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.934675728 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.931114434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.930766474 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.962563679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.931333273 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.935500643 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211347491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.938550689 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.934988312 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.930761466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.931225371 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.943755531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.931429516 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.931769112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.010236224 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.931780283 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.997012459 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.432688101 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.428761759 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.931588607 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.931786015 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.932026813 seconds)
  done (took 188.607074676 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.996052498 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.008037859 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.996560742 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.937537182 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.980052706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.999853595 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.937512903 seconds)
  done (took 15.716613615 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.937992183 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931486251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.982863808 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.982674924 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.932469306 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.109829556 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.94439453 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.936674514 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.959543316 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932501181 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.567795892 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.984140317 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.936481457 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.933284243 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.944434752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.990775012 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.934955842 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932921792 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.042312263 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.081751347 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937597177 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.939653647 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.958860896 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.944357767 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.932676 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.93264459 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.934275882 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.940429695 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933505982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.932779266 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.933098154 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.985748396 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.93312758 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.93231892 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933277248 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.933573009 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.933115684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.934023901 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.933527313 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.931653147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.933334662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.933263083 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.934695156 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.934132947 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.933098571 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.957454752 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.933316291 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.932257413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.933960513 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.934570858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.961400492 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.934664049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.934215418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.939486288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.978142729 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.939553754 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.93538046 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.934404559 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.935046802 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.934293577 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.934688923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.083633331 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.985948309 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.934221965 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.986324412 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.087181656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.934995575 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.934966513 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.935006904 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.027958343 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.934940107 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.987266369 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.935216767 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.05188916 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.935233705 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.114434121 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.958101183 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.939101472 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.939588713 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.934476481 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.943548293 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.935527945 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.937944841 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.942376767 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940340273 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.935807169 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.935833823 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.937608725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.944211112 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.937301566 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.986087542 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.936240908 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.936652602 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.076584402 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.937282033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.046832864 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.964292911 seconds)
  done (took 212.272465809 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.944328386 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.943786203 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.938900652 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.951993965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.93832751 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.938096145 seconds)
  done (took 13.521549033 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.939619406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.943018627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.938367486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.937148891 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.938200928 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.938546378 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.938848114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939658955 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.942872424 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.937605113 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.938116191 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.938086783 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.93810543 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.937753129 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.937598757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.937632643 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.937903574 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.938312316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.937553021 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939403913 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.072389875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.937848311 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93869519 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.944449619 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.94313807 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.938425419 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949919895 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.938513891 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.939551875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.946148053 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.943267404 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.939121379 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.944234906 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.945134077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.943939747 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.945367841 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943026484 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.939979813 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.938593258 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.940218608 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.940114935 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.940279384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.940013501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.940854809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.942282245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.949828632 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.944595227 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.951814273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.939758182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.940687446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.940470789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.940855241 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.940973711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.940859549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.947191841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.947872489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.94530646 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.940304186 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.941073633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.945975373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.9449918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.941892653 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943346436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.945346848 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.948106892 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.940723591 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.947666182 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945636333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.9413856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.940414826 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.941352829 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.940731759 seconds)
  done (took 142.799208445 seconds)
done (took 574.795173442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.146459058 seconds)
  done (took 9.017389288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.960318305 seconds)
  done (took 8.834475873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.873177943 seconds)
  done (took 10.744843109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.946148159 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.968216369 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.96733156 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.948884947 seconds)
  done (took 29.712601104 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.163698253 seconds)
  done (took 9.03388628 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.953655959 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.940605373 seconds)
  done (took 15.831217363 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.981295987 seconds)
  done (took 8.85280261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.337633297 seconds)
  done (took 9.226595086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.949715291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.944182116 seconds)
  done (took 15.785705869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.944291968 seconds)
  done (took 8.814858298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.67807954 seconds)
  done (took 9.629226705 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.945469009 seconds)
  done (took 8.834879752 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.010343091 seconds)
  done (took 8.881650531 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.023239333 seconds)
  done (took 8.894380159 seconds)
done (took 163.966611472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.950692403 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.946009403 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.944727731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.943496833 seconds)
  done (took 29.656338635 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.976678305 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.977175234 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.985622019 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.976302392 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.968492829 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.967721595 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.97834458 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.977789633 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.96843683 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.975497185 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.978310889 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.994127531 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.977488597 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.987260968 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.987087941 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.975483678 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.977909209 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.979417741 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.969264478 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.987211776 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.975641858 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.977748996 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.944149694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.944643085 seconds)
  done (took 49.281529017 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.130138953 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.009817827 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.098292891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.990224164 seconds)
  done (took 10.101517264 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.944517595 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.008796711 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.996029746 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.990983591 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.029424074 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.04804424 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.996812888 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.152425346 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.059573767 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.069689737 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.951048139 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.965241372 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.965983795 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.991925944 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.04655646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.945279226 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.944115227 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.061134792 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.005783441 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.160756496 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.945214396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.999162857 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.030574845 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.997833968 seconds)
  done (took 50.181642935 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.946287251 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.953962605 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.953322707 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.946262372 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.946666917 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.948019603 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.952236115 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.948285159 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.968845018 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.948365583 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.946220635 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.947062735 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.953053813 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.947406349 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.946622457 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.960556665 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.961173999 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.947769315 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.952351882 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.953875084 seconds)
  done (took 40.903977715 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.94500047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.792239455 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.291252591 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.19783131 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.94571464 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.945255486 seconds)
  done (took 31.99281093 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.960058249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.954729231 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.946217951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.006179289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.087111458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.954868084 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.947351788 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.959545075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.996457244 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016029202 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.968904424 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.976974009 seconds)
  done (took 25.651315749 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.948172425 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.948077074 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.947421727 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.960035409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.958396469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.95626327 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.955524972 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.945611339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.960339848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.966205644 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.955400711 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.959272003 seconds)
  done (took 45.341017581 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.16183775 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.173184256 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.16765673 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.539431149 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.946421302 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.847896342 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.605369449 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.634115375 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.235767251 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.920142562 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.909938389 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.828738178 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.18845117 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949042108 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.2065988 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.868868987 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.948145986 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218231303 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.94988429 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948343575 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237905529 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.997733379 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.162081151 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994888515 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.16218342 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.406813107 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.19989175 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.210562859 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278548431 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.998414097 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.153763281 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.000443976 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.956499927 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.959159286 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.950442957 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.961053571 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21892745 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950383389 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.962293671 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.953984975 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.875117315 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.29489324 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057526227 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.36213249 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081031871 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.190157215 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.954128467 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.133536117 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.014468515 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.207744579 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.046782309 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.162741399 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8754584 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.350862278 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068713105 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.951612349 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954020778 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.651155205 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.189194263 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.030931006 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.290923019 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.057816118 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953737114 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.042356824 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.950880737 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.064897444 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.142417307 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956853328 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.950909908 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.959326998 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048316323 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.164639529 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.951735127 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95259551 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.967128809 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.954133489 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.301149152 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.511475292 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.945439987 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.509399892 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.415282777 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.925484836 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.413137403 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.000932059 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.234096637 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.163794004 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.031612167 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.195823665 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.816421862 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.956928028 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.759506455 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.03651333 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016857298 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952429339 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.136206775 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.254824341 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.062058933 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.95179835 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.878745634 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.963378656 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.155117475 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.421815362 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.013604475 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.951997175 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.953881974 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.955823657 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.953876343 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969592472 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.966668088 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.871109731 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.232438954 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050931167 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.209206031 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.939004452 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.636931856 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.222144471 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.074615642 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.54761195 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.081937068 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.954493369 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100767091 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.962411367 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.956452471 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.144329509 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.363350556 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.141337234 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.201021336 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.992755746 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.979594144 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.959713685 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.037353954 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.180670835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.954265255 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.203405374 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.196331644 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.612955824 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.986241246 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.027720276 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963431517 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.168698038 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.036735109 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.479595418 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.169807575 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.525801238 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.950028488 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.455873566 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.216505246 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.333736456 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.970955204 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.143351039 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.993330985 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.656485842 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.881075117 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.960720003 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.291483936 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.995289441 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041660255 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.958029193 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.956285982 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.964487142 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.037008928 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.026306752 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.030697221 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883051769 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.964738139 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961351865 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.959622561 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.504404014 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.672642896 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.246924682 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.959841809 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.033562474 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.961632106 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.566483387 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.964097268 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.081160034 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.973895314 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.701428329 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.986443461 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.266369732 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.355531875 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.076102283 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.961480984 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.969068138 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.661752788 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.970520953 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.660978513 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.239615764 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.954994339 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.41418436 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.017965564 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.042074223 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.976473527 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.962853291 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.964181523 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.964600708 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.164365328 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.478603999 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.288477079 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.305055794 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.047069141 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.234601584 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.147758486 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.426793279 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.643066076 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461750562 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.188814764 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.963184355 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964604714 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.609433328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971955099 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.179484021 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.165965349 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.237287727 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.253784434 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.371479981 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.968665556 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.979306133 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.205664822 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.96274279 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.392587321 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.004347894 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.314850679 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.768375003 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.226220548 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.023021494 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.975596768 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.600546149 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081522086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.918936763 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.091638766 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.889855225 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.631196008 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257618644 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.237904985 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.93942733 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.295765611 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.253373785 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.217663367 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.590090837 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.964907582 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.016335199 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.045729158 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.966490144 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.492161023 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01282662 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013114905 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.969902546 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964611801 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.967141675 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.642805951 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043963745 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.096893981 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.696399131 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.463569623 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.882551458 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.232473043 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.015845476 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.41120235 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.007009577 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.179376204 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.971459176 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.545986542 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.021582364 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.247350627 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921747946 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.179719268 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172316821 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.99151846 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.972889852 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892734012 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.844734629 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.969826143 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.161666008 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.85558961 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.969903851 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.262831119 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.588390184 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008673811 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969197733 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.28785585 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.373907471 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.139187281 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975139035 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.180771419 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.086887093 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.885672857 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.462294691 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.552824979 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.668364963 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.978775538 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.171116484 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.300725305 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.260217066 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.011135554 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.038095623 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.235157562 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.941994683 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.967984017 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.489175487 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.066140247 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209465271 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.280804989 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.468429147 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.417916515 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.206079355 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.96630124 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184899696 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.334621278 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.210969686 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.972106504 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.060277044 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.182951673 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250385288 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.840625103 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.678660171 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.210776867 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.974280919 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896249324 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.178725611 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.466967003 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.325676337 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.510132189 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.166762663 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.002927205 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.46431951 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.986687309 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.909271222 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.972016951 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.923080861 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.184084061 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.16932748 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.014814168 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.527240601 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.283688504 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.366229373 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.219922512 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.014814862 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.896627349 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.631974804 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.917762525 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.012826951 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009175778 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042769675 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.973738579 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.173125064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.409231978 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017704735 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.526145572 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172592142 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271417132 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.238611729 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2687145 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.926086349 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244214746 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.919914169 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.598045411 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.064388776 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064034522 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973469333 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975463632 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243585139 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.304680674 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.556877655 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.012556063 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.299283829 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.065497044 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974139561 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.977995257 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.450873901 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.212254902 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.186508049 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050278345 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.171077183 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.045543477 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.48666283 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.977647014 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.976369672 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.109544445 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.974094869 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.659304255 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.268481206 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.711393705 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.176236511 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.493352808 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.869069917 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.17651477 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.024569064 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.9746119 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.978850735 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.9815719 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.214260425 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.242814419 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.730371243 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.979291483 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.974771061 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.856492626 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.648094645 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.209077014 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.986120122 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.021890695 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.97715534 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.092550883 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.981900599 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.237156597 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.022798925 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.974513121 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.976453582 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.189352071 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.490611737 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991739347 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.674456108 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.178052239 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.983478188 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469548563 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.436028832 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.237813625 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.022503441 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.173688951 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.225328563 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.505355194 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.179642374 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.977475414 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.202459192 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.977472433 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246970757 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250401528 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.976623686 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.191527688 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.444270331 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272074412 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.987350453 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.859638517 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.980125894 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.240413234 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.02560535 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.976824018 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.984362661 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.517776771 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.648127282 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.445708571 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.123140587 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.304764628 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.749969837 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.732144786 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.979040025 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.980321947 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.707746873 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.710674034 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.190829636 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.265568895 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.920241679 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.180710696 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.682567705 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.977043444 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.246370714 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.903956799 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.980348136 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.599289403 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.256838691 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91574197 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983069502 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.538821838 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.977647024 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.062731456 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.9794828 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105441079 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.241605222 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.351396641 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.086147959 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.618419819 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.630314502 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.918527238 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022677795 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.786311478 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.540212491 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.639836732 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000412229 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994790786 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.904760433 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.982141928 seconds)
  done (took 1683.667264515 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.001510761 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.045847726 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.025296902 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.014545776 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.095170076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.112508026 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.016821414 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.034549935 seconds)
  done (took 58.253440694 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.979150196 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.994666196 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.983313231 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.979515087 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.001220956 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.988478184 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.14062929 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.991331064 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.983289941 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.985439525 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.980957756 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.982363757 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.260442426 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.00150043 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.980638955 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.995506027 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.982951933 seconds)
  done (took 76.125855602 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.982645604 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.145535111 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.035740644 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.98143675 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.471322894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.983767536 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.918897257 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.006972295 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.039647501 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.221894392 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.278543386 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.011175743 seconds)
  done (took 90.987044768 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.986379597 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.981618347 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.981549208 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.98139235 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.982346945 seconds)
  done (took 11.827432195 seconds)
done (took 2205.906786864 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.23259314 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.040699355 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.082785792 seconds)
  done (took 6.032893373 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.128049413 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.174898245 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.286969588 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.048406936 seconds)
  done (took 10.554321377 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.244327587 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.346786971 seconds)
  done (took 6.501213041 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.348113446 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.99299005 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.348779458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.984948352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.986137602 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.985981946 seconds)
  done (took 22.870759161 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.982555504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.983398806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.982999411 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.983067576 seconds)
  done (took 9.842298316 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.982024519 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.750631235 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.985005408 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.997197346 seconds)
  done (took 21.625737974 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.124638136 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.094637982 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12061637 seconds)
  done (took 8.24978399 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.130715664 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.189868904 seconds)
  done (took 7.230437674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12699449 seconds)
  done (took 4.037408962 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010661385 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.252945047 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.484872254 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.533663475 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.614104001 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.76950429 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.310634923 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.230862299 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.403345326 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.436816021 seconds)
  done (took 25.958179155 seconds)
done (took 138.736290313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.338581296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.007523024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.195731781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.349717763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.223623055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.194120967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.179293414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.341038909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.027782353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.013891779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.350467908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.221728485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.146294955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.011787855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.148276391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.013209021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.219310595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.364247695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.034504154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.254300396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.205747848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.000386569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.195269291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.014735381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.222159104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.141904573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.545205714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.014079728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.184315571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.557730706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.145555405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.399304429 seconds)
  done (took 172.174728979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.986127445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985893965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984759028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987019107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.272423939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.987258839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.988783898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.987170337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.188649756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.178759312 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.98758745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.259708916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986558707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987519714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987679658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.986855043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.338990467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.988138817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.987023091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988247223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.988061676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111305164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.988102805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.123091422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.326237372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987647847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988168549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.987700447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.988922681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.988337577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989744141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.98904878 seconds)
  done (took 211.41844343 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987992326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987222542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.987481789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.989378544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.988975597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.990994411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.990003299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.988829993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.685176557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.672936547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.987177875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.9898779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.989506446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.98815176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989670106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.989989654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.989232069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.989040357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.008179518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.989801079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.990610551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.673847213 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.002373184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.674122072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.989220695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992728632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.990893618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.990608053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.989271723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.989394139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98989606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.990533735 seconds)
  done (took 224.361368788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.227258889 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.990055788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.991404409 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.041850655 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.991350026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.990103211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.994888811 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.241831718 seconds)
  done (took 20.386302852 seconds)
done (took 630.269355753 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349096232 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.72070986 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.132826202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.015630379 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.238617725 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.06151527 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.009438528 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.072091024 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.845760261 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.085171413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.41983282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.01808689 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.785987938 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.038903491 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.131694054 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.070609987 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.368558148 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.686196 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.153035162 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.659451527 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.173538406 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.932581321 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.089295124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.887270102 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.435266817 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.967685492 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.021520264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.373679817 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.016946643 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.168575104 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.644561217 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.28615458 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.027001124 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.012719367 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.063314407 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.043047065 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.223763205 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.023119353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.130326077 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721296852 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.674909971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.721214971 seconds)
  done (took 105.419977116 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.002498577 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.998199023 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.997962659 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.997890195 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.007565977 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.998738059 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.998905576 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.998492702 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.998464086 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.998968257 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.998273096 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.007757575 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.999620426 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.008668926 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.9995417 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.999514767 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.999107385 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.008745117 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.999288594 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.000090727 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.000170682 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.00011929 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.995646897 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.999907314 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.000346466 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.000603535 seconds)
  done (took 53.949884232 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.994978821 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.159793803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.23991101 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01491236 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.995502867 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.997923463 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.024734102 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.002179428 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.997498087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.997115222 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.112355959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.999215878 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008349177 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.238039476 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.012545574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.995564711 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.995848571 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.996260868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.166761351 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011384032 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.0271857 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.003810765 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.026333915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.012375751 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.998741811 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997307134 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.000224774 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.427651094 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.009617616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.115751912 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.041551455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.03021808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321272545 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.250901527 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.052922005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.004354088 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.996869493 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122268124 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.004627542 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.999037542 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.026931047 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.006379204 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.246279425 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.525260616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.01271879 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.99738087 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.42749976 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.132764774 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.039532968 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008986231 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.251609855 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.015586483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.998357738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.999310109 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.034198659 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009475854 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.998425679 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.255798244 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.01489442 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.027071192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.007086507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.999678019 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.177391264 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.007623226 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.166508618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.009140348 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.004834776 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.999565255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.24431436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.016539009 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.535328687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.013358324 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.999019845 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.117540047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.171216299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.456067635 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.013521807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.17926686 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.342819418 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.038115437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.012239816 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.41282314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.041432088 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.010181751 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.998784878 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.000260889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.999955025 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045492018 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.026713649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.447254214 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.534507486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.271549339 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.041798547 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.014676738 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.00200618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256272187 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.011485738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.000478237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.236235308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.547733466 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.015632774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.007632903 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.512996273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.016178674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.029908417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.013059495 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.257333308 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.016926443 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046788886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.000774704 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.007866518 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.003972476 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.030415808 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.014104662 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.00093168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.509502955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.139724011 seconds)
  done (took 247.395656781 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.002103288 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.000577344 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.000701326 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.002034343 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.00069006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.00263621 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.001105589 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.000180883 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.002428091 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.000315686 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.000752643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.002034446 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.003783283 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.000402011 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.037337052 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.002326841 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.488884718 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.002407191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.001695281 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.003203712 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.563335355 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.00710887 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.002185931 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.003323218 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.001575057 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.003240327 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.014128147 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.036203391 seconds)
  done (took 171.118193675 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.002166078 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.057318792 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.015692965 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.049935474 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.015108014 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.004104424 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.100242626 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.021419266 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.009622003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.003747987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.002919591 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.035608313 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.011915641 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.100754634 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.034537626 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.109916891 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.10680207 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.010361857 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.004385324 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.003993559 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.051334453 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.018170651 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035601611 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065499597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.016868687 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06078225 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.018552272 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.005422257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.004420949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.118203533 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.021387219 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.036625274 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.040727921 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.027278724 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.1237821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.117678512 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.108262329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.108944964 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.011003449 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.005520917 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.006454261 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.007990323 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.061397189 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.017297396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.006832122 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.121449275 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.021510577 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.006360621 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.006153778 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.00555461 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.019757235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.023858136 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.042115281 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.130487199 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.050111071 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.033067105 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.103211711 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.124034551 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.008186093 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.102983171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.013257361 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.121009711 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.023315752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.007929945 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.007346782 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.010303254 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.054310724 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.115563261 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.109954839 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.013536737 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.10452552 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.060369954 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.01948263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.008741808 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.009364073 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063628098 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.118223796 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.061928315 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.067716658 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.043076895 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.017828659 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.007858121 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.009637653 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.035225008 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.019335181 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.12193432 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.119703491 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.014036835 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.008446869 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.008491881 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.008971887 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.033528231 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07100786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.047853622 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.118708534 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.04559052 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.050046079 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.018592839 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.022350552 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.01265625 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042339897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.0190382 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.021114474 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287731622 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.040300637 seconds)
  done (took 216.76755389 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.362181245 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.053148353 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.083901249 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.264610073 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.373410903 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.925812097 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.048619306 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.058408084 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.06648939 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.189314766 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.115840517 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.101911449 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.048250856 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.032582887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.05234382 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.069005142 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.086861551 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.370703468 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.261989124 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.557784287 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.045459545 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.334903044 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.372616667 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412326601 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.101622572 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.420375473 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.638833318 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.153658988 seconds)
  done (took 66.543923237 seconds)
done (took 863.114556009 seconds)
SAVING RESULT...
DONE!
