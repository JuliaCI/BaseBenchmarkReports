cset: moving following pidspec: 23561
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316268046 seconds)
loading group "string"... done (took 0.537388447 seconds)
loading group "linalg"... done (took 7.434378023 seconds)
loading group "parallel"... done (took 0.170593759 seconds)
loading group "find"... done (took 1.161757688 seconds)
loading group "tuple"... done (took 2.076117736 seconds)
loading group "dates"... done (took 1.307283474 seconds)
loading group "micro"... done (took 0.243693278 seconds)
loading group "io"... done (took 0.973720061 seconds)
loading group "scalar"... done (took 41.475789707 seconds)
loading group "sparse"... done (took 13.699997502 seconds)
loading group "broadcast"... done (took 1.102125665 seconds)
loading group "union"... done (took 14.781532904 seconds)
loading group "simd"... done (took 4.816098675 seconds)
loading group "random"... done (took 9.718470921 seconds)
loading group "problem"... done (took 1.982225593 seconds)
loading group "array"... done (took 22.270716006 seconds)
loading group "misc"... done (took 2.004570061 seconds)
loading group "sort"... done (took 3.394059095 seconds)
loading group "collection"... done (took 19.537485839 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582683024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157617514 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151603814 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151569324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200619469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145415749 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161211721 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099402549 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949055428 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179221415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154761529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531915488 seconds)
done (took 5.200100742 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218240849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097617074 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104183777 seconds)
  done (took 0.875309121 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077606683 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148416398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095220868 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078837786 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095922002 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078273551 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095311952 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079145591 seconds)
  done (took 1.35336157 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088800758 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099637696 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083136658 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096740847 seconds)
  done (took 1.051538643 seconds)
done (took 4.269880458 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736389085 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272929386 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204398537 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465263521 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191839628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213915968 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682575493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326129199 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251514685 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100033645 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134086002 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392346541 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13595452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678950995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093368234 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124478525 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175808708 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43364909 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083782837 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110398224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116515674 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142883863 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130160399 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093632022 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187466346 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081191988 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191826197 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107572319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080671266 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273127274 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200096064 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.696028589 seconds)
  done (took 10.834688351 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112820388 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136033908 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099674472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139599272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137157441 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101031582 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085873241 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096479123 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124401896 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178327836 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132286864 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125623985 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097143609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083791961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118022157 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248004791 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121614761 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100631113 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101792426 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104551953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124472934 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115416565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110761563 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095236183 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168510424 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22383965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112676533 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126831497 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097616504 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113568413 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14351123 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144912222 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095639244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082805644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174611355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124377619 seconds)
  done (took 5.194914705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.122375366 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188740562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120527034 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168777579 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080812209 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141710763 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094726741 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112467716 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256704188 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.178406315 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127588046 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.484377616 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139144542 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098309491 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096650216 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082207692 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096509134 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674406713 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158820363 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117134416 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11520374 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103820594 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086079197 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370423533 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097977171 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081445455 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098987939 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071288267 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165212403 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099610982 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191520984 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122966865 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09992622 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131859998 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190817578 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127380585 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119181089 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096302688 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077714812 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189175389 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105817877 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103374965 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079352377 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120038804 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133265283 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133452394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096822061 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081462065 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194822515 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097027203 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095485478 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92478817 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18030374 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09126202 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097066601 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303381631 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098845162 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097479241 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077881072 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266779098 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191181853 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09733763 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080038443 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097615584 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081637494 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399415706 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082491202 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.674644215 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084396604 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108362541 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083785626 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097629212 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105139295 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090236624 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116698142 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082275308 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101114134 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080499509 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098087822 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08143285 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107515006 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215000744 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097723221 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079616117 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095352496 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115231168 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110172649 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100180932 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097359633 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116385448 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100286094 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096746396 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115449677 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097797304 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07728887 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107461644 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098616497 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141232996 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083071304 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144023327 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081155668 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094077855 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108129415 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100132622 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128434911 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112659454 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097691386 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168083452 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078726242 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094250547 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080683467 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0952341 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081824293 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098842681 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093618091 seconds)
  done (took 22.81769878 seconds)
done (took 40.651274016 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325256891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101652564 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10152054 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101083253 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101288602 seconds)
  done (took 1.491444701 seconds)
done (took 2.224540471 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290760178 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175475419 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094929 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168235637 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093455282 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165271029 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160818376 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095078524 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215100761 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094311913 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161277962 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076268507 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094351908 seconds)
  done (took 2.645404881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096568559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116426881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084272173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111763362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078119388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110514431 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094510209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115881028 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107973866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084766526 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092365934 seconds)
  done (took 1.819573079 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096414037 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11384639 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083828036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111163832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078540823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111922848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093785343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115024228 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108633817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085751184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092256893 seconds)
  done (took 1.817253583 seconds)
done (took 7.0035613 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093476807 seconds)
  done (took 0.816347351 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.927199479 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.649186066 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113286795 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149098418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315478553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171256653 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469972594 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126123917 seconds)
  done (took 10.855495698 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144505275 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083767825 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099869198 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081647151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100034605 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085064047 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100143639 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101195834 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082825298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09836327 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084901216 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099355194 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10231094 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086404996 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101860139 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082710206 seconds)
  done (took 2.332287254 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118904869 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117062558 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10367693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106441426 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08602652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102490954 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104514717 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08771292 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099727025 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103138113 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090554974 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105359378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103955777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080980708 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107570674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108326634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087026913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107233289 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107867813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0916247 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107240205 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096205105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088531737 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10687684 seconds)
  done (took 3.257475884 seconds)
done (took 17.987954826 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160742515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109742127 seconds)
  done (took 1.001897413 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0974284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114764369 seconds)
  done (took 0.949397046 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099348497 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095799981 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119390544 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108262142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079922813 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094675371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118837089 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080395842 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096625761 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096507577 seconds)
  done (took 1.728938232 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084969275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111289728 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102621497 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097256604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.1066619 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095830953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090473497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101047097 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111966623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079040186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103361059 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115181339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088314599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116494109 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107051577 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100779241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086854302 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100068753 seconds)
  done (took 2.536861161 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081560009 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097723251 seconds)
  done (took 0.918927145 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08343292 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094649537 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082089433 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098619241 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094640661 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07839104 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094439458 seconds)
  done (took 1.36630164 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.435357857 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134120631 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258372885 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099391421 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101858349 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296310729 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096350274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084018678 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101179776 seconds)
  done (took 2.40231944 seconds)
done (took 11.640561507 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095176218 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117020881 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114099633 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45501405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106020041 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096323947 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146295447 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249945462 seconds)
done (took 2.125001976 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.147276758 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.568572371 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421331209 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22879689 seconds)
  done (took 1.964152089 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40511407 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097928266 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081045471 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080243214 seconds)
  done (took 1.41262034 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081237656 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101193921 seconds)
  done (took 0.931275743 seconds)
done (took 5.207214963 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112311378 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099366178 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077959569 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09728782 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077172651 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09711651 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077962689 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.093501198 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077208236 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095442131 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09488621 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080479692 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095070897 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0803809 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09273213 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078030158 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095623815 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080069759 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093146979 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077140096 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093255102 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079977752 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093073145 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077498609 seconds)
  done (took 2.902731147 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102288881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099149891 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104943732 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086503472 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102424012 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085533729 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101788365 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095823229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085210656 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0975633 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100293536 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084324339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09835398 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084510789 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097917153 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100315608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084830067 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096942824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082313486 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099795557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101832711 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080851047 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099861088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101476297 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083467221 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100296138 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082575915 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095836527 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101573982 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084941902 seconds)
  done (took 3.574605765 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086724017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093527259 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077912023 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099984863 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077253249 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095399577 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076996064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094311035 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07852397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093636123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079471261 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093528762 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077053496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094299655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078491182 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097741532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110524546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077713839 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093449703 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077763458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097023701 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077303036 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094114784 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077131671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092679689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077356011 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094387689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077735068 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093854146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077137293 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097267948 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08153614 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093815708 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084085877 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097362173 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093076883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081401046 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093129166 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078340473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093262869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077990231 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092590313 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077412586 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100972724 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077814225 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09642811 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078112812 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095730854 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077681454 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097446929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077292946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092778706 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095580471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078792772 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098063088 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077971226 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095214574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077385723 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095044561 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077393166 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0941577 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077537921 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096422261 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078980573 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110057682 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084223668 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093697196 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079191717 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094894852 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096510143 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08041222 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108594745 seconds)
  done (took 7.092566866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.132871779 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125913185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078887654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097130612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076483138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094731747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082155306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094984991 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095968575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084797748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095082844 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080397045 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096600855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093264466 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09488366 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095861305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084265511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092815227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077674636 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099468484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078739407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097723573 seconds)
  done (took 2.807032793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210301654 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106118917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140946345 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105734406 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082101502 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10490406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100404749 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086011195 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100850975 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083418067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098652743 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101069492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083122429 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099331698 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098713174 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085002613 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101327812 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084311522 seconds)
  done (took 2.62701178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094808353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097990378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.204677783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097645438 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098252418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084372428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103282163 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106223274 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083580978 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097796726 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089570218 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099366818 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100363788 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081546349 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099711461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081158009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101064829 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081645278 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106253761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103720196 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086986556 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106555778 seconds)
  done (took 2.969397204 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097238328 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099594503 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117895386 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083152292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09413306 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078885696 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104579376 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080632204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104440089 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09847879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080812373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095651323 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087062862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096962443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102412722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081260642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099660059 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081398022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099630649 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07774686 seconds)
  done (took 2.623898265 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104180015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099819299 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099432142 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091164859 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100194581 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082696689 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108898732 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099637517 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082445844 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123187121 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098560707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081820449 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107989262 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104048563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09884657 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091211371 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106729724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10752306 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082355825 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09872621 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124376231 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081819891 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10771127 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098405337 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083163911 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099204787 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098767069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08672486 seconds)
  done (took 3.513063348 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08335706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099077328 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079009738 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095157287 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077740251 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095241817 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077908103 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094702262 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081211437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094582647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080595466 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0974532 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081706231 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097543829 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080915791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097238875 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080948599 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094794269 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078664772 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095396174 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081081276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097161184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081271758 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095821675 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078284127 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097270387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078574658 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095605599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080650616 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095069092 seconds)
  done (took 3.411279027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092158393 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108049009 seconds)
  done (took 0.96615806 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081235632 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115025519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07838833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102362732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102518809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081659605 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10650389 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086261032 seconds)
  done (took 1.519721515 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099192918 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111918358 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08376075 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112067633 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108958204 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097785546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170106276 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100462255 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105596067 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079512913 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112190497 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081088992 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104763876 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08216445 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104736947 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088218948 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096221104 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104319372 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084514351 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097073441 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083015422 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107622999 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10323219 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077736506 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100017179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091061169 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112557034 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10070882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084803176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106049102 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087182515 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09251625 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081546289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099672191 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080148212 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107670146 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115983512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084845826 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108858182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10037243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093471999 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094645886 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087409076 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105251022 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10936757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08279613 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100417164 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076954461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098681465 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084377821 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094372479 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081388688 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0928807 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105439354 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085631529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110373456 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080520742 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100392806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08422383 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10324121 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105466135 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084562411 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101859011 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081732156 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10917286 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085899932 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109797357 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094975283 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07523367 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09715524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091745896 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123740417 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106558492 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083871969 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100664986 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080063873 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102852064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100659043 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088014372 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105382005 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08232121 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106296424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106381299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082073693 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101713178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08942025 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096920555 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100729691 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079497026 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117259646 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080727934 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097790529 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079436352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109774732 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102748724 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081629194 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096566873 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089359935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092981855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082863945 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100455734 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082463766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110251344 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105238137 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105585021 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090510039 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107279541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081794113 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102828504 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078911058 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100573712 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084562512 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106994627 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094231916 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085052515 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10064866 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083729249 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110538089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080947958 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100360583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107221177 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087995688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098340256 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078856381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102551733 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082337199 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103320557 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10860953 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080800365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095065097 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077384761 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103098462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08233812 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103090357 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104880931 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08547481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094589253 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080407029 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103982032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109828262 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082518384 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10024141 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088519003 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100557178 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081645391 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106878873 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102443498 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081264919 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10617679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082698536 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095258135 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0855322 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102175233 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098530691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085144848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103848551 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08432296 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100261079 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080957014 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106204114 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101411537 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081198035 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099279683 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080273514 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111210969 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084085861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094196902 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09705617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090194785 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097010387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081621405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098541781 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084670176 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100806 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08017342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099552503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101761871 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094160315 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104842746 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101390172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087760913 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112630554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082703107 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103079028 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082830104 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1008391 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101502012 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091551439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106381675 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087917855 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102471835 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079433846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106847753 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107927606 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081437543 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097205301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081608987 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103742897 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105802461 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085515101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101478849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08025656 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100341244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085783953 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102285304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100291482 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081265831 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105706043 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081649762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106928679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101548089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093444754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102956948 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077545357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104370432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080045218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106821658 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095647903 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08064445 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099093368 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082947743 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099114109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085663442 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0947208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089961252 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108687219 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100669633 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080897259 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10008029 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089245965 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101481884 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086118649 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105050782 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10659377 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094121246 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099112198 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085919977 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112383046 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10025651 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076483014 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105907502 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080699811 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099654812 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082191301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09805508 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085724092 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109551744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106821176 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076411115 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102732322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080528508 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098880188 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078146197 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104892899 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103513062 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084326412 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106857116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084344219 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101239531 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087086513 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099516439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101809284 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083955027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103725298 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083521825 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10306892 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08152529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102697271 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099784287 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079830384 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101813682 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082739374 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100523695 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089241892 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100928223 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082673805 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103635109 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101648598 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083946908 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101336384 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082547875 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103183662 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083269431 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100507095 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085044434 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096022646 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107934806 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082240244 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109129425 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082901883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096758086 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088594448 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103416084 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105954267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084099799 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102323145 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084598729 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101191737 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085913702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107079374 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098728334 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094132444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110478859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082982192 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103470286 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101079997 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08462548 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100383944 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083215488 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101988274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083501328 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100461885 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08713946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103244754 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100870652 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085134823 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101638423 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083493321 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101514998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077486266 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100593957 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082277832 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102020064 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112572694 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083976085 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103954205 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081051132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10249391 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08189186 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098170729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10915083 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09233441 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101991194 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108851906 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082092401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102699223 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094130365 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095110657 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080507124 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099054318 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080504761 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108938618 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102090598 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09236391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100600589 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082633004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09716429 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08393893 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107719423 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077052943 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098546629 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105215004 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085484972 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100039692 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083584295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104147153 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083827676 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112274569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099827518 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083284793 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101360831 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080400817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100374133 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082825004 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103978257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084260241 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099006983 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080539489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1001348 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101982408 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083736815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100261603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084252277 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109963242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082418488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104822186 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104906397 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078031194 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103363749 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083313254 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101115437 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082434111 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104669475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103971333 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084060825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112019657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0821824 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102606319 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083247875 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099751129 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082820673 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101383823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101744482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082472904 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102836451 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092171177 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099810876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086590577 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101172348 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101458782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090954825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103209891 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085949783 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109946899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105235915 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084499025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109636124 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086992077 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106289348 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084943999 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103495832 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108643535 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082955428 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107926093 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083607356 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103384909 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084582669 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099427595 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082462734 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100828031 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100289371 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090118086 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103486278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082555449 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101816753 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080514455 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101917547 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105096533 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090634671 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103427144 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085334577 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097076028 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080003999 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103669766 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080862046 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102993998 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104755419 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089173697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103805643 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083832983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101962002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093105958 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107076002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10561968 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081902638 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104934603 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084525084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104984717 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083989111 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10157729 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103738946 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08711617 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103930317 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083158674 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111178215 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087335974 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102943135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102885464 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084769912 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102409331 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078456178 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102269802 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085427467 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107688313 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085161517 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101680157 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112830144 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082821094 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102138031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086970729 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10122363 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106435899 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079431568 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103266372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085398516 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102621536 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078840707 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100739469 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081351248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104450302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082329081 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097206343 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113791312 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092728359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105091085 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081579449 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101637558 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078613654 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097116986 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101388861 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084414726 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102801872 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093409859 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101014979 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083328683 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096718953 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101760794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086725945 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105164972 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081113811 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097351493 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081853544 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105187171 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089260596 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101810795 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083388125 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10497446 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104111792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082230302 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105742491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079883904 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106387524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115184125 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084298433 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102197972 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08992764 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10980361 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102288025 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079180837 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103757246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086918192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102101947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084819957 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103870701 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117928566 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086526707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101108017 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082964531 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105055496 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08336585 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111123606 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104001003 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085023988 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106890329 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085143283 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112010326 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105515356 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091985897 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10775262 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08751825 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10165674 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083638311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10053662 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10066825 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085335867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10343966 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088833187 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11114372 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.1014436 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095134581 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11209367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089056758 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099381714 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082898525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102626539 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098003338 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085256185 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100676808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081949064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100475106 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083632323 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103524738 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089239744 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103201313 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103362757 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084234793 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096420352 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085959231 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104578761 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085918107 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099383862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084162532 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10394361 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087610611 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107868223 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103374845 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086083368 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104521481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084323675 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098215264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091632905 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10158719 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085956134 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102157167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102725678 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085018477 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106506261 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089649082 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103953648 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104447119 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095821554 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105893297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082148705 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099590612 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089993932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100215567 seconds)
  done (took 57.591000914 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146480258 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079908476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097752839 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079508806 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111728212 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099154888 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080132307 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09982654 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080461351 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101841352 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079571563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097659729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107379784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122392265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093977051 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103270808 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097597007 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080477714 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098481236 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081008526 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108442319 seconds)
  done (took 2.864274312 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108251766 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118936729 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11452162 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118354962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089733582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115046305 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113469157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113685715 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098769134 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109966902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116797455 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114149498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090590032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110497831 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110266431 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093467183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117700523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109220978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11505936 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095885124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112213701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113332385 seconds)
  done (took 3.215488626 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086556712 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101956179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085168505 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097525069 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083339594 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097081112 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087848983 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100834791 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087633688 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102582421 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082240245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101671736 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103705509 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079280541 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102536246 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081973124 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15194252 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106077002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083286236 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1033479 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098479596 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085795252 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098670066 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080303361 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101617109 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087263328 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103528903 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081889227 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102564961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083384182 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102540601 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100335539 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085708885 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103773526 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082934338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10118155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083501753 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102473219 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078951898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101316331 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085260754 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09866527 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084211778 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104434562 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081724565 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101359795 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104234337 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083590246 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098260209 seconds)
  done (took 5.453561194 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105168033 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161327921 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086553864 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142934142 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120098386 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112301315 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088747754 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14211827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102456608 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082410966 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124679454 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119118052 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102971236 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089435857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107230265 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103895852 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085584108 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101536126 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088805099 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102988234 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10756964 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090883455 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118905656 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11722597 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107718519 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083258099 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102407007 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10838801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097381526 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109551981 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10751228 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090419041 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119862949 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105753696 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083299345 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106387597 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120645877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103024379 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088523723 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100531281 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087352724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108438252 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110424816 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102785567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104253752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108493465 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08410238 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10067214 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118432409 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087068145 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113031742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119726255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107620838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084147563 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109242282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120126091 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085411932 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102411214 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087781997 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116397015 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101128889 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08858927 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117920166 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105913708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111552404 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10005215 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109912686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10843039 seconds)
  done (took 8.102037515 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094432974 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110169316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119654508 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120520153 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091263037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109896346 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109802496 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090432146 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10923607 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115061224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110788887 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134152122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086272706 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114576063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110646935 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090799083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110303878 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109855597 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09129702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111215191 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110546384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119461582 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090903161 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120303295 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141593768 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105114713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090021423 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110900265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120249704 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110558373 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123375564 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090528083 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110139737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119620471 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123428946 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090752614 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102790058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110055758 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090602089 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110669761 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104230853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119908377 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090548784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105340792 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110300818 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090305936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120372225 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122871932 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115103982 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11660239 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091481337 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120129571 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109981888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090738107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119122464 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146628272 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118778325 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118938988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110765185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11998221 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099609101 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12789788 seconds)
  done (took 7.631207551 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109293686 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11556383 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116094732 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10052945 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082094367 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108183789 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083035994 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102060545 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113280259 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094339807 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116707443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107867857 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091790481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116445364 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108450184 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111833 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089407369 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109191488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113295348 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108801505 seconds)
  done (took 2.930448626 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095532606 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122748408 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085222983 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112336013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107425881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090820558 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106747727 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107516795 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086483969 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108137232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096292218 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1165461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105518739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090967221 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116301514 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110618442 seconds)
  done (took 2.489892547 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09938267 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117093729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120178594 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084996055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103714794 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080805368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10527751 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100433772 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081174973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11977536 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085357148 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107962181 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104408603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082583313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100966553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087232293 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102018406 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08258555 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103884279 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119696612 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096247621 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104206127 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10510025 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086475582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104896835 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091258328 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105585746 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102564465 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083425402 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103980966 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085458419 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112785864 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101466703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083099818 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102662743 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082448792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104217035 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085526162 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108069065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104843393 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08374021 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105395454 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086221298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106652518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081351866 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104928216 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100508757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091901665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102456497 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084790706 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104720705 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107187147 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085947756 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115000378 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088224117 seconds)
  done (took 6.225575553 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10137118 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107965567 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080584642 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103585439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088528352 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107043887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108442931 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088428072 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106099052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083001862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106614309 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0899885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106868608 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108219459 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087615292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108906485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081216534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10698768 seconds)
  done (took 2.612138119 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09255177 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104735161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093083544 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105679306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085052715 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108103454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080989067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103758261 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103775368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085008976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105059011 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088002132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103419859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087602174 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105210401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085762184 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10742453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103278706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085856911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100420096 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088370191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103155019 seconds)
  done (took 2.963383867 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119620928 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125283926 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093384179 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229815614 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103787975 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132248477 seconds)
  done (took 1.646583143 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110965395 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12117625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106026351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107555675 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114878624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107404592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087729475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107582694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117271039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100837767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10814401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116705062 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116375578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097046342 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11392018 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113856078 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10709569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087041403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105894371 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127905178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088029037 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117740653 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107599513 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086980164 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107305948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11600159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117831118 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121321524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087365522 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117890418 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11402906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087139355 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116812345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121152212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10908596 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096440393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10704511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127041903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114143539 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096623143 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10858748 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114611553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117045482 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092906411 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117145436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107806904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092932481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107278299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106719237 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133598239 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113729273 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096199007 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114046416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117984353 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117053767 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133294226 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101315668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116759713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114442803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12225901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11703545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094274131 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116227969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121655467 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114292177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116448613 seconds)
  done (took 8.104856249 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106015316 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124824215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108837295 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122336248 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097249148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106941124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108036581 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087668975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106527079 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107684719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151220895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088171394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116781435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117635833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107223382 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087105414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107666393 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116756999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086739641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13392116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108071878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116778287 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117230328 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097170494 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121062884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113801451 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107793682 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087832198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107768657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108169459 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093117693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107747832 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117606665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087341106 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116715101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108398076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108061 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093548832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108121378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11521252 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09653776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128097912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107863605 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108355825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122182041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087905831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10771415 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086641012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107547167 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107329097 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122059479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101470439 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122109659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117445136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108178911 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088035762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108733082 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107290837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087489309 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114969784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116758918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107711826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13473452 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087464204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10794841 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117031699 seconds)
  done (took 7.990323643 seconds)
done (took 154.576209411 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.274150607 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.237042522 seconds)
  done (took 1.35855227 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090924007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136877636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096541543 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168526812 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085661385 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140010485 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138118634 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097662275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10642856 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085643888 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106584805 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087069741 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170542896 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086066756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106992514 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108345542 seconds)
  done (took 2.662916857 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115677418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255154632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12177932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104957477 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089507409 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110034586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084433495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111079705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089208606 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10441191 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088521213 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106562627 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084643271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105990836 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109395794 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088725098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104945261 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0883113 seconds)
  done (took 2.813800689 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115764967 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145708525 seconds)
  done (took 1.119831548 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245171697 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161072396 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.226693687 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468934964 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277087963 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.359155 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203043845 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210409036 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16485309 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.205712721 seconds)
  done (took 3.374274134 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122084361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180205602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316385628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154873339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107350265 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126986435 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155520274 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129507152 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122850612 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100934506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121534674 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117233823 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138579798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094251855 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114815575 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118039978 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120037116 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112344967 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114495999 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095414297 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138096351 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106812427 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095530328 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114005719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119361702 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097716252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105027637 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085392291 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115227149 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114348068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092908695 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125290587 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118481656 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154565145 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122919006 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156856924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117825249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090513272 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11447936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111651817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09734103 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117805069 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125144117 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097240912 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10514917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09662878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106329876 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105320953 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093155903 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118421278 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114205293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09225815 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152931029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117664157 seconds)
  done (took 7.362013255 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799857713 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161750972 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093395965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88660326 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139209838 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104156469 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780607779 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115504362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255344308 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.748200751 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132417115 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120395819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206095546 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259019523 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.99722133 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291722033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639829667 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123312978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150267662 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152739017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116806103 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135427862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109796814 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451347849 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116448917 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111253186 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097013964 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118268182 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161155107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124178102 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113043671 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176879067 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249172976 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203021664 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09505619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111273235 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111023168 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169155227 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262431076 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193716512 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178862745 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108417582 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088873013 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121943016 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132061328 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108208815 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16260121 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174652924 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167935204 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114105823 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119309818 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099227092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120803952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163848771 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120966699 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322138745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311414082 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08968103 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122088939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125499358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260133087 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102321842 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225527732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140686937 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215052279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094001319 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80499194 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169059037 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111991458 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095400091 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119931106 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116126867 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11979762 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146834804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390535553 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123370147 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11428926 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090133771 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255601324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125778585 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090706976 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161587015 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117141919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120284005 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122717152 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10056893 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189857802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230639478 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12311221 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098279719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115237689 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123960402 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094903954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20994396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217880744 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182490037 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208651388 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120971185 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164539737 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167577248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119261311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172183718 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120345829 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123409709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100487857 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218298458 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146594195 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123321906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0937778 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118436439 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148039607 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126655102 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118311868 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171446031 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476132382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189306817 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088772539 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127484232 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11899393 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161117328 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116389619 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236900064 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121704809 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169428439 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120552109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087498122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121192947 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162384402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122829786 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121113402 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121604713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097162254 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256166888 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192464202 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121414875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242457899 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18328311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096385769 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192917016 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099561663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187935337 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098179883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121161842 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117306123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773353044 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123940926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119564668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093583647 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194743699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111126558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123059216 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103103723 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108447965 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779733729 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10499178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120717217 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122846429 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095897289 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120697248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117962685 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093416793 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184015487 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22894838 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098334311 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119427204 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125040868 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161100874 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116410655 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103598697 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125022538 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124575532 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0999528 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115731607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124272948 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169037466 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160687794 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220928761 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59437197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093664856 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124352707 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226253602 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111375387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265748423 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119522212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225899927 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162780028 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120436938 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308855838 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164384416 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194482692 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125862989 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173686743 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108394401 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096927669 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187523949 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090067652 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118006075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162511323 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124135628 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100356938 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960136984 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112125717 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225797826 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108925143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171496037 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115881464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097726157 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296126321 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111148128 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105598307 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188458743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097263728 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124735351 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.752584304 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10417394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122682873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117718342 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220014095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164909765 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118926209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09804755 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119823113 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164205448 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20801807 seconds)
  done (took 44.051775113 seconds)
done (took 63.597167267 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282449787 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218973247 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268316101 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172667485 seconds)
  done (took 1.906808204 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175504574 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151139694 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122272627 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108512737 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152739727 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084881696 seconds)
  done (took 1.679617662 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368913351 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27940628 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245074364 seconds)
  done (took 1.781206665 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290855454 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246121473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47627832 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324333522 seconds)
  done (took 2.348500102 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209507479 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13202894 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110492104 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103644338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197036257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247764968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1419979 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200284891 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098723523 seconds)
  done (took 2.375069345 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198824409 seconds)
done (took 11.178054691 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.241186977 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.204532602 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 0.205749516 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.196314837 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12122502 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.292984223 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126959958 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.235292502 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.216489114 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125469704 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.097438735 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.182791923 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.225129462 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121897328 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09619195 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226433585 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20982664 seconds)
    (18/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.195466759 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.204293184 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093674656 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169244169 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.139640864 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.135450131 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187707136 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.184575453 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213705825 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112292642 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.2567049 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113307947 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137516984 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115815864 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091908577 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137777439 seconds)
    (34/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.172645944 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07471381 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153535562 seconds)
    (37/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.113957893 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115919589 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184678185 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.176376994 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12979476 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065592157 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176181091 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.186226069 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094067564 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122751572 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.226429701 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135254524 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093938447 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090215873 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085709915 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119735932 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135844563 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190505038 seconds)
    (55/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.193108167 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137118767 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116245871 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094472994 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117994682 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087262513 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117557506 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093424995 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107330842 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086160582 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11611944 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088450028 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 0.208135299 seconds)
    (68/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174426308 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115367693 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13829598 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127340592 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108295927 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136749548 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090921506 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179500164 seconds)
    (76/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095075013 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206568695 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188162743 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172308299 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086379282 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135795606 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204074757 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15410469 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066950991 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138957919 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098902022 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176664347 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198341294 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174093198 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111449199 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119528333 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120993061 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089634334 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.087544325 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.1171728 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065770463 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113064682 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157940881 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191220008 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215931964 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213755101 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115611981 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223580894 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.147162663 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139842366 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095160977 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.168747649 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100367418 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097140686 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148109045 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119940724 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161440235 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123353824 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088107774 seconds)
    (115/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118465599 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188678263 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067407618 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108013185 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198692002 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066987138 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.159241919 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093767408 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110137764 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.308129324 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109640092 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194180637 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192394611 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065651095 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.183705828 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112150818 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205858629 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154550498 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085768497 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195454275 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114166137 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107206698 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122332152 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.179781812 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117889803 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166629133 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.200117824 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131422743 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067592236 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116408235 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137430681 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111120262 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163250471 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09095793 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116805975 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132476166 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066895389 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086126757 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088619064 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09151149 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110183903 seconds)
    (156/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066656422 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132320763 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101700339 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.1137181 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115967336 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065944655 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066138715 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109720179 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097406161 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121410931 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067829088 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116496964 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066469774 seconds)
    (169/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118038698 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085714739 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108825296 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067216202 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142705941 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094773741 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211661803 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135224227 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066854931 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089181574 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101110051 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089647292 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.114410226 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.169562252 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067043579 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108514981 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162930481 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112190561 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216206488 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091993283 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07663254 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066805637 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221282433 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090609254 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161063977 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.098500012 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08545178 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125150354 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06920496 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.18060286 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065938903 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166527136 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116924129 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066333725 seconds)
    (203/309) benchmarking ("sort", Float32, false)...
    done (took 0.172985265 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08739732 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140213085 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096377703 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09201313 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085570777 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120704609 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08753622 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089946256 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133033626 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091693032 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108212071 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.113787239 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107993035 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086383707 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110421345 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086138736 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116349813 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098344188 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118235727 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094971295 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107954708 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109626958 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114165988 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142165344 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089391319 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090944735 seconds)
    (230/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.115650531 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112726683 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066673231 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092167536 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115349095 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107703614 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066476761 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127284115 seconds)
    (238/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078258574 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067576933 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112146347 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087135167 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188057186 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116452662 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077257921 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086865894 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10034487 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087359916 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117333284 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121245572 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087020353 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089558171 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092975587 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07731612 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130252248 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067075887 seconds)
    (256/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098529673 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06904516 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067093002 seconds)
    (259/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113983239 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068579498 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117737425 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086088728 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111566266 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076762009 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215330467 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.100917424 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112262489 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136172549 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093626918 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179747156 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114092418 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088001256 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117481454 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08942597 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118392704 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136336819 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066082287 seconds)
    (278/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075379547 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141905278 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067769094 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066503437 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242281872 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087719008 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118505842 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066970363 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117680094 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087483903 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066752602 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091210233 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085989634 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107935683 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089197774 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120146637 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116071668 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093990344 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124629716 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067397959 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177118609 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090660068 seconds)
    (300/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089878374 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092195402 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090912248 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069700142 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155616464 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11015943 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115728226 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068095084 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077423827 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090830692 seconds)
  done (took 39.703033747 seconds)
done (took 40.594408601 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099741811 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145526742 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095933651 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13460145 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123450508 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091416347 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117388489 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097242466 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122090967 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124020633 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098046024 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092550174 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096557361 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11935246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096134883 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137328808 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123275325 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093741788 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117801688 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086092056 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117659106 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086202609 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111909778 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069835768 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122010935 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094277258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11634568 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119304733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08593572 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109504491 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089506813 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117194861 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085812331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123326537 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093243113 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117775018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119837048 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096594693 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111953401 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086823027 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11754517 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086106278 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119765073 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094830255 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117764232 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092283442 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119807818 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122219718 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115677545 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115136887 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094473332 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120096721 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096435834 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116539474 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091422252 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118864805 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115443145 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115039661 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118412947 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092645233 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11816416 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094676405 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116416773 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118675024 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094784594 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121627814 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098837129 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115551909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096680323 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115886384 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087166379 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118179185 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113750925 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086781668 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119385638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097962938 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109072238 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092671797 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119406221 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092065438 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10908255 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089458811 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110895574 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092795476 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112637167 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070514826 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114141284 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094124591 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110138866 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096633426 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116328738 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094635105 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111975348 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121938266 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085977696 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115443411 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087270036 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110531769 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088376718 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114847961 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08686465 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113332551 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095880799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110902233 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092591103 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122674977 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087191255 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116714963 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086104654 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110122694 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125130701 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097697192 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111116579 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092293757 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110292711 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094381582 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109829601 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086213085 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111397593 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086511513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116632179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087548345 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1135505 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094523719 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124693692 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087208009 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114358451 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08974959 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110685857 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093353361 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110709641 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087324545 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112420356 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078036398 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112797255 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086623016 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117469211 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090595561 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118052094 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112401951 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096839257 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11527919 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093120819 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116331968 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085978962 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097758485 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092684865 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112879477 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089181607 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110319028 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088590555 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.109946847 seconds)
done (took 16.902927313 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087167536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184832127 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151223709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143396235 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107825967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111659211 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121627491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118961739 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112797723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142154035 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110567733 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131998049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148411247 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086913372 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111994938 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09175247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113053259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103247294 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145392176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133900516 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163328688 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087109613 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146107743 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135850206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120807663 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114083275 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111967955 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091104275 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115194074 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104011909 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132035716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115464711 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088223876 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134071777 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105004825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119796772 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087559357 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118068171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111792231 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086794384 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142160566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132931413 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092674972 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117210633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091191197 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113770952 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089340753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120825845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122217425 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091871815 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12623499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157230923 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092196471 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122032237 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086508928 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121332254 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121453443 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090069299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112191912 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089887472 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113954082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091667385 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12740341 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141977398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092100469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12175535 seconds)
  done (took 8.607580846 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103774433 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139805466 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130623512 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105727446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112005516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088394766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112652142 seconds)
  done (took 1.742616574 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088684983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134821847 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127490827 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136173416 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132765172 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108180363 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122886042 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088401616 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131137403 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089666147 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132997829 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151325591 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089737904 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119857084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137653568 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088624398 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136835029 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088907774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116074285 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136915897 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090756451 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133951259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091433296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112672467 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102942506 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113186089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162024287 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09424634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114705574 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092499727 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111686861 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166056656 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103138442 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124842749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113742639 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102925521 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128139599 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086265833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12974867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094462256 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127698672 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114068256 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089894497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111584142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093688624 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123901988 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090054617 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114875482 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091408466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133808032 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08948212 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126681273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113305204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093073196 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115176681 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094666152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124069311 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089726228 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133194942 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090911782 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130341454 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13339969 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103170533 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130581675 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092727727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127341825 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127978032 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09099027 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115962591 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092105014 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130183411 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086753941 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114761763 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098697577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114972684 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.136785673 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112133 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114876971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099986525 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114838952 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08952123 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114528886 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137010673 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092096631 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114505434 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092617205 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11774866 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086736364 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112548287 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092237909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112258134 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090160314 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116639641 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090407911 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116952614 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105919177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114907783 seconds)
  done (took 11.805468831 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090711614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114336139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091495723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114278343 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090278543 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114984185 seconds)
  done (took 1.576096929 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114834636 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117408785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104701436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119924159 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156984762 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129966928 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104242638 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12282201 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108815957 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126816509 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128449067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104819954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136126042 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121050224 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103903252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120008113 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129140375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09995456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127927516 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096601969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136395393 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120915989 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095856255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131832223 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117907313 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095041323 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125751894 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103678019 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127174794 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122943177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096297367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117751909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121107017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098513899 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12929235 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0959105 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120512437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119851291 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100789559 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118324181 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129258229 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097190299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126778173 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093530442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122552917 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121321299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094236553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124582789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129219499 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094066477 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119258311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096006226 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117809781 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118834148 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095820013 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122830724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094255164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128571314 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121934013 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096054812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117886459 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09372428 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123349947 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117716482 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104496141 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118082758 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121030316 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096280242 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121900577 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095794978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118185668 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117740015 seconds)
  done (took 9.221393118 seconds)
done (took 33.894143957 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.680539579 seconds)
  done (took 1.636122661 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.715418181 seconds)
  done (took 1.673885868 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.918250376 seconds)
  done (took 16.875077189 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496210966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.574789343 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813745307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179294007 seconds)
  done (took 3.021579683 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.927616009 seconds)
  done (took 1.904576378 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295125606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256623548 seconds)
  done (took 1.516364915 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761351587 seconds)
  done (took 1.730435436 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.354442458 seconds)
  done (took 2.317285033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329205385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185118456 seconds)
  done (took 1.489610605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548661798 seconds)
  done (took 1.521351209 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.625489355 seconds)
  done (took 7.603073583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257250311 seconds)
  done (took 1.240837099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299224857 seconds)
  done (took 1.272728622 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.336232225 seconds)
  done (took 4.310884511 seconds)
done (took 49.076838451 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098431515 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126579827 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102216864 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123726987 seconds)
  done (took 1.419171244 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100697984 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120246754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100731931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120360077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125677472 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09595593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12260778 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101528341 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119437768 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096564436 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119893201 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120028572 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098370156 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121604966 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092968947 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123038575 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123753743 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097192806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123524035 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095737907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118344471 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098043645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123525954 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118169145 seconds)
  done (took 3.654055136 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099842394 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118738448 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097331581 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118076268 seconds)
  done (took 1.410439031 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099277141 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140596514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137538442 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100062263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141470449 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135135375 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092519132 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116103047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095053035 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124422485 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090469925 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149163015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136388492 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099793033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126391237 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113302501 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092340375 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135863132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100984441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125822905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093937739 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124147567 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090948176 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139115588 seconds)
  done (took 3.779274492 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157704352 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.14938974 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138710664 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095099774 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154819977 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139934951 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0884714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139535623 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089852578 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129369518 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118098666 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133269385 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127542294 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088162145 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112406677 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088367059 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126565285 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127365335 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09061206 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144588383 seconds)
  done (took 3.424245232 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097871298 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117199944 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088844334 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115337198 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098767553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120512587 seconds)
  done (took 1.621975261 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090447685 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114436748 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090093891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113607899 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093779682 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114210502 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088223434 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114376006 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089179994 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113430855 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088839038 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112317198 seconds)
  done (took 2.205975211 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.453491822 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092579683 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119554105 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111061548 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095421944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114066566 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10232949 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117096745 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13907756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088583561 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11423325 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090985168 seconds)
  done (took 2.625952887 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236844126 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124560555 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289612593 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190428541 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158964002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170092411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150882389 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16587155 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224017475 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15710362 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207909441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219769032 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126972009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217727198 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112292837 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143324221 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225266374 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218928644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154818253 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23078396 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202394588 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165074113 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178529153 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151352786 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137801789 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16858912 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120322948 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104144618 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234674415 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179273328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214409318 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162735465 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146404106 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240246315 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247511322 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197349293 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186433586 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135118404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147007919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16302325 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267629494 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137032541 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235328697 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15806822 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105739898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219639308 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167241344 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174160208 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149706041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138245198 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1975283 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240055887 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192459172 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137801987 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162679611 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159633412 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166539462 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151317727 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250489393 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19864841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203118361 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09419667 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144726729 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191139376 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180394053 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166047505 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206553501 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144629481 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192830599 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185184058 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164769208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215884407 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180815468 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137293444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1684072 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1732227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169344378 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252564992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176277596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120312014 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167307338 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149077043 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129963417 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191417963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099115007 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237821999 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148184737 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107539134 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161673728 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160183063 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161120392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198129089 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219643643 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147033731 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083870425 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155101198 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154394834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189393759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138258693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160290063 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160464324 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128923037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177172946 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123368561 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175587958 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091305136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177088208 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206811303 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100611354 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15715811 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15286294 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147860904 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180373005 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197443025 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139539506 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132447233 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206425119 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200643029 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122377736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203631449 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198545726 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143125694 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148514588 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198217166 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244049663 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114117275 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229306107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154216489 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133674805 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107752924 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203972977 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129769837 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159516696 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132995948 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179498533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236532534 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097808598 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137195678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187213207 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133210857 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131961156 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159876102 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147205358 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136614144 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119509897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151135885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206113603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178777514 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15175826 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165323799 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15076941 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249543543 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139902663 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12270952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14708046 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118422769 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193345688 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196063446 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130063827 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228006303 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172281803 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157860129 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168522003 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108022301 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175423236 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129452531 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092995615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218865743 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16547536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161698927 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193512963 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154102665 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18073773 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20554657 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171586278 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174397345 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163359775 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158836276 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13660865 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158097386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165010234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097063991 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142282529 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13315741 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155721392 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140488275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106897909 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225870248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170914424 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146948414 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157305702 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148247332 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177174464 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1017958 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202860064 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174981415 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14543183 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194578681 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189953389 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209664949 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116435892 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230659742 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119130187 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098242415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141152332 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17098025 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131821667 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107917747 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188323075 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17778615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18508834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174305762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161542563 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175211907 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187505744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120106552 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167316137 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18370917 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174208506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182505168 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139522723 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149559404 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172369323 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155234693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228336777 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16470253 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200159505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20708895 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147812394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129445606 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148885972 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184028184 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152831223 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175877886 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146015999 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139351025 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160749604 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106554572 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156944489 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209025024 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162258115 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188543149 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148422105 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209573601 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101077135 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163496382 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156214315 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163277523 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106494131 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175844893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200813139 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145865228 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169059824 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217026221 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103522941 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.176390008 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237624887 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193330285 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136753722 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156801612 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157903212 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16231948 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172102885 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176521036 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157533213 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186097294 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155417331 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134600693 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137597802 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149106927 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125349094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132596836 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146015422 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172471511 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138403711 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187442543 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159179917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157192367 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168663485 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149877249 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142837869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149607473 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214629277 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172183261 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239462121 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146880266 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177536236 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22847287 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099055186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130031115 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106123258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201959782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109692012 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212702663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120330849 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156757378 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178767996 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216981842 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111480429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118995841 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154152088 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172714018 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162895162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150266366 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15775756 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206106908 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141197508 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129435003 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170175771 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154776439 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120018649 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221682808 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080715535 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14722838 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100354424 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131590771 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162166058 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232497677 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107699209 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182604516 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166151913 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166503868 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163119342 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146755637 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148904574 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164301479 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198150363 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209243412 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104281303 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156694065 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200070543 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193354893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159538498 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138506879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201972799 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189672506 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223217968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140289935 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165492587 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164477587 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154345556 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184853872 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13317373 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204875173 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133307241 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194980671 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151115653 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142689441 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174189725 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.146479675 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139918372 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18545432 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196704522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108583121 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131569033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166588565 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173767385 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153015857 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125588966 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181238322 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123226067 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189610429 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254480798 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13178001 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125989677 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145492552 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134024783 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154525916 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15566013 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137444238 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136888086 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225234301 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133371937 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188929332 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224297436 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167831231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174033371 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143061674 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692695154 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102226678 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216972355 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154786233 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205119855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151071598 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170053503 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155750409 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168547553 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217958914 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157589044 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.201947969 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219260563 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17567021 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12936325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157394527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160242076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142705777 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151300204 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164916301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158427606 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150320416 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175183088 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168891343 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131704063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113296658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221190472 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127218283 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211335194 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179020201 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136905523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169890159 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185332478 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13219792 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178437914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232764194 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114225604 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149024839 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131938659 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154646813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256126422 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096802547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226232026 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173769249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155840281 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164669314 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14536109 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186825209 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155219415 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200560456 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116865625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156806938 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154102088 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136777209 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128730851 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152524837 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165765883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120286854 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183162226 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13701724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188252787 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122583473 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14365339 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154007663 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189551748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212513167 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136537335 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133410248 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162021073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148590052 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17380059 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175817394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134693411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108007136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134165329 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.151924022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112150497 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153970765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153841329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164773823 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229887781 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109868569 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27741158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138067587 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151602951 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089424418 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130201068 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147884315 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118634472 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154593344 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149034687 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256533744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144546987 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104835081 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146456633 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124560452 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133913004 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138300466 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188243034 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173301594 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143139479 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081894521 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157460021 seconds)
  done (took 80.205482154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171534618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130135836 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14592975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200813153 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174886835 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266940991 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209374358 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251506132 seconds)
  done (took 2.618090944 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093160987 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144114142 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150421175 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131298846 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091626976 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118686124 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328897761 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130812786 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090915305 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138712842 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146166471 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117137065 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506953055 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116351417 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116250017 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083383398 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114957769 seconds)
  done (took 3.681102659 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.456516105 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669471045 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475421858 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123211508 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.943271931 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132310017 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.390042089 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202281758 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094759498 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.463220445 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771047858 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174519824 seconds)
  done (took 17.964814952 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098526264 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120102717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107073861 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134127763 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095574547 seconds)
  done (took 1.62222533 seconds)
done (took 127.203523705 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103359523 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398857801 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07169489 seconds)
  done (took 1.574970836 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106720651 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135156335 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108294037 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13477331 seconds)
  done (took 1.564444809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096694916 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125900617 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109183829 seconds)
  done (took 1.406110076 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.318484891 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.186340466 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140121962 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106381579 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128469446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102374076 seconds)
  done (took 1.40946854 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096539641 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126355216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097402819 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128638338 seconds)
  done (took 1.525181024 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094062467 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071245276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099421073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074420486 seconds)
  done (took 1.411214702 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113372935 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130462871 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104199063 seconds)
  done (took 1.424826308 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128887527 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137217418 seconds)
  done (took 1.342363312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105676205 seconds)
  done (took 1.177233259 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117821848 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167939886 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187304095 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162948565 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.224114108 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163327285 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.1398073 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114321601 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128717358 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141626016 seconds)
  done (took 2.624464458 seconds)
done (took 17.282381186 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103112555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.411750921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412665884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116748512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720473306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379851971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017276958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144485491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164431125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094020957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137821497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671625592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008019466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371183958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971835975 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370227562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703411154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092193849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118123832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093563353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005128671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092271052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120718311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092873588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702143521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425235202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094103857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370582847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091482475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125350136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383318154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119735792 seconds)
  done (took 16.793845452 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094278194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17217263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098489629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13586325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121355128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094286572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122693533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093695998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179038587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121601638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111017018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119936526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125333834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095291923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140426446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092586761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12423952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093068729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120075945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120392344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111396568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11867676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094057796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120227358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094278409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133026744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121366392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092211281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120784884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098378305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127005923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094897828 seconds)
  done (took 4.786228676 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13978243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18094628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126983154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126701583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166166253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121877395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196890152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144078101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154847167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120593202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138080985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092687257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154710433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120712106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114172278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120009649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096629117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120198135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093108422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121016237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138541439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092374218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12101119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093619396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122140296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134969417 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094534045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120112501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092715471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125379067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099926079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121875735 seconds)
  done (took 5.094249206 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096334432 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125040827 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109157102 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13725996 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095303773 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124167046 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097555558 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123314093 seconds)
  done (took 1.992588658 seconds)
done (took 29.743872036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111194037 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126352338 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106886901 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133268507 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103046045 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130821144 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09129674 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13211907 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132527572 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101777667 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136303853 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092896087 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12209861 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091805591 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134146095 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097096695 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13156822 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102404434 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131917366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13129225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094901122 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132033217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103107674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132005149 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103981069 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132338561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137252835 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099333115 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121285753 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094883991 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123625097 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10356457 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123345087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105689616 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125528435 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097442642 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122315133 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095029761 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13135489 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131766451 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099729497 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131959384 seconds)
  done (took 5.961681541 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107174002 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13929016 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10474186 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081736783 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115734331 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081132904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136424381 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07955246 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109353296 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107882895 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074960636 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105450166 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07852674 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103215289 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077156799 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075474575 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107407886 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074730914 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076103385 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10449164 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079447141 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07293813 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106795246 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078545023 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.102442213 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081100652 seconds)
  done (took 3.552023813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09924294 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134429184 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112461775 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182538302 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159572085 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099819512 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130940314 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139630495 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10822536 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119013848 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096354685 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148313834 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111222334 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126331013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092009405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135927778 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.142880108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093810593 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126658276 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112737881 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136832314 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130318564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113290328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131958353 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091623016 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121972017 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09633327 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134294485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097686608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132163199 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123942193 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095906682 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122141277 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105152627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124638445 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094759959 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140347762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130107237 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101166784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120528437 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095987268 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121533461 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11314321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165733987 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119424203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100246001 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12692386 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102536061 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120418793 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110718689 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130807238 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092705625 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123117926 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091888328 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119599473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134591496 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094349891 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122407035 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102005798 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123629412 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105695299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124586955 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108222754 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120251698 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128585312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091604632 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.1209197 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091233818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142504319 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093986722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161888012 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.121854573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093939414 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129224887 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099987795 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125789853 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092718626 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136507024 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101832976 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123637928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129602646 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095801312 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123478746 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110969625 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123246475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094131349 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121108748 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099268499 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123827784 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093558996 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134706052 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120216435 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095789902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138088315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092263806 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122181198 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098724227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125958586 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092640191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13313425 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126377391 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09366144 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130837946 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093123314 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122948116 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102528672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125814179 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092326278 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125505913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127263477 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093609438 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12251065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096178038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122956489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103421168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126911727 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098864149 seconds)
  done (took 14.718314155 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226589216 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.2144877 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245309647 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265583684 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134263969 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.143740118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210696829 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125557348 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122663021 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158488122 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1613242 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184292503 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168563592 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179621434 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111569413 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119628125 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140725004 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134338836 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2127849 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286938937 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140987646 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102267865 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160767896 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158368377 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135834438 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103187899 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138855097 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132982347 seconds)
  done (took 5.72516111 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107958485 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154251157 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098943816 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142479963 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145905406 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093357691 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126566829 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094377525 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133270407 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133320945 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092596278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127926549 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099924423 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130009765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121445047 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103106298 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130373442 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095591709 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124193844 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096710021 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128338052 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.129475268 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097075973 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120849865 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100328282 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120622993 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08834714 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14144006 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121752946 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115636569 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119996616 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099871375 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131421671 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094910967 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121164975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095600495 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124023926 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095075607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122892111 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091702708 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119616282 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077649495 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119606196 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134562881 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098863407 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107528212 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099713871 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12641541 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098915346 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119088954 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095760685 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123079925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096576643 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128202637 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097849079 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126612689 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095997955 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114344844 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100014551 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123873684 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084325065 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119517463 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097369512 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116940766 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100634589 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126299602 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09166232 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123900416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09774425 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126976599 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122838169 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095495715 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118761261 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095452545 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126166521 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097799991 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124233954 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092409381 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121156455 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093834949 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.103867175 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093569458 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073950166 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123754378 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092541046 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119065591 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.122935247 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.09940632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135463238 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094935592 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128268017 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093878227 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.1200268 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12442173 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083288107 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095633946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136647821 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138801674 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094156678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119890263 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106269836 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126356314 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120426577 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07597828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100561554 seconds)
  done (took 12.82313307 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127141216 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151584391 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098789683 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141513679 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153805136 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156502151 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100134777 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128393279 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094559553 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139746765 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093505968 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129490333 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096881736 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134789529 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155076234 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102556542 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12334301 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106790368 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129024118 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169558311 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112138302 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13965687 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136842968 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093142791 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127890063 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110291682 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159650826 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136649149 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107116874 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139803735 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108200209 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15908835 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14109388 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09821234 seconds)
  done (took 5.422454427 seconds)
done (took 49.288785051 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.187337078 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398092097 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180924296 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.009401237 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.206883359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216751251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194176427 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.178949414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.444304443 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183992878 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.427339591 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.766548272 seconds)
done (took 59.508413248 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.270794036 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.318373845 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449788308 seconds)
  done (took 3.878807895 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.51936634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.061017398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441204884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179755779 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.179929923 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49143465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.674925289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.424227943 seconds)
  done (took 27.562853115 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.182392647 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.524659804 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.397104702 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.394734006 seconds)
  done (took 17.608209263 seconds)
done (took 58.950173259 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.1703198 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.196322325 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.195867401 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172091935 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.280596269 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.207922307 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.525150758 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.21131587 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.189963603 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.160410273 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.208146956 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.176428746 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.181964458 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.556012914 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189754233 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.178994004 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.20526902 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.709740146 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.547552742 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192528332 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.182338964 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.223423553 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.194073937 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.183157531 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.228046793 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.178782132 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19495849 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.183974074 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.191990412 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.18242461 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.26805041 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.714028211 seconds)
  done (took 189.492004697 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.176775063 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.192223925 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.284251588 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220144479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.678406858 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.379472705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317372115 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.718089067 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199221809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.1925772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449401683 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181513423 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.505060115 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.16274603 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.189320251 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.284949023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.491285047 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49791498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200061678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.432117709 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.199048229 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.436248799 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.347918136 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.39566513 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230016887 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.304703009 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219833252 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.185925177 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.370215212 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.422625769 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.193296969 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.234591627 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.713697973 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.039911527 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.197406351 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.195783512 seconds)
  done (took 149.545305489 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448630997 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.178486521 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1786756 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179105922 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.205877245 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180337191 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.664614159 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.670820056 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.670676292 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.506432693 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.183332748 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235999294 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.352853997 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.180606019 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268868933 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.19075467 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.182146472 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.193911413 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.219227034 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185888035 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181282476 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66945658 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.196220215 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395538354 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1904816 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179942978 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208312583 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.568064247 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181664526 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208415187 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489020186 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.224365671 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180988135 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.444678637 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.128001194 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290154112 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182609575 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208698665 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.183355935 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.443190866 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182229787 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181449006 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182426034 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.184803395 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732500631 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185997342 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.667869111 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186058713 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.050882931 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.187193803 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182137814 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.437721917 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.583671047 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199435785 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181455863 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183286169 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.184600347 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184246948 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.209295193 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.437499832 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.279607356 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195849489 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.185732101 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210668346 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183277459 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.193174521 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183447576 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.368587977 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.240675131 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.398529712 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672488798 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186647844 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272000359 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29842966 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.183065077 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.183142429 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184616183 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.184573807 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.286301018 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.184840798 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.552055651 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189281776 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.184033686 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240755057 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.274389479 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.184781419 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43393575 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.187722938 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.184364995 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860227088 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277735948 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185697249 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.184419035 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183135802 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184092413 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.554898888 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.675188691 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.321271507 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.189196678 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.441504212 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.185278041 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185149211 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.568973542 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.666696784 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.735187282 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189041215 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288323797 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188858546 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185957252 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.184280193 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21472219 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.20043302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243759207 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183616944 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.57860834 seconds)
  done (took 341.388511873 seconds)
done (took 682.983105951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.866644507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.826425015 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.9501393 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.83340555 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.822795151 seconds)
  done (took 10.416783555 seconds)
done (took 11.53118149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.356794377 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.358596401 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2444131 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360620086 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21183777 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374081243 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.334878076 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.209576765 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28279943 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.262585124 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282635323 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239983892 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215211528 seconds)
  done (took 17.851747792 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483015498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488995013 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255435082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484173848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23012748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526054763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380289481 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400621386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394543226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222952603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200737214 seconds)
  done (took 16.186930364 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483641568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48814222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257207492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487520272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231645076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493194968 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384763786 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.398141865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425532494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222568161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20070656 seconds)
  done (took 16.191819087 seconds)
done (took 51.345196784 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.196999962 seconds)
  done (took 2.315224169 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231000637 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392387737 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214530805 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.201727892 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.198515025 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.198677186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202339885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.197790416 seconds)
  done (took 10.958231963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197667337 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.193375884 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194488155 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.193723274 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194177321 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196790605 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.197791861 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.198460252 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194673947 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.194416337 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196548991 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194203818 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196182502 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.19720402 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.195792655 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.194110405 seconds)
  done (took 20.248530707 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.197243301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194598434 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.195141948 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196272798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.195048882 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195131518 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195419006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195069955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.196246246 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196058662 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.19688854 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196065901 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195640946 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195590693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196011841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197187033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195996836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.195313541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200595862 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194853529 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196726238 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196160646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.197120895 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.197164461 seconds)
  done (took 29.830786687 seconds)
done (took 64.470108414 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.073717187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.715265289 seconds)
  done (took 8.910264983 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.199100416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.197452399 seconds)
  done (took 3.518029549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198984875 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198535325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198549905 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199031846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.199336942 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.199845861 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.198453857 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.198268372 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.199144459 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198705429 seconds)
  done (took 13.111194866 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199119534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200137117 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.195838224 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.200060198 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.200093828 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.196502359 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198318594 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.199625751 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.199463288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198716377 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20011787 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.198521981 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200498726 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197828716 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.199824188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198481379 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.197212955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198542813 seconds)
  done (took 22.70175336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.199625464 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.199746338 seconds)
  done (took 3.522740497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.197727857 seconds)
    (2/7) benchmarking "second"...
    done (took 1.196769434 seconds)
    (3/7) benchmarking "month"...
    done (took 1.198318506 seconds)
    (4/7) benchmarking "year"...
    done (took 1.198494356 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198036926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.19722145 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.198789532 seconds)
  done (took 9.508602854 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.201843635 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385447392 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.461989782 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811816595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202293817 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.203085317 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071765666 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2038734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.206565336 seconds)
  done (took 13.872127195 seconds)
done (took 76.263010741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.179252994 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209236866 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.271825577 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.20002076 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227858356 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.538457387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.20310485 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328147686 seconds)
done (took 37.280192811 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.198083169 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.912877363 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.911583979 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.199731104 seconds)
  done (took 11.149565003 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.181634045 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.063358826 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.181370088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.151012587 seconds)
  done (took 17.703783863 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141685499 seconds)
    (2/2) benchmarking "read"...
    done (took 1.535261643 seconds)
  done (took 4.80291008 seconds)
done (took 40.977682125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202643999 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203345905 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.199388729 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202045912 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.199904266 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202521587 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200221891 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.200108735 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200509075 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.20251022 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202794557 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.20447317 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.202509559 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204135973 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200940798 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200823807 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.203711311 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203559717 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200939342 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200996441 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200857069 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204137338 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.202090607 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200035287 seconds)
  done (took 29.971545496 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203781952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202265338 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.204044206 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.203458408 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201881352 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204389975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.204221622 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.201213685 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203956366 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203609582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203176929 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202528245 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203970135 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202300843 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205068678 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.202500763 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.205569759 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202207886 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204759143 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.20214672 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.205204477 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202405806 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203151863 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20554227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.202347352 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203872794 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.2053276 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203763489 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205218666 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.203141195 seconds)
  done (took 37.23402515 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210229381 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.210955488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.205306843 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.20525462 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205997284 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206801513 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206460062 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205693184 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.207041572 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.206104082 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.20612883 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206577645 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.205717527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.206781634 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.205471486 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205825379 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206169952 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.205828436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.207675187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206832211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206733411 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.205759153 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20765545 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.20780876 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205597212 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208063843 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.208235317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.206593574 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207223691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207213635 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207447021 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206892555 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.208717541 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207127911 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207540898 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.206364323 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211063644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.212455814 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.206970631 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207274422 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.207328316 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.207602648 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207669605 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209321996 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207621315 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.206561498 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.207374022 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207953403 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.206331219 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208825827 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.208158648 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207827885 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.200441088 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199968879 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.199788112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.200527045 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199417824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200179208 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.201024313 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.201587513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.194400915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.193609738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.194263054 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.193232964 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.194844774 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.195371026 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.193592704 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.193659702 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.191784833 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.187595234 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.187234616 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.187928762 seconds)
  done (took 87.82007128 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.187281852 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185031672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.185524211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.185528144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179348028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.182333967 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.179893091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182328221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179341759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.181578619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183115245 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.180512665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177533276 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179727736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17969271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.177359544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.179792873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17658333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.179122127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.179924612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179735508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.1745581 seconds)
  done (took 27.089174753 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177862598 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178268423 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.175612578 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.177942448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.175784348 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178332813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.177105367 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.178569256 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176650887 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172889973 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174495171 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177195617 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174477093 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173754105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173562929 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175831019 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176250964 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.175901516 seconds)
  done (took 22.27290061 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.174011704 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.174389568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.176668692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.174063743 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.174238765 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.177217541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174509021 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176716718 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.176572393 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.174546507 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.176767439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177818064 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.177142756 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173731992 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176722571 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.173844801 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17741043 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174264545 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177409751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174853798 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.175478805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17800845 seconds)
  done (took 26.966846165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17542694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.175966838 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.174319519 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.173679523 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17372952 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.176349138 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.177312069 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.171191632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.175569486 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.174304683 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171347907 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173434263 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.173269539 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171702936 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.172033029 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.174691162 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173360162 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.173323062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17448533 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169946335 seconds)
  done (took 24.575624756 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.176064582 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177114516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.177615964 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174585973 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175018019 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.175883357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176027911 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.176150076 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.176659402 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176191683 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.17661433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176569723 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176285217 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.177290986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.176720269 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177212605 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175860595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176694149 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176773356 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177582984 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173248687 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172966482 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173479612 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174049193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.174298318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173673726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173914184 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173949916 seconds)
  done (took 34.015972719 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170164045 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169630334 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.169004499 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.169516919 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.168611215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.16833168 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.168044501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.171320105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.169466069 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167455414 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.17154612 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.170576765 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170417294 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.169633425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171083571 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.170340926 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169670522 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.164032423 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164159625 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163795084 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166621675 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166195824 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.166269056 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.163882988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163983858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.169090331 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.163012096 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.164716698 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167789071 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165003789 seconds)
  done (took 36.130853315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.185294719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.186683203 seconds)
  done (took 3.463063958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.166168652 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166328366 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167716504 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166170131 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.165637298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168445283 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169115183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1651994 seconds)
  done (took 10.426402576 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.167500893 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.166940109 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.167846488 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.16921729 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.168915335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.167669559 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171892988 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.186597927 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.170538384 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.170283449 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.174462406 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.175623192 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.17199958 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170226102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.17054255 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171115239 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.172442686 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.171349015 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.171380469 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.17122533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171089695 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.172619745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173214499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.168185361 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.171833696 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.181041325 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.193376996 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.171441849 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.170683176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.175018454 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.170956241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.169034202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.17091507 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.17318595 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172551505 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.172587214 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.180379871 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18928671 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.179050098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190673692 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173125484 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.170313097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.174595244 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.174027863 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173683585 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.172984302 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.174598932 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.170734581 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.17228887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.175203506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.176433568 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172997696 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.171719824 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175315514 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.174261501 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181433978 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.18919932 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.175850089 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.180489952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.183687247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.202499552 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.19496031 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175116979 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173328614 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183123399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.1924687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181861388 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.187797148 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.172600281 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.174689865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.180996256 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202147853 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.195991706 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.175133612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174634155 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.174476496 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174136819 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174769769 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182597469 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.192640111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.17517932 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174980437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182952355 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192950048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.174999068 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.174484793 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.175098853 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.1745991 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.176414294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18576872 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.190986242 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.174983491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.174936311 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.175024895 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.178383751 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.1760839 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.175313141 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176346626 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.173386696 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.176767408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176278808 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178382241 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.182912754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175936262 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17699948 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.183193967 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.194098686 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176091443 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.18322127 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.176444981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176544587 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.177127595 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.182618792 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17309911 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179033057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.183350094 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.177770255 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.178087655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.177454982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.177718139 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185793991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199123119 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.177328589 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.177169059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.18094984 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.185991624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177500611 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.180845071 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.178369928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.175296223 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.175744921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.178933995 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.178338608 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.178646515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177784588 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179321912 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.176434234 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.178359969 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.177915632 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.179165951 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.179405369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.178953004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.179925577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181528599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.178379078 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.179567432 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.185608609 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.196672047 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.180721658 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.180449821 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.175936139 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18022159 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.179058382 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.181163099 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.179927487 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179628905 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.179166629 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.178783342 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178934055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.180202984 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180866951 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.176451878 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179616805 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177698025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.180275616 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.177230987 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.174051695 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.177116497 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.177483055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.176790414 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.173855683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.170919293 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.175008854 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.178460224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.173546298 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.173533275 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.176574066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175579091 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169290552 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169469958 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.171994196 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.176277091 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.169796914 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.177097989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186079842 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168782586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.170991656 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167314934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.166412278 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167992739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169869499 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.173885157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178539983 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189685445 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.168645411 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.170941678 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.168347626 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.169982732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171074038 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167921347 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.169166946 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168205185 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168687327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171819617 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169212208 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.168377376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.168886301 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169294843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168218413 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167967897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.169395986 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.16942656 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169609651 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.166556785 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168653755 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168473971 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.168897059 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.165989084 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.167136714 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168133139 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.171122122 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.168415692 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.177485229 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.16648662 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170661 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170618777 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169196579 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.167291374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.17025309 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.170068893 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.168998492 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176394801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.1868432 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170501659 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176704506 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.18619841 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.169080336 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.17236117 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170043156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167807683 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.173119614 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.176478996 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.17008149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170226703 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.169739557 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170660581 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171322204 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.176385077 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.185535688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.170285649 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.171685904 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.171838141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168868855 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171752143 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172863423 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.172217856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171991521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171713189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.171072553 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171936643 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.170860582 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.171336281 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.171314822 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172954023 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.177365579 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176753327 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.172109677 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.173419369 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172161433 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175181801 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17136292 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.172737644 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.171532853 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183832794 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.192635039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179065139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190772299 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.172922104 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177235927 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.189854298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.17517103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172670364 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173176426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.172008128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.173218969 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.170206671 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173505655 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.17306589 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173494183 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.174630418 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176851091 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.173251357 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.173814363 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.173880674 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172788873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.175238513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.172500411 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174231867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.176382063 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176102989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.172707465 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174567414 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180490378 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190512843 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.175395679 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.173687945 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.174190135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.173625017 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.176046793 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.175560401 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.177452324 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.179814197 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176702547 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.181839734 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176402924 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183476012 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175726854 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.176860513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.182466432 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172674314 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.173579188 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175970371 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.175393834 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182623446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.191577313 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.176934382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.177659381 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175983852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.175726546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.176100865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.176104547 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175779143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.17573077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183247749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.194582683 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.179177128 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177052541 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.173875916 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.17602001 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.177872834 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.175303219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179164414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176793298 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.17780685 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.17659394 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177516769 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.176643877 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.177853731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.177332688 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174945838 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177209376 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184308203 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.196170991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180255633 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.17793507 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.185205657 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.194836677 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184060641 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.195183681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.178753145 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.178237631 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178271941 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.180115354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.177327276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.179641171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.178304658 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.179039381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.18186101 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178443947 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180655077 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.178757761 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.177897989 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.178181394 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.1879487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19736875 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17898887 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182744181 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.17678196 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.179719489 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.183885142 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178862768 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.178560671 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.181628456 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187363041 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185516599 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.179407613 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.18008499 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180346373 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180082671 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.179959266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.179640973 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179690155 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180913021 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.181325451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.181540786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183039212 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.180277156 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.180757135 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182023677 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.181470508 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.190174225 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.19843535 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.181018719 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181363061 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181720056 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.181117457 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.182089849 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.18064606 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181639435 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181422347 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.181910221 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185992813 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.185552685 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.182873781 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.180328602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.181688685 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181865869 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.181717161 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18179289 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.18219443 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181486726 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182573411 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.180626311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.182230691 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.179952738 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.182264662 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.181933507 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182750383 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184134658 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.187551432 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181654923 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.179807512 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.182524544 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18314667 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180764949 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.182686121 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.190455164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202246121 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.190598362 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.18891759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.186536941 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.183141065 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185194754 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.188558089 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.181633178 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.183536122 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.183624022 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.184437229 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.183352172 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.186878534 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184465337 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.19049082 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.200638611 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.183421531 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192464931 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.201349688 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183470411 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.184267513 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.186732804 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.184051227 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.182594145 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.184149213 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.183375739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191702188 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.203717475 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185552372 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186187945 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.184676924 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.185396922 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.187268847 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185821392 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.186064325 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182967218 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.185557338 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185313302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18611022 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.183821361 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.184633719 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.185776 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.188551953 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.190838689 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.182576196 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186853583 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.18603025 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.186123535 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185375652 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185667334 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.183493587 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.182817729 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186444987 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186268449 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.185585463 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189319986 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.186668415 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.187946841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.187086745 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185945535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18771639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193545985 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.192281751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.183822192 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.185491183 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.188307481 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.18918243 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186524905 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.186687649 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186974627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.188300626 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.188229081 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187020729 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.187307226 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.189915557 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201207669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.205670009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187834037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.188959164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191512896 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.188132864 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.18581408 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.189114068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.190485339 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.191171613 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.194044673 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.188222228 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194592189 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.204885192 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.19022357 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.1908696 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.191468955 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.193679702 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.191921727 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188594865 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.188971478 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.192396691 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.202916015 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189558658 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197732931 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2148145 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.206407156 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.1911486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.190069912 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187733881 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.189760378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.191586899 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.190210788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.189945436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189932455 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.190288593 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.19130311 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194572018 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.191184941 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.192481327 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.191277392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.191114198 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.191749201 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.188058034 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.190605961 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.1917754 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.19165742 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.191072184 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.191107142 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.190051697 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202425046 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.214329627 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.191207388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.191592922 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.189038287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.19556044 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.193648598 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.20051323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.197081289 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.191822359 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.191438189 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.193526035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191833285 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.191283388 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.191996417 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.19288819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191089015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.189316902 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.203822759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213725954 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.196453665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192433324 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192325423 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.19186671 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193528249 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192322073 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192674303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.193691527 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.195029853 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195328709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.19202892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.192180214 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.194785059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.199023015 seconds)
  done (took 704.894245954 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.19156018 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190279667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191115585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.191285503 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191518515 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190585007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190695216 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190586357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.192273669 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190459697 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191209251 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191987231 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191259264 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191880131 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191434943 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.191481792 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191360081 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191999358 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191684007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192083059 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191743976 seconds)
  done (took 26.132540886 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.194358165 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.192184047 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.193124453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.195778527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192685672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.195309286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.192599841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194067471 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.195379677 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192219717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.19480135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196012712 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.192678929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.192375714 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192939326 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195599359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196542145 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19351422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.196559793 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.193025042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195875847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193784477 seconds)
  done (took 27.385859383 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.196693988 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.195803614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.196783563 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.193702049 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.196832647 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.192839916 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.195822727 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.196776262 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.197351465 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.196193094 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.195720994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.197323742 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.20186992 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.200178859 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.197997896 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.197267299 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.340486263 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196255397 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.196494097 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.196440816 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.194335178 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.202362451 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.213056711 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.195586444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.195852782 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.197953535 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.19760196 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.197547216 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.197758456 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.198003732 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.200770602 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.197684055 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.196824671 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.199886285 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.197745134 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.199127902 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.200323413 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.198293864 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.195775694 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.198309055 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.207396065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.213767497 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.197954014 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.204935633 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.217274671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.198596168 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.199871264 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.203891254 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.196099941 seconds)
  done (took 60.010761715 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.198027628 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.198308481 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.196774438 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.199289142 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.198937496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.198502761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.199973748 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.199205205 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.196769986 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.196750414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.199563553 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.198133231 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.196753583 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.200428087 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.199704444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198114472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.1986016 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198090998 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.198198036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.197293729 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.198574207 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.200478512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.200722884 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.199063369 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.201564957 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198227783 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.197757048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.201078028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.198506411 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.198329419 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.201479342 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.201358245 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.201595745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.199285572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.198888598 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.200738054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.201407632 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.199194434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.201313622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.199557383 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.202372164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.202537306 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.202307122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.200940153 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.199224588 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.199383372 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198610556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.199541426 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.199902071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.202674605 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.202353797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.198577857 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202514244 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.199899783 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202621968 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.203421081 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.199828121 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.20041649 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.202740701 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.201033962 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.200883477 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.202630449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.201006497 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.201846846 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.202912516 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.201421889 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.200399795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.202872012 seconds)
  done (took 82.721512095 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201934548 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.201469427 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202310085 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201653842 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202315324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.202124946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2022756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.202376017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.202475318 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202354046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202452154 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203170727 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.203723864 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.203514791 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.20322112 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203087267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203489752 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202599805 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202927079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203202467 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.203478945 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.203317046 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202791594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.203712883 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202889663 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.202757299 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203114129 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203844112 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204218977 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.203822791 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204710257 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.203961453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203789646 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204141242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.20552832 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.203840003 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203882016 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204892722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.205259619 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204459374 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204774875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204279758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204594786 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.204823939 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205177682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.204647151 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204369496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.205516421 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.206036969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205674933 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.205386716 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20522456 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205359514 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205109736 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205836806 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206898854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206157616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205440426 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205379558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206031583 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2055211 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.206700161 seconds)
  done (took 75.773997807 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206759478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207591519 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.204512997 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.204263826 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206972116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204099765 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20694466 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.207769511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206992154 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.206578173 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207810222 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204196602 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20439546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206935822 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205882228 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204259294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205323341 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204969398 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207235243 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205669759 seconds)
  done (took 25.245328284 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205102656 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20761265 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.206171133 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.205147243 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.206375271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.205535515 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.208235595 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208137664 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205146466 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207894069 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209155304 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208443138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206301254 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205687504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.208438721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206386446 seconds)
  done (took 20.436934307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.206127376 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.207757293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209933551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.208971735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.206337146 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.206519316 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.208513946 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.206198066 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.206814098 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.209695253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.210306684 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.210032387 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.209707531 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.208417032 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.206566308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.21003865 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.206985497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.207409483 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.209143161 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.210605094 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.208005501 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.207652295 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.210364496 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.210419804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.207831726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.208865512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208009689 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.207948141 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.208172208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210824809 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.208519403 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208341653 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.208211812 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.208777361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.210121785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.208254257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.211105666 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.210732858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.21066594 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211653643 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211601657 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.20733347 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.210846861 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211288625 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.209326638 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211621971 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.209443732 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2093686 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.208791313 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.208654884 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.211125742 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.210529307 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.211588002 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.212417483 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212584318 seconds)
  done (took 67.635828245 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211361671 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211429289 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210112322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212473413 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212569971 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.210070311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21200534 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.212213098 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210042852 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.211096002 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211212603 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.214461983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210529501 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21301435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210072788 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213782276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210645362 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209927714 seconds)
  done (took 22.937741211 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2104559 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210900976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.212852367 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210130235 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.210634128 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214569402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210122161 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.213709121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212807008 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21128439 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2107361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.213585791 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213159356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.214353246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211189562 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21101901 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.214169959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214040981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21164761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211728707 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21471706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214726223 seconds)
  done (took 27.804675736 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.212706215 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.213005409 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.212045084 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.229456386 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.22891957 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.234234523 seconds)
  done (took 8.462887833 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220064942 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215239428 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212169684 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216306605 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215111624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212249889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211788826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212572502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21490605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214322937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212422243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215782121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215138822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212685533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215480515 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215933724 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213654741 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212979607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214502861 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215273535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213822367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215887533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213762959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213490073 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214164694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214022575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215650961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215503102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21374188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216604711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216376665 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213116293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216841324 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215002491 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217187168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216176186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214933245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216767655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217323641 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215159904 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218391224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217118778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217391793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215092544 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217421697 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215035808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215339878 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214214078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215678542 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217920062 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217161467 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21488491 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217080054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217605757 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217996296 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218520292 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214908356 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214855075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218535233 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21599741 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216263475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218131405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214726389 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216175152 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218674529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216529115 seconds)
  done (took 81.382590768 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215121272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216203927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216052008 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217766067 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216858026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215908346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217199555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216049773 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215472413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216101692 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218858575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217674074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216133276 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216672426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216514626 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216813336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216730249 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216921805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216810815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220165157 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217902336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218499608 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217122468 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21720286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217669325 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219822027 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217624135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218352068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217482353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217337133 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218106118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21898797 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217765754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218493823 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2187247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219424998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218796903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218589275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217350747 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221890695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21835045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221523674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219000333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218600353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219989626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219650371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218426298 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218666329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219155808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219133179 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219434533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219239183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218957536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219800746 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218572572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220371268 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219040346 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219640037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219938928 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221437609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218900911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219979266 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222656736 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219376102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220249911 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220863739 seconds)
  done (took 81.553141565 seconds)
done (took 1653.467989499 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.303236625 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.287178665 seconds)
  done (took 13.729991406 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.381362839 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.335922956 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.219329196 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.223722214 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.219516613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.214329841 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.237444422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220259826 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.220326941 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.220079477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.219970293 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.406902684 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.271072245 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.220914869 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.220353389 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.311775156 seconds)
  done (took 41.286066282 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.243478007 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.228650498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.331356734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.248481066 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.250762781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401097999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.282981596 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.232968983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.386219175 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.271490904 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.706717238 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.254028611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.227995775 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282562445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.25001041 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.400203364 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.459210954 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.717167115 seconds)
  done (took 28.317088459 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.639113493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.234199753 seconds)
  done (took 9.016104869 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.244746423 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.258241003 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.238891473 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.24656706 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.245967382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.256924245 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.269061785 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.272281574 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.257211495 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.250080874 seconds)
  done (took 63.68562453 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.24712254 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.230533693 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.229171686 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227893606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.219849733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.225300488 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.226779039 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.222968237 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.59037795 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.349657673 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.251507479 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236747672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.244990436 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.230524678 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.226771275 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.263761362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.363258071 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.245577038 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.225840847 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.234486933 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.229778436 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.335964437 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.271994236 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.231975889 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.345184533 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.611373389 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.237123483 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.235262249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.345804414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.246245547 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.229302205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22997592 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.231369094 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.778707642 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.664925503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.243169855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.258074074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.237946351 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.228961831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.3657189 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.249276188 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.237006587 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.22402423 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.660130614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.387445107 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.342550682 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.394438949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.236808249 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.232332735 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.288815741 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.233012647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.233590814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.258769863 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.968094292 seconds)
  done (took 104.946839443 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.242177837 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.71310705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.393074799 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.240964312 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066272647 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004632582 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.244374764 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.488874403 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.278840494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.22351976 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.514415674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.71858337 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.244995042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.287831487 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.715187281 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.296620428 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226677696 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.122625014 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.246284415 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.231264688 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628767234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246628791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.243955405 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.489594067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.263153003 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669184307 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.602819055 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.657211019 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.24999583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.226838582 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.676301787 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.24813562 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.26271018 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229332682 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.490318656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.567256444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.553086382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.243964677 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254181835 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229531133 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.254152849 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671355835 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574968284 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.246681654 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.232006036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681657052 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.247208087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.234785443 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.226307224 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432642753 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.149159199 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.234142203 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.597557173 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.23213868 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.487561285 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.303174899 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.247329868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703822983 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248432387 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.328037601 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25580144 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228623778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.235475646 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.231982173 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232439727 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.560324457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619474857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.235061583 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.561212912 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.692438536 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.249571387 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738065939 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.07362244 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.259563073 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.271435192 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.229532857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.932615423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722536425 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284793568 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229790444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.547377204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.251382963 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.497914454 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.248905974 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230380607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659737623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.256447259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.286163756 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.229247989 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.235257248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.997893507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246011022 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.492077099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.286065419 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229523768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.229930144 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.24941971 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230256484 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.235066755 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.23296139 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.735519876 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.253090944 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.525888906 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.252025854 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233094703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.249071474 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.232571613 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230287928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.452332459 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.649781122 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.24179047 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230543085 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.23138268 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.25442147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.454808514 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.23846113 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521587081 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.25298131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230534254 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.251697258 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990917561 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298303291 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240367271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233749032 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.075826697 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.458206461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247574945 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.247209854 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232424642 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250403771 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.531274911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237584625 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.307281035 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.235845888 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916071285 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.283702179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260858294 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.807302847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.24393308 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.205697102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.25546436 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233599962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.529922794 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.504786017 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.535063951 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.235525339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.249358789 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908500619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.285887983 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.366957971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.250250558 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.274518697 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430350748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.533947656 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.235346041 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.78702638 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.2319305 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449381021 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.239672391 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562709197 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712343288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.254818569 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.242837842 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922946333 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943314301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.911440919 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.238541396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.502620614 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.246848808 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.685049868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.233777991 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.233913303 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.827180652 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.242230015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.238764573 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.235218065 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.234398937 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.290834594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.410120184 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.575297137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.236555604 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678912622 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307643859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236028754 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.237365073 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235124585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.589558441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.244942136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.2385878 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.275240793 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.235012935 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.239172497 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691875169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.121293054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.241313502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.387618768 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.849715699 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.255759272 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.236930885 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.891471176 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.441608468 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770684261 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303942464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.529838394 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.26763903 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.275673761 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00001646 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332116406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691501253 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.258791383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.236774596 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830712582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.257755731 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.316436281 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237003675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.237827293 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758039631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.257846957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242849584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.540637696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243540118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491834993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.243059373 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.243455477 seconds)
  done (took 1089.488678281 seconds)
done (took 1351.60762552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.239071663 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.23842243 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.227171543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.244500083 seconds)
  done (took 26.110811387 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.247347097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.243360772 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245097625 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.243347689 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.247169965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243877305 seconds)
  done (took 8.631148183 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.284141487 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.23831667 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.244289983 seconds)
  done (took 18.929002726 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.44978317 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.524876446 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.58869299 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.411789775 seconds)
  done (took 10.136588864 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.246281024 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.246631032 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.244213674 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.246675822 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.248369231 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.249169847 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.247133358 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.247919102 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.250635894 seconds)
  done (took 12.388342716 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.007820062 seconds)
done (took 82.361822678 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.778321023 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.325563742 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 5.5255541 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.014329312 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.247103177 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.52968682 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.503485678 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.46394203 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.485226366 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.481331638 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.572072228 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.236735543 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.600823894 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.282534786 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.268810755 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.225467726 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.630123458 seconds)
    (18/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.436072178 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.449010321 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.241497138 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.31790001 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.589249619 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.28076791 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.782119427 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.8224619 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.460647838 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.606458377 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.250633021 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.649759078 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.504704209 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.029370538 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.573564534 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.069393117 seconds)
    (34/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.26486515 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.600995422 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.457449212 seconds)
    (37/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.860653244 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.344525865 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.434621196 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.855596316 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.30716836 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.046563621 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.786134975 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.460784496 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.255439859 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.270969395 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.243082852 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.601293578 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.28863556 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.833934931 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.835043554 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.252989041 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.129269153 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.224100556 seconds)
    (55/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.019358312 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.331837162 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.355297007 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.269872729 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.367485531 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.277766415 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.517905037 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.271680352 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.640950329 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968266186 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.270355601 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.300878168 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 4.295382069 seconds)
    (68/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.762350756 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.271050682 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.85757496 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.029244335 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.770002571 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.130326749 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.674361615 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.245758627 seconds)
    (76/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.286299631 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.902877867 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.258513832 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.229575299 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.875725789 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.61834758 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.546667579 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.313402883 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.62271235 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.265542814 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.351267399 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.372562539 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.273008001 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.067327925 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.302582888 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.34644563 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.432440647 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.262660305 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.407512933 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.331138612 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.452890111 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310860906 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.328880241 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.630613419 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.252187061 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.360343873 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.075518274 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.247055585 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.278368821 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.521694296 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.352510015 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.345468459 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.602563441 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.263955885 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.275171225 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.306545844 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.34896586 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.370494316 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.354389295 seconds)
    (115/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.247807619 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.563550404 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.099681253 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.330724457 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.758380011 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.799548682 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.94677158 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.491755271 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.581758393 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.592905037 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.824974964 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.975243229 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.248934841 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.61020591 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.230409475 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.307110766 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.632144674 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.278494491 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.730836489 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.249538898 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.279651279 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.539025387 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.947403713 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.778094527 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.293005141 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757645356 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.947254181 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.65926932 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.240852841 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.528018014 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.086749841 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.720718058 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.319645478 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.968878222 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.510950742 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.130028295 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.858552314 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.152400908 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.884312439 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.974440186 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.395655113 seconds)
    (156/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.845222214 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.112356528 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.39369337 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.272100935 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.353755721 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04973069 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.548895036 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.249609644 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.261092587 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.335265492 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.559613799 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.29354765 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.665877562 seconds)
    (169/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.2802116 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.993292101 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.272693365 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.242217619 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.194993464 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.277055673 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.250641833 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.287326756 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.597913804 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.544936074 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.591206624 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.697647227 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.446019174 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.355347417 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.574288461 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.658687812 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.291562468 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.310515361 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.2609763 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239665005 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.066644402 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.955535901 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.267032761 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.140291465 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.27379159 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.592169925 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.138428173 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.553195681 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.951702469 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.552722885 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.726592205 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.24287128 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.280592513 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.586527536 seconds)
    (203/309) benchmarking ("sort", Float32, false)...
    done (took 5.235839811 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.269107131 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.845968081 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.300958152 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.240473264 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.335679399 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.253377982 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274617599 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.245480052 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.292353636 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.335647695 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.31034298 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.43229384 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.001210129 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.099024362 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.375505398 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981039649 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.283761061 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.258623919 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.878203762 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.465061794 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.457673307 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.27811827 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.236253819 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.30507325 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.338931234 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.663510985 seconds)
    (230/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.62071766 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.379220752 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.40924662 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.294754022 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.281521556 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.296551959 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.729654069 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.076350073 seconds)
    (238/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.245127474 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.791762589 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.380759588 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.659632539 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.272755784 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285252545 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.513672045 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.084795597 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.999068505 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.258789969 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.341701705 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.269633689 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.26359761 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.887765114 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.367723603 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.476414532 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.621853709 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.82573334 seconds)
    (256/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.638135842 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.260432277 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.501471526 seconds)
    (259/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.37890482 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.236818965 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.292801657 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461174135 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.396350406 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.673275863 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.277241882 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.620441589 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.276052386 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.303225609 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.284177715 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.25626738 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.315467786 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.265118027 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337643566 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.321892682 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.640030387 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.702234376 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.977310859 seconds)
    (278/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.600322116 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.331506144 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.737186307 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.468519356 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 6.276343228 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.288065336 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.270161911 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.071138338 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.350371688 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.286022298 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.586605085 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.243564941 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.342512457 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.373180201 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.359034152 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.343648228 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.378578133 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.044506441 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.424488184 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.810145775 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.362224255 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.277867774 seconds)
    (300/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.507050477 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.303261873 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.806642819 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.244286572 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.252455452 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.665544684 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.281490409 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.239464815 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.99373459 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.256618049 seconds)
  done (took 891.080130687 seconds)
done (took 892.243540247 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.292775385 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288033982 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.270573905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.291996474 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.382613393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.293307825 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.281339367 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.272808638 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.31843016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.320021551 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.269537118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.293133844 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272086825 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.270752575 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.270154027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286468278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.257373882 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.271697402 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.28746051 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.280476241 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.289128104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.270267774 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.321280777 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.294226947 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.275407859 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.273828262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.2742048 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.290703498 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.383378854 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.274514971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.273921359 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.283385353 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.25643962 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.270989339 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.267518261 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.29145846 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.282834166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.281742442 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.275593494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304253662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.639235865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.288518516 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.274493244 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.273619198 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274439019 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277747363 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.274282282 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.279696521 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286364805 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288241023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.630003825 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.302741285 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.276236083 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.273943264 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.283873461 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.273469309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.276888365 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292102502 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.294366767 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291135696 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.244508588 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.279558295 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.276519499 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.290491805 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.282257825 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.66971871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.285959183 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.27875281 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.639455409 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.295538816 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.667792411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.298782791 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.275909804 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.288370453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.305975773 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.261223343 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.270484079 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.274083535 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.282304434 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.273233531 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.284601617 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289551809 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280164718 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276334149 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290237171 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.299349727 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.285820087 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.27682524 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.285228087 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.294950692 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.282986292 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.28712216 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.279061486 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272043116 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.285869197 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.279944193 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.280460891 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278829249 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.281776111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.288007605 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.642125072 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310717502 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.273555553 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.273817759 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.276525181 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.291147975 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.640738734 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.293637959 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.299424975 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325616095 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.278390041 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.251856714 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28019341 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294818396 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.28609744 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.28086237 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.274046578 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.252215353 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.636945134 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.307091573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.280377375 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.27582818 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296648506 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.280292491 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.275484761 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.266802902 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.279292222 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293497352 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.399277558 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.28890279 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.310647269 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.276695117 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.282491633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.30264359 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296374015 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.309653921 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.281571223 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296036031 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.29393658 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.274819375 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28993982 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.290030221 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280035843 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.284340502 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.273392385 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302837048 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293070212 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292853229 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.300686659 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.400957064 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277695132 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25418967 seconds)
done (took 215.637708886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.339203233 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.273272401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.363445377 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.275796732 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.375742083 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.397827379 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.274676876 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.274786063 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.274020813 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.659540802 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.274611454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.275009113 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.276185509 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.275018274 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.360414884 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.276589765 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.274504174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.658967005 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.276536807 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.346314102 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.277006518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.274716752 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276650523 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699403744 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.271701959 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.272594219 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35707898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.277555474 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.621596644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.272953774 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.273206785 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.659396571 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.37718074 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.295225313 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.287308857 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.285745191 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.395839738 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.295864395 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.378874182 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.361178229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.380877345 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.317658664 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.272642082 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.274173707 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277966439 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.279015245 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.275073659 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.305665611 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.275803119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.277045766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.623084325 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.288699113 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.277714273 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.277448192 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277520801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.3091345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.276297034 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.279980276 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.36826505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.280064614 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.348321942 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.658088508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735007113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280199721 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.275282352 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.277635472 seconds)
  done (took 144.97513594 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.346827072 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.351724174 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.388870413 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.296384851 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.329686831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.3937389 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.296913616 seconds)
  done (took 10.598556097 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285077956 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280467904 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.329941394 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329273477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.280366949 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.426558722 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280235135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292577282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.278337341 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.33277841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.282165229 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281846969 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.287820078 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.281001967 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327724273 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292982574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394965704 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282914355 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281242667 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431847296 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280103824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.289232253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338812764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.29224416 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282088967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287351079 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853073743 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281595741 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278951242 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.282573643 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280384214 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.31885605 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282308589 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280023959 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279177065 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398547161 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.281467803 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280844177 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283694515 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.280825427 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.282913881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284007569 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.283906585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.281008708 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.283603999 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305906132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.283383465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.283772735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282391255 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.284320043 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.334091316 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.28379529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.281338958 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.282123799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339698751 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290884306 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283943883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281812071 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.283920031 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281708907 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.433246449 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331780504 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283563159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332366383 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284176215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285022431 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.284851573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285886967 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339731464 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.285204051 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332524892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.282487625 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.437050028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307308632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28713982 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.28746093 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.286794619 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285302706 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.283334944 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.291050566 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282623371 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.286226645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289553127 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283439676 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283645892 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387750094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393332583 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.283201539 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.29774642 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292342004 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.283589839 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.339259116 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.286223311 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.284285591 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339644825 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399889907 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.34715959 seconds)
  done (took 148.275326648 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.290716261 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.293996388 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287537192 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302828493 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286852362 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286126151 seconds)
  done (took 8.949166019 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.289208948 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.288566631 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.288342173 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.286742269 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.286910521 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287932783 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.287939992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288395487 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.290659109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.288423225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.288295096 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.2894272 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.289171597 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.288202778 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287591199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.288312772 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288005824 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.285147886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.288548266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288333098 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.382030759 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.288278068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288179568 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.289390951 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.293350337 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.289550098 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.295933962 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.288164094 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.2889198 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.295221477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.307693562 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288580167 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.290300587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.295526821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.291519936 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289658523 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293419902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.291731721 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2872111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.289804494 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291244538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289461429 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.290646539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.292320346 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.291805678 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294082648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.295157167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298369205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.28936916 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.2904576 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.291860317 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.290630891 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.291440258 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.291276713 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.292315056 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310529324 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.294883588 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289112778 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.290775228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.292727063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.292337419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291541503 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292331655 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.293856654 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.298638265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.293644564 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.292220629 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29459215 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291063837 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290905846 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29370818 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.288834485 seconds)
  done (took 95.263791362 seconds)
done (took 409.25002806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.58917442 seconds)
  done (took 7.79445691 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.456542714 seconds)
  done (took 7.663277663 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.132825084 seconds)
  done (took 21.342287376 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.364485247 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409353394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.290725689 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.290958642 seconds)
  done (took 26.561672073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.633423764 seconds)
  done (took 7.839559599 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.290450526 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.286423186 seconds)
  done (took 13.784165465 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.682800593 seconds)
  done (took 7.889159915 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.469625448 seconds)
  done (took 7.680950857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.317535148 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.317946056 seconds)
  done (took 14.098230378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.267613133 seconds)
  done (took 7.47535251 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.039364665 seconds)
  done (took 8.24850494 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.293160403 seconds)
  done (took 7.502354029 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.290763233 seconds)
  done (took 7.498361313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.082274523 seconds)
  done (took 9.291312029 seconds)
done (took 155.873045866 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.288518541 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.703551313 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.288038579 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.288114397 seconds)
  done (took 26.77587293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.329119885 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.329233108 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.329974605 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340064909 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331895955 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.330533889 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.322854269 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32188593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.340409507 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.331587231 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.330859885 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.331463478 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.329838503 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.322711462 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.331514554 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.331571131 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.340284492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.331143777 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.322567521 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.333437856 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.297758527 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.341196737 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.333759567 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.29757029 seconds)
  done (took 33.092945824 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.817063712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.367680658 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.449927393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.349012476 seconds)
  done (took 7.193364789 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.349698046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.350433694 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.362821198 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.401958516 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.428868714 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.361653253 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.324651629 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.319726311 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30675933 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.353640245 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4261718 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.367623301 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433222002 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.297821193 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.485242597 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.297569268 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.298028679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.350768352 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.401846935 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.416844028 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.298976485 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.350331081 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.353477396 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.367432121 seconds)
  done (took 33.917336818 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311388346 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.304683537 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.299220778 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.298004214 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.318500938 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.298507198 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.299229418 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.299521135 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.297902964 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.304963027 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.296997349 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.311508831 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.297920937 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.298268687 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.303997915 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.29932586 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.305141136 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.297767231 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.298548567 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.301078209 seconds)
  done (took 27.25415488 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.292326542 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.146662284 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.644484006 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549587419 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.291652926 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.295767053 seconds)
  done (took 27.43288169 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.367366541 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.515725642 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.300714131 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645988743 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.737811751 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.316838663 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.300851021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.532659131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841375607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836506906 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.359432625 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.365970556 seconds)
  done (took 19.333530447 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.294590213 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.295760305 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.30128747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.313039225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.352565088 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.320232904 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306661263 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.293000436 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.357304598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.375357391 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324249305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.354541164 seconds)
  done (took 37.103609117 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382756344 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33952433 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.228983601 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036673193 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015479837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50692365 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.058798081 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.720028826 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.300804543 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569578319 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245807263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406393497 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551930813 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296041791 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316000259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.251294385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540960225 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779758565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301086242 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.148649435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326013421 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29602574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.330451984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.330278905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507931949 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275545357 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.58639359 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074159252 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577148002 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312514859 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307897884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297909643 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572195567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952109581 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411163208 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307653907 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.004834686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.843440501 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.280423443 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.171699613 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.03371662 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303193354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308220159 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298338547 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232549569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297723821 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730864237 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.305874476 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.009819756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297852782 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310401966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393140073 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.303154189 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870287185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318036838 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.305866772 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.296026433 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305042856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873520687 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644636552 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315112544 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.238780953 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.679383572 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161557567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924352557 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.418777973 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.303589388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303396472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234060431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.237735806 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319393643 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446320478 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325250978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949804698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997154555 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295258508 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250025862 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851389536 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305521693 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.256799047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527801907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075753384 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235734819 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.247386617 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235462302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01346241 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313226746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.666779796 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311754802 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721083374 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.312728201 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320381413 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325049911 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524060169 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.178706736 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301380512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.047137102 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449603615 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322952974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.722968464 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236759017 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.305419742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557458373 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.513457213 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305644557 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.265300658 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518557782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310324717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.324969215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301948587 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.315420143 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.867044098 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333135267 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642094356 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32175198 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.076988013 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03884877 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307586537 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.406913121 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291933469 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565533284 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.057680689 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207892789 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370045407 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306593192 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302901025 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.270827599 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156767691 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.185005602 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.300217432 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302419232 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.333722361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.304259172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255619977 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.301205385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32196321 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.101349056 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526676027 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318744048 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582219811 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238475692 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451050704 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313764723 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.527609425 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497457447 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.321094092 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563986487 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315958222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308189066 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318396339 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323306314 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401921324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32635294 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.308602501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564270622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.3086416 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.309258792 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.287016728 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.088768164 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304344519 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.310013233 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.139404746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873619318 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301360557 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313335416 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192756261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321428218 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373896623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311558423 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.315858856 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.065941947 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.154118508 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.313688652 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.313883234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529254361 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316506418 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.2295552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385844741 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.497858863 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876450506 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336523805 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.241598261 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.017248942 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.998414118 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306259912 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.506149111 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306090671 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31662221 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31867135 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.81826064 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875093254 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326562384 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.231270634 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.314338476 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317720715 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.313409236 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307512298 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.057299482 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.696568915 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318475864 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322039551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451748735 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.321362691 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.241606459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825307907 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313895283 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308709651 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.085992976 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342870299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.223614511 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777031919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569208849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.051723592 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31963774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.375221414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.344124359 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.31061574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.142356393 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328148383 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.316460721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334292515 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.319332291 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.324725226 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.747778289 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877756485 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009135898 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855698263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238864828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.312646004 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.211413211 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740150916 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245012999 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966705473 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493096011 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.754261867 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255832232 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504432173 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500065456 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079283507 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321457447 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53737776 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216623516 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.146176012 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340864674 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520774908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34510642 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3113132 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242590737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.591493092 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539961731 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169536824 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389156411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740791498 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.150965528 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.106714271 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.310978549 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.647001893 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496647403 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940848795 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698538231 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31625692 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315168503 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798273604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320430909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836664224 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922146135 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331204878 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.526871288 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248522767 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.322209578 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.323039224 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.308353601 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.577918477 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.33389776 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.566370175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323308722 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246290289 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312475187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835671003 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183756776 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.318049056 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312699316 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07424332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32357791 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59796844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.318210378 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.070111489 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335547785 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.24791373 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248546384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.007494451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315971785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289586385 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813781106 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.694580671 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325373484 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337390163 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165714133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570092749 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.328211163 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886144452 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556930788 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.117560197 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340704834 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.414816495 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.189078823 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.317830505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197039646 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.550582379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152391639 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.538680393 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.28116667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.214561691 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31375349 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527829805 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.211054514 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329333581 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552861948 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.046567877 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.326608076 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011070267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358349012 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.316274462 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328618929 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.698286608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325524592 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386977567 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326242702 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.326080133 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326404329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482603848 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320130434 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337395029 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.329325466 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40937426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686856053 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.080022046 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.106205148 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890871543 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057757653 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910683821 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349133749 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318026722 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326039201 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25041698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46592685 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841147044 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591300924 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446736226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.779349553 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340054537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.194688239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351524865 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534312235 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593024449 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.187678763 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318773284 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999146521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.218506947 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327788097 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.529514826 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821368122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893537121 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433667228 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331280983 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.74689645 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593920479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400602819 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318702672 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908342797 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.33605846 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.669066107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.347759503 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323473234 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470882503 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328910155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970024672 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348481229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.47867287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.093624594 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.329895999 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579782129 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780416841 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335749113 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898602883 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024821022 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587313885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389881583 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331766522 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.433749985 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465554396 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.326795449 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.227233763 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320987441 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16448533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.030761555 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.331112083 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895868259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599498418 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.316610326 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.326586985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348446499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.330911876 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544593661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027545218 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54882619 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331150346 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322914574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.312599869 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899607883 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351978085 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256505834 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.326910398 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55898186 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574708788 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347761285 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81663063 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.03258784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878298634 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.298064115 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344770632 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324608231 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018082995 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898268869 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.106166816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827825294 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98534371 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334258285 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600649352 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.327737891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332229652 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605765645 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.326317144 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333161372 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33892901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.89878705 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10191087 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.339743768 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.261640844 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.265015462 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.549463373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975049379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260285194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333736037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.496836639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32565373 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454275584 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3361783 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.329274189 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342339841 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.060927216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605521087 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330389341 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.304995964 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.231233521 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34464997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334122439 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556729216 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331626082 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.9976944 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.674312155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.580969329 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336312978 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.308538481 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.328878276 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324907277 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042699135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294762077 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.856620655 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898252425 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.34372746 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.341815266 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330015195 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541914387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537676729 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331375936 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342227825 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329994678 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345840893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.232395934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093197468 seconds)
  done (took 1570.860138904 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363211737 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.377415111 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.345259579 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.435649147 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364576945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457438394 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.386145221 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445535442 seconds)
  done (took 52.419675234 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.332015365 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.479044353 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.356168912 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.334400626 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.338773237 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.325790834 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.774127323 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.352677364 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.340148295 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.336914889 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.332751051 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.332025446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.969558128 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.335678959 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.326746865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.324731101 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.338351032 seconds)
  done (took 65.180941401 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.33628458 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.85913877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.426889979 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.33030703 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.316606679 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.352000955 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.037751866 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.364485344 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.328020854 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.653190224 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.006709973 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.372633067 seconds)
  done (took 84.629856267 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.335024355 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.336517973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.335885307 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.336195042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33529339 seconds)
  done (took 7.923988883 seconds)
done (took 1994.324331837 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.634614771 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.00255594 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.954188644 seconds)
  done (took 5.202000246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.475489424 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.523872847 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.644071974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.649086459 seconds)
  done (took 7.536651729 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.612055344 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.700721204 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.520155098 seconds)
  done (took 6.077337007 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.709318456 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.346818906 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.468839581 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.327535757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.332775744 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.334466055 seconds)
  done (took 20.240518192 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.331572582 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.335065615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.332093482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.334848911 seconds)
  done (took 6.579586275 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.308773431 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021860042 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.310273672 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.330900315 seconds)
  done (took 18.217383231 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.078986817 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.091460715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077022265 seconds)
  done (took 7.494388887 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.340025872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.172650458 seconds)
  done (took 9.759310024 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.624274444 seconds)
  done (took 2.870569418 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.465170106 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.660527193 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.345534642 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.305786056 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.378763796 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.101731425 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.919471264 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.533960995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.274943174 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.44123206 seconds)
  done (took 27.674314512 seconds)
done (took 125.053777811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.099661594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333904568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.539604364 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.068421927 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.560884496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.54188836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.52527551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.030829593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.577576271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.567050825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.066139122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.565200008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.472730716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334851716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.472892221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.335259892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.565485944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.147386098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.747584858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.94838077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.532675028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.703875274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.896571752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.778751888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.565943725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.486900037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.288693094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.337296822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.015150755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.360848921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.492214936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.120169973 seconds)
  done (took 188.328094278 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.333128228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352096508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332025718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.331931285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.331285008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.35393653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334815791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.358309274 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.331820625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336477642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.334004503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.349661119 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.335349471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347755437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334397247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332846418 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.332504768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.349495655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.332453918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.349083237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333309376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.350026544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.333596904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.333136757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.336652403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350185669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.344317379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333678604 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.352527164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.343839659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.336943219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.337587653 seconds)
  done (took 204.12973447 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.34194186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.34837268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.333763798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336643118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349824232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.337805584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.33477873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33807683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.339405911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.338360612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.351334717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.350849525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.333580743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.33605818 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.337342039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334260828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.343244352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.339107787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.345839733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335007576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.334793463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.341935289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.334366708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.334840579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.347786463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349738283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.342432434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336035456 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.337124478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.335576008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.337694148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.352240779 seconds)
  done (took 204.143535773 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.538191685 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.343363461 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.343871638 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.296286451 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.344554404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.342817752 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339787225 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.533399173 seconds)
  done (took 14.334883493 seconds)
done (took 612.180368974 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.580293128 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.301474439 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.54032421 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.364229997 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.067992144 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.381418842 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.363568108 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.529875476 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.252732048 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.53711005 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576527681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.37748801 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.720682788 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.365800381 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.617769744 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.461224186 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.255786891 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.377294425 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.684924951 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.860463367 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.62187478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.819879724 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.54974334 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.24922131 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.722324168 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.812057029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.02691917 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239543805 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.380438469 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.685367044 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.954319998 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.262992318 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.423800789 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.421198557 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.480241608 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.460446754 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.249362321 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419543075 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.559370542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.589750279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.83765262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.070831212 seconds)
  done (took 91.307635993 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.329638835 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.328621233 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.327989332 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.328620813 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.329146541 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.328085776 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.328220678 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.328212608 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.329012652 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.328058355 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.328304026 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.330584776 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.328653715 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.329897251 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.329207671 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.328361816 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.329927579 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.330279122 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.329192605 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.328422347 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.330437238 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.329161995 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.330259845 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.329812991 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.330538882 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.330119554 seconds)
  done (took 35.815091767 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.348191565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.599166185 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.75588782 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358957026 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.348515948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.352318091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425308293 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.351986539 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.351228378 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.352271414 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.51795481 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.351568829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384304862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.779105172 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.351917286 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.351394786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.357067887 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.349180262 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606297158 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359688944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.448902175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.350902424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.426209087 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.36030426 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37336767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350362573 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.355964718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.867499381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.369064968 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.517975501 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.128882561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.428614036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.818786695 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.779614725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.125847326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.35577068 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.351991665 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.523181549 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.352833317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.351305819 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.426801652 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.351876389 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.76113563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.970593154 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.369083461 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.352148829 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.888226065 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.539356405 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.590045211 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.363555603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.785055618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.357402766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.353054066 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353169152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.592315458 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358905309 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.352255482 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.878936687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.374505527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.42827671 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.352688375 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.35143572 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.613276418 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.35342047 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601618486 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354838423 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360510049 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371820468 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.764010615 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.356981296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.992409294 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.374147853 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.354173896 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.520224111 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.601761296 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923452616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.375269567 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.616411786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834121465 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.44478388 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.35793441 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.860030356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.448640382 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.358010212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.356556768 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.357124171 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.353851773 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.400313411 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.428748602 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.918831699 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998439388 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.900435439 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451434627 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.367225119 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.355136107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.882269352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.371949211 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.354474476 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.760605294 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989783486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.371521459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.362028505 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998039426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.374228864 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.431879641 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.360632827 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.771631772 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.35992876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.401574989 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.35570553 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.36158458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377339189 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.432654796 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363202693 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.356381875 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.967515987 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.551572399 seconds)
  done (took 177.985036036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.358167119 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.349615499 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.356095362 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.349502815 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.348357691 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.356830946 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.349577046 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.349218885 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.355677225 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.349925733 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.349825974 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.351502788 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.351036755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.35374516 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361126661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.356725485 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.962593987 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.351885195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.351068414 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.366827015 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.143829944 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.355789079 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.350077451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.351024755 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.350532101 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.352812978 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.355376103 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.353385905 seconds)
  done (took 152.557788134 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.358924461 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913385579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.380325849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486204296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.383890045 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.356037164 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.485209423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.417314233 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376034709 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.357149074 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.356871052 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.65847385 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.36475938 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.865543216 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.552677679 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.50405101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.866730836 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.379271587 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.357367251 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.356850633 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.488737078 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.36635238 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.655637363 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921192159 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.381352816 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.915941067 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.349265525 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.360510212 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.358033127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917650719 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.378921085 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658671364 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.439613757 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.421909359 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.93390889 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.885138419 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.879284755 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.505553544 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.359396245 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.357851296 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.359733551 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.343857872 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917881829 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382230897 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.360385315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.907058422 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.382919196 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.362105385 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.369030739 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.358865565 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419105054 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.436075092 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.67904467 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.929902638 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.456521698 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.385052673 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489737443 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749897037 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.363285363 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.868366788 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.348428844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920713942 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.379561095 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.345266521 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.362653849 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.366832199 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.507917347 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.493910377 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.873095997 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.383625608 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.869816124 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.528699857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.364426568 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361128234 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363837833 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921201047 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.885826053 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.528146289 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.497993004 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.556543516 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.350741468 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.36179937 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.346387492 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.438055733 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.365548805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.9219445 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.887293867 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385815816 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.36359908 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.365240475 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.36463356 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.536274774 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.941483534 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.455985296 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.862155845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680798217 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.663239121 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.364845934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.421659877 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379244238 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664246821 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.365603953 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.420295766 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.812958652 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.666502437 seconds)
  done (took 162.350709634 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.599935396 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.548355091 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.4544914 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.49240321 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.945774132 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.919129602 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.5619569 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.499614256 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.472696435 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.615874475 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.495025188 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451224679 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.54138184 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.441992653 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.095947217 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.44987011 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.469787839 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.502196773 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.474975542 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.36495224 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.988932733 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.652487788 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53215361 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.279428278 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.457713211 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.142891683 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.923136177 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.945096796 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.534430405 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.641508463 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.897740854 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.479703401 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.298735842 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.029301242 seconds)
  done (took 65.474509292 seconds)
done (took 686.74034047 seconds)
SAVING RESULT...
DONE!
