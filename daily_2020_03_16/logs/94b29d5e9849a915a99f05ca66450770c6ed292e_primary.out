cset: moving following pidspec: 7309
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.277909425 seconds)
loading group "string"... done (took 0.625005082 seconds)
loading group "linalg"... done (took 7.485225712 seconds)
loading group "parallel"... done (took 0.153138746 seconds)
loading group "find"... done (took 1.189152249 seconds)
loading group "tuple"... done (took 1.768403815 seconds)
loading group "dates"... done (took 1.239267242 seconds)
loading group "micro"... done (took 0.218146955 seconds)
loading group "io"... done (took 0.894660656 seconds)
loading group "scalar"... done (took 36.838486152 seconds)
loading group "sparse"... done (took 11.665283574 seconds)
loading group "broadcast"... done (took 0.9370679 seconds)
loading group "union"... done (took 12.053780252 seconds)
loading group "simd"... done (took 4.447448271 seconds)
loading group "random"... done (took 8.904223416 seconds)
loading group "problem"... done (took 1.816247629 seconds)
loading group "array"... done (took 20.579848588 seconds)
loading group "misc"... done (took 1.683982579 seconds)
loading group "sort"... done (took 3.248264762 seconds)
loading group "collection"... done (took 16.959899677 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515672545 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123652651 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132231421 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118437856 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146587521 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117040229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124924828 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087438971 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.826806165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146770164 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116687873 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397416123 seconds)
done (took 5.310311319 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174604753 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083889584 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084966567 seconds)
  done (took 1.307937603 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068347479 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126539982 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06994416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070158971 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070217666 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069618658 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069412683 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071315439 seconds)
  done (took 1.684819066 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075808324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07232976 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068937404 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070770131 seconds)
  done (took 1.427862482 seconds)
done (took 5.8154842 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745874054 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208381776 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185339383 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.380279862 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127091266 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169757515 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638072609 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317739009 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188042479 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07785674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108530334 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337842806 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120288752 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643814455 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076390578 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091269286 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140685263 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435120427 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069738853 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087373154 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091729803 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131206672 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087145928 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076043892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148604918 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070041431 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132633681 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083025648 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068689293 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213908782 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174870342 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659704298 seconds)
  done (took 10.259595439 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10006129 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099713041 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07086527 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127695328 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099910074 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071911939 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077693937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070033557 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091303728 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130962424 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092652674 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107597915 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068865816 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07075755 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086316946 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209409594 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083692437 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083253023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072689715 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080734814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109682668 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081926788 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082430728 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082046864 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131031316 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182541724 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100788914 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100304327 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068883115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083943633 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117298741 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129186716 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068779184 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06799286 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127031104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096919258 seconds)
  done (took 4.705577015 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.95349661 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141468475 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089916168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132428583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067638411 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111895567 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106852034 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068528567 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082566392 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204450476 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.355755438 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569032232 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110980725 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111939447 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104381332 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070117984 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070777665 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070231694 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.431988126 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098996993 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107670361 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082554189 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072501518 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071738722 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067455213 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069434476 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066552992 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070390954 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115116827 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076693514 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.303885683 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119651238 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070437269 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.99588663 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073220169 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.303716535 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069860519 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0693733 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103126389 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092913335 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068175955 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137892968 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070870374 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068679563 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155222115 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067640449 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072565129 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067881086 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086725364 seconds)
    (49/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069226279 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105319818 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120063992 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068506487 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068984356 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164397569 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067705606 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080229208 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.105202073 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155146935 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068762041 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262485747 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091921017 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072183171 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067853152 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.143129924 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123339338 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070514234 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069516687 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070857998 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071125021 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361125852 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068641673 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.888167538 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072568574 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082289875 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071719614 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071949821 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075195284 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074942581 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090018497 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068516806 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076369924 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068941082 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069286394 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069145251 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.0844025 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.477221723 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069479792 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070194998 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068421688 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091903842 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098143139 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069111551 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068473465 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104241109 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070513658 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068879271 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06937572 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084440234 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072071829 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11518754 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069095171 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088359788 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099612987 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071169177 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100269531 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080894671 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070462213 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402511375 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071436415 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070385017 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067934959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070035647 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069103995 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080409325 seconds)
  done (took 21.520385092 seconds)
done (took 38.578383391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246479618 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075627287 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076314319 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075703131 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075620948 seconds)
  done (took 1.776890215 seconds)
done (took 2.992277528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120100997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09825522 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067483839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096153555 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066853407 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102182013 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099325696 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077940685 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101330535 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067002511 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096437005 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067077727 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067191992 seconds)
  done (took 2.353830087 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0858265 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086256698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072755341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084773749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066633588 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084888129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083712792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090293134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083944557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074560061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066420793 seconds)
  done (took 2.086580514 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084431287 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085838987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071547477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084558954 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066745354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083864387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083441635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087447479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084129054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07598458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066196757 seconds)
  done (took 2.075520618 seconds)
done (took 7.717125067 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078521767 seconds)
  done (took 1.269567567 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.522335699 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.608503254 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082712795 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106698579 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184347446 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112807799 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245262216 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087008385 seconds)
  done (took 8.31025935 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090090436 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071253586 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084337153 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073443136 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072600183 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071286112 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073433453 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070540396 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073153332 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07353155 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07426801 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074765681 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072078137 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070946809 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073458694 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071094052 seconds)
  done (took 2.459275138 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093363688 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092352887 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075740963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076729303 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07416762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073299269 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076070056 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075485599 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072856471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074274107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076472734 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074967914 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073486258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066509551 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076165407 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07755852 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072568524 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075162306 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076145138 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077128641 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076814684 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066708944 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073633617 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075973015 seconds)
  done (took 3.120584484 seconds)
done (took 16.361422857 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105363037 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070329303 seconds)
  done (took 1.373797649 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082255363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082881483 seconds)
  done (took 1.373827237 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083034812 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068012669 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089744549 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078347082 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067914809 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067747773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087559895 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068121832 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067530781 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068089442 seconds)
  done (took 1.956233958 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069933696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077917728 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072125999 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08246456 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074457885 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066345974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072821331 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069669214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078800518 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065336643 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072794777 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08404395 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074622849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086200805 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073000284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070528841 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072560788 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069683044 seconds)
  done (took 2.544507558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067700849 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069911912 seconds)
  done (took 1.352592389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069674701 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06631299 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068500912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068515612 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066129709 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065082872 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065768258 seconds)
  done (took 1.680344523 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.356914604 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11805978 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299947094 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074276819 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083898175 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250448825 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068634765 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073059098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073255238 seconds)
  done (took 2.649958538 seconds)
done (took 14.148381856 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082328845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087978681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097389848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368307442 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093710057 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069166518 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115591748 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178444518 seconds)
done (took 2.315935661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207482189 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640268259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406901121 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202227937 seconds)
  done (took 2.466872172 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328015173 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089417213 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062428119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069573877 seconds)
  done (took 1.77894404 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068655442 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071618404 seconds)
  done (took 1.363398659 seconds)
done (took 7.04271435 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069570164 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068508842 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066588835 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068567431 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066927813 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066242494 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087716519 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068398942 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068973135 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068119624 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068405053 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06811253 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066197568 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066140448 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067930756 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066061018 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066244407 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066039386 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.176025345 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066317555 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068430719 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066103324 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06644586 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068733025 seconds)
  done (took 2.999855606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0856732 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069024599 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073886214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073196161 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072558752 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073519457 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073029603 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068063143 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073919797 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070558376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071038949 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070958645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070503215 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071144146 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070668754 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071445682 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073251593 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068041677 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070377295 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071368859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073255114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068243683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07139308 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073000446 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070746714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071322963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070575565 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068527261 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073326184 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071200782 seconds)
  done (took 3.385111166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072283148 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065657945 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066452564 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073096687 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065375524 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066618029 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066468546 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066295345 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066431138 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065919949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066879922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066134736 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065600963 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066568301 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067428742 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069403681 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080884561 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065924066 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065758082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066389279 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069036449 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067753192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065875994 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065932341 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066076595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065606006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06624523 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065929121 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066886365 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065570716 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069110934 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069774355 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066513294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072473456 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069306851 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065835919 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070025124 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065452836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06643356 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065453646 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065462951 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065537726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065744533 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073059539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066833225 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067387321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066273416 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067289087 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06649661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067859408 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065752591 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065891684 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068294748 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067137586 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070332907 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065946792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066657964 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065938079 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06676764 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066019082 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066170312 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066147204 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0685649 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06722779 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080912527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072664186 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066190178 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067772375 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067006247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06956228 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067598396 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079459167 seconds)
  done (took 6.112585487 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090477091 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087639391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067866335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068342601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064222513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06668502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071532829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066549347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067947819 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084443791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066628248 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067692192 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067423567 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070271242 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067184201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067781653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074733502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063924255 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066701163 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069863362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066657486 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071208582 seconds)
  done (took 2.80545146 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148887591 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072903662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106407354 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077636174 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072023681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071695947 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071872604 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071957886 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070545106 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070009442 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072486767 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07175868 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069530231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069639891 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069828341 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072003206 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069769304 seconds)
  done (took 2.649238527 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078265104 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068382536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087809963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068834558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069210131 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070674081 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072541401 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075901682 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070753953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06849709 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075924502 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070876966 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070754107 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068473359 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070709515 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068314771 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07097732 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068155463 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075642625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07231027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072690452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075650389 seconds)
  done (took 2.834358867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081503422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070513509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082337541 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070383155 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063767169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066407582 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072182181 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067965357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072189234 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070203969 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067891036 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066382652 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071060914 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067962908 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070403388 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067982575 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070162309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068259681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073493351 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063967794 seconds)
  done (took 2.651181988 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086967397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070346204 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071196155 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077264636 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070306261 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070175323 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07658239 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07024514 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069720634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08969089 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070493419 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070527196 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076571483 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073714438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072143387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076739325 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0766831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077371437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069750148 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069863278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089847571 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069918996 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076556438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070261561 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070017897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070267122 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070457665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074548827 seconds)
  done (took 3.322616975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069012974 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068752297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066319981 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065785373 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066726492 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066157685 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06632952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06611772 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068261824 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066195435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068429954 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068375826 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068547243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068349832 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068555563 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068055892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068917002 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066603901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065930052 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065839036 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0685137 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06858615 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068792124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066406491 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065918157 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068364762 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066354722 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066233876 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068608075 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066090076 seconds)
  done (took 3.269847268 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076057053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074745553 seconds)
  done (took 1.399579143 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065312385 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081645757 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065938385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073567621 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071714637 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06879809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075249479 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072084145 seconds)
  done (took 1.818417546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083326481 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0791049 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06928337 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079560911 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078059871 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084368102 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135093864 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068727612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074429334 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066951892 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081173418 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068263803 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074767427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069760991 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074387702 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075118278 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066339203 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073205094 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069676374 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067076527 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06936913 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077384921 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071408837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064448063 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070944865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08974932 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079439962 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068213986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071678839 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075714432 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07469116 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062988619 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068339899 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068595066 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066691945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077484035 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082078325 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072305714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076484706 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068958628 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0769207 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063970318 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073070144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075230125 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078780661 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068656175 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069241298 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064170105 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067459566 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071189668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064617389 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06930469 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063768564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07548503 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072336109 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079042051 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067521256 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070583645 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072208485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072031748 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075483483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070673616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071646756 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068421698 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078709545 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07351257 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077514533 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064340948 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062920971 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06687073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07786274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090029092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074369534 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068968078 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068930799 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066676251 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072067572 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06900064 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073723109 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075154101 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068228073 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073166767 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076146457 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069265663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071209749 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075084903 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066704942 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070104324 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066244669 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083512646 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067045212 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066315396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066483391 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080343633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071683695 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06695463 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066487843 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074819909 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062293542 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067979547 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067801875 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068536626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076580512 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070463861 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071142899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076169064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074320427 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068220427 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069739478 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.19238802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070881241 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069376281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076489804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063866208 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071931044 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070221874 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069272662 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077340804 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067331404 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070249766 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076264984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074663099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067201827 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06620526 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071475136 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068467824 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071717176 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076649401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067192852 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064015384 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064405931 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072004611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068753979 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072619331 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072770195 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072361232 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06366477 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067157893 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073118367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077579951 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069409718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07028194 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075278273 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070278434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068183101 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075243469 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071456179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067744899 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074106051 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069904852 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063610337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07075396 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071502333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067764863 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0729495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070916077 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070503715 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068857089 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067037319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074895205 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068765846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068099521 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069121451 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0679298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078399237 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070537254 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063758436 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066365683 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075494519 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06686247 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067815513 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067999788 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070767605 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068528849 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06659818 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067501684 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070903902 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076381933 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071435028 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069246232 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073847948 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080685812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068018578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071066331 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068105774 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069051438 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068832654 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077382145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074173212 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072868449 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071646048 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065586679 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073902618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076909599 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068407572 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066712146 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0683179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072260112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074393979 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072362387 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068771016 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066433558 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069109697 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069937582 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071144933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067256985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067932142 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073776396 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066641071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073108943 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068476944 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077511933 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070374373 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06264276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069072592 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066187655 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073636764 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062902462 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065929314 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06729704 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067920117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066616409 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.200568625 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064288639 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0768922 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0772061 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070305984 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0696161 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068548111 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076073425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071267538 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072286028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072961408 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075055569 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079413882 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068194339 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072538388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079106811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068454058 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063149466 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076818145 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067200721 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068197722 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06793104 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067640622 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071964279 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075811811 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074762413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063059479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072069765 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067337323 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068206513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064683793 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073058715 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07190578 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070087094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075878018 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069221227 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068359247 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074757259 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068136849 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068484793 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069354899 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071733151 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06901863 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070720651 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069528132 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071654685 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068220394 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06636849 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070163621 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068294445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069465638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073393566 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068136694 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068807418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070956842 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068628194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069558386 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069240445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068167172 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072241877 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070000836 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068993498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071022678 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063886795 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076062224 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06775382 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076684955 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069501951 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065843565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074412797 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07145638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073263878 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068958275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068886426 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070321792 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068248076 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071520248 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07562983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067813683 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079597434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075996691 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069980686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071584292 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069743507 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07085844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068515999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070391722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069539232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06976358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068702132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073338739 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072127753 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069357991 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070179443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068688956 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069032299 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068871654 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063695992 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068076111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068208641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068410948 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076867286 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068006318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068469 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067392865 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068927103 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067184099 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065576087 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073574551 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074372727 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0674921 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074108439 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067252822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068823276 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077316403 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.19591839 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067963498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067534035 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067929197 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075994592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069977623 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078791372 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069752414 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068750151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066820079 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069056424 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067466789 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063802638 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067033867 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072459832 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068495519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067842149 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068925964 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071858763 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069264096 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078424019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067754144 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07012037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068370533 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06639583 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068663053 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068270054 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071772711 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069494087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067594184 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066673923 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068233319 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069779272 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071159689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068330936 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070547425 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075862179 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068351668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071983427 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071198542 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063672198 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071688301 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068717379 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068560872 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06829351 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072737408 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071603685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069574522 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077662856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068368764 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072213309 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068678598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067260315 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068003122 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068278768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06823654 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068335073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069566359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076495274 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066522652 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072185184 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069382717 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069304797 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075957034 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068859236 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071978859 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073954038 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07002108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071007351 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076684771 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072066404 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071989649 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069055303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070673329 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074508161 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068786904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075343219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069685104 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069106121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070854204 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067455737 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068292694 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068712982 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067665524 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074740617 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068954597 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06873682 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068250598 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066946776 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070081764 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070920612 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07631025 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071642181 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072119775 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064311435 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06602753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069049949 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06696675 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069923468 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071168138 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073989519 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070604537 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069117484 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067523663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077195336 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074060823 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071927017 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067113626 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071740797 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068616533 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070130314 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069477078 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068604948 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068107101 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071325977 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069021072 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067202651 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.208797716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073970016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070101073 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071687659 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071432144 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070054939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064430523 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069783406 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071762724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07407722 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071658321 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06899078 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078869982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06689653 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06966827 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070992371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068185619 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073372032 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064672002 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071212371 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070177959 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069237599 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064929382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068712376 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066951382 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071515518 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068606626 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064052919 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078875204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077948525 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07242045 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068451562 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067795059 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064357933 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064613438 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068491972 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069356319 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070474187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078347147 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068546479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068586566 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063871375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069012504 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071954421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071919687 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065848771 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064184044 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068368719 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07180622 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073999405 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067896065 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068298154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071869467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07119136 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066695442 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070848813 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065941912 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072393721 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080704511 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068759892 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069606601 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074604093 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076217844 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068816529 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063943728 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068609936 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072709964 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069600428 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069110272 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069354955 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083077932 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072456344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068930455 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067359094 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07176694 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06891601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076894015 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069165979 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068841259 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075669573 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071523202 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076157859 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072180028 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076378371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072565555 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072537327 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069172485 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069608631 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067221091 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068787449 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07014986 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069557981 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073184443 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07592674 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068506569 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079161088 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07725046 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070358678 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065206151 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068020283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068042345 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063803467 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068653476 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0663271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067133634 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066382829 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067234066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06984724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072707638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069105913 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068218077 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067462148 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062805738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070472139 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069584013 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068438169 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.19990163 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069364427 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069772573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073366818 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071732369 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067589131 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071491869 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071243934 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070570556 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06439725 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075493066 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068221491 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070696969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068709751 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068830148 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069577064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072744721 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073409757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070181061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071648396 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073323064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070718057 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066383477 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065987439 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074450738 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066739585 seconds)
  done (took 44.03934947 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100436435 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065448264 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064405046 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064365393 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074948139 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065021824 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064189022 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065125139 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065376417 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067439267 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064213767 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064396574 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072035489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078727983 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074687768 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068318991 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06406319 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065856632 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064585783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065522779 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072330245 seconds)
  done (took 2.786360363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075160785 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078954247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076125564 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083587625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073719287 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071908444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076040612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071901198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079376975 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074058291 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079855962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071940176 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073799417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073771908 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073959563 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07259541 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080116244 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073004127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071799804 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076686909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072426687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076160221 seconds)
  done (took 2.983192855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068917506 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067948032 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070396332 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063537532 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068403354 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063955953 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071024795 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065911365 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070354066 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067417218 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067360857 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067428783 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070452078 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063457435 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069087029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06607067 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107011788 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070603114 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068050087 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068597259 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063755646 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07024732 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063626666 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064359027 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067955602 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070669547 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068742378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066673331 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068369891 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067996178 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067866882 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066196464 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070344706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06876897 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068027028 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067802158 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068284714 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067810806 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06437007 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066218568 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068673198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066226794 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068452024 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06905252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067107062 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066312202 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071121792 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067778002 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063545581 seconds)
  done (took 4.681882024 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079581514 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109703082 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069572489 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089924013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081307994 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07407449 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071879357 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091012627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065544349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066395935 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082404557 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080150115 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067927565 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071843824 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074915944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068234766 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068704906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066801902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07138679 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067458403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071257431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075042879 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081766565 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079208323 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071318092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066710363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067215297 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07219629 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078793363 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071493961 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072392858 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072621192 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081805681 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072846347 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067307302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070235911 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082774402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068002787 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07036577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065727331 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069771269 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071739211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075178052 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082743964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068180631 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072778938 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068046142 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065696089 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079354101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070560244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074626855 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080332996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071283537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067852693 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071754226 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083864137 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067525292 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066652008 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070969211 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078923477 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065743988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071875089 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079958336 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069529348 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074103378 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080141229 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07269691 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071143203 seconds)
  done (took 6.480329561 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077830782 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098135293 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083978196 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084048348 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077706244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077634891 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077321251 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077344538 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077147202 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081530248 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077415569 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115816693 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073613753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080137337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08499617 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077638421 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077708109 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077342036 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077265227 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077298899 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077695172 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083641501 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077409171 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083670443 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08136732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072977559 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077118522 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077412913 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084511963 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077516778 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08072797 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077155595 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077281005 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083876861 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080777254 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076947989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067753257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093257776 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077197453 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076932059 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073482992 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084157328 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077306993 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072802677 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077422395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077209268 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083441657 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080539487 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079827581 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081335791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077270555 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083962564 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076858264 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07704476 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083726515 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086550931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08344455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08368045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077051366 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083136596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084491302 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086257836 seconds)
  done (took 6.345086545 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08351684 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075597431 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082900461 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064517034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06705816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073366748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066950942 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066780576 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07530626 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077085387 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077286465 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073680543 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076514935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077360806 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073691457 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076381827 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073694046 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073615377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075494907 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073679992 seconds)
  done (took 2.856948273 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076790472 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084383487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068961681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073086155 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071722922 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073963182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070598624 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07162867 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069353157 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071480908 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077860466 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077328839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069020925 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073103255 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077440444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073770717 seconds)
  done (took 2.539253958 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083959874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074930803 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079871855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068681531 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069096333 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065048261 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067926537 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064106497 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065155567 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079494486 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068017198 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078007086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067841357 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067121462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065077681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073177039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06461864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065610309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067903314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079422822 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071553166 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066732257 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071773097 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068284396 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07022215 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071734561 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067165234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068815961 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065560746 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068210085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070531175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071597111 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065321987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065898494 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066853903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065727718 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067658878 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068289126 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07326482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068834538 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066518153 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070115462 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067855525 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069497239 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065073862 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068506421 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064783278 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07079482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066006884 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070530397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068121912 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070565732 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068504651 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074851555 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070785382 seconds)
  done (took 5.17937779 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08096958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071417055 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06454213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066584587 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071482766 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069169185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071438606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068642851 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069625181 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066272477 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06935246 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07171268 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069675198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071516293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069263042 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071514974 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063977417 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068937402 seconds)
  done (took 2.628829699 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073432056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068070112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076102148 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068415731 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068359206 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070850311 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064149877 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067101636 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066936617 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068445892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068352653 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070178538 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066749408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070888793 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068186367 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068448459 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070547227 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067522582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068190396 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064756024 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070946022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066984506 seconds)
  done (took 2.878792847 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094199315 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083862568 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138349803 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080490239 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087172307 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07398984 seconds)
  done (took 1.925813744 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092361032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101622074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06850295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071853452 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077616657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072454774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07197476 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071998357 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079208205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076983365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071974703 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080260467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079614828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078898557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077209176 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076887885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072525871 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074746579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068527859 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084391729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072034377 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079381809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072248996 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07218087 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072249559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078986127 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079560717 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076957631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071858203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079501715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077281368 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072282431 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079461939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077450841 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071747678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079386175 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072738036 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084076695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077865316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078956889 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071447882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077293895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07961165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075993664 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079895172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072766007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075981656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072255965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072297423 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085800562 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077369318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079046077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077386139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079647326 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079393547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087170829 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077615677 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078774236 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077545107 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077234764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079022996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077534634 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078803865 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07770415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077099761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078832447 seconds)
  done (took 6.469337942 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10435595 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069606202 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072840896 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077866873 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079166075 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072636819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072221448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072072083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072272485 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069320404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108787712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072986511 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079467944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078960332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07217779 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072703342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072223159 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078469828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069167106 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086720617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07201537 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079407632 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078914085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078707568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077259286 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077263921 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07225426 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071906494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07200674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071748503 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075967723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072358585 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079086121 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068819967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079105337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072112686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07238976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076059278 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072067398 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077556475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079146197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084204695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072014784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072435053 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07723912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072377401 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072342526 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069174142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072252436 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069256556 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076945467 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077595411 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077585565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078825008 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072636689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072143898 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07252032 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072812825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072466473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07766596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078992089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072013637 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086566651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072640389 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072315151 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079570459 seconds)
  done (took 6.39389824 seconds)
done (took 132.662738472 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195377382 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172694318 seconds)
  done (took 1.72359726 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071154648 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098597786 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078271096 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130960744 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068891154 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102296047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101588839 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078797619 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068694091 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068404076 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068313511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070760808 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133075054 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068307098 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067998233 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070706984 seconds)
  done (took 2.72488059 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098169172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157688193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101912019 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067654209 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098319113 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074365751 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067234184 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076475678 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072811787 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06870763 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075008873 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072418108 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067310071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072390877 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074801982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074011048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067843287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073801383 seconds)
  done (took 2.843222773 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097652137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09168682 seconds)
  done (took 1.5743076 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151313551 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135285018 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20073659 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.329605075 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155047554 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145938562 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141929053 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139998374 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113459941 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135911677 seconds)
  done (took 3.026119072 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100652898 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148289657 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266042105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114989698 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074291166 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092939131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116814113 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08025087 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08114182 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0813417 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081218624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077745686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099651252 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074760931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075829619 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077508508 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103239812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074770671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076716573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077626737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10058824 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068540881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074568845 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074622946 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078542547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078647561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068818677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067967626 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07713478 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076783357 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077949518 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09222921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078619352 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104080842 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073145224 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105402371 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078358138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075085478 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076908458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075066332 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079264901 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079144462 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075481783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078572433 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068418245 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078251222 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068390764 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068310933 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078854168 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068929192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07899121 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077877759 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104146862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069332968 seconds)
  done (took 6.056860344 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108403869 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107342478 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071989698 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113011901 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104841003 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071092968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105471124 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098493419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108267885 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071890811 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070332561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071875713 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083392025 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082000309 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116602474 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107707467 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074251038 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070983364 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108111211 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10816129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070399012 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101855568 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097504878 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107441326 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0694349 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071723605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070371374 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072233987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077657073 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079006108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070487047 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080634786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084602068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078578212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069432419 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070450535 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070511648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079589161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080169413 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079887262 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078752557 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070325305 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070504554 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071607911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071151853 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069745655 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078861296 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080223696 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079817582 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07040885 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072168717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070731806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071538387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079998328 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078009677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081177372 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079885657 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070563238 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070453998 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073552851 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080894262 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081106195 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079858565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071497083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080444027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070761638 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081290553 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083451168 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070923932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072424874 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070223632 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071021614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073949189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078765714 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07855107 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071878044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070596475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070801393 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080443882 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078812257 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069841417 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077496784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069109826 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07001119 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071914569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071924202 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077381032 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07978213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071181708 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070075397 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069565885 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069014758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06878489 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075947604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078858157 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07762934 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07719947 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069867695 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077478057 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213869454 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073030594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080403089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070776116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072304152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072065613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079112962 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079343043 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080978593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070484374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071447864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079070433 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081808789 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07129552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079220385 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081161352 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079117928 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070125879 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081552848 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071651964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080324361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071472524 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081186326 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070059257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080084533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070984412 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069433144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070308183 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079543041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071898385 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070324391 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070595963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070432949 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079099675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08314294 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072977517 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080083912 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078840006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071561812 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079136759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069958729 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080989788 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070775524 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071202093 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069350069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081851309 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070948663 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070506638 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070583411 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080705443 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070285018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080636853 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078113106 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069714664 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081596678 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08098415 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077952576 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080909145 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071679179 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069985843 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070467389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070420828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077784405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079701447 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071694734 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07018381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078175248 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080117809 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069681108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078282928 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078782771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079276016 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070593067 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070390338 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081666316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081128271 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078423835 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079350051 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079422904 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070619518 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078326519 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079268806 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071556987 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083324911 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070518205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082427275 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07835559 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077368144 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078857003 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080298262 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080049419 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080156753 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081841705 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069032345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069878842 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077839926 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069679159 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069217735 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076183856 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070672958 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070651886 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.221041968 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071654423 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081032496 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070240195 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07997584 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070236937 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072667382 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08458916 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071901712 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072234378 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080574311 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070822596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079686018 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082222432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079297582 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071287172 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071827713 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081095046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080611253 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072975775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070557376 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071795677 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079287903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078479598 seconds)
  done (took 18.982394569 seconds)
done (took 38.324290138 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190668805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14310906 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156025966 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111500245 seconds)
  done (took 2.068062787 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111269315 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09716376 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089852029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068327698 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096186693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067294821 seconds)
  done (took 1.949971635 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2667884 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185106012 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168037931 seconds)
  done (took 2.033689379 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191013099 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178316434 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418437249 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255711041 seconds)
  done (took 2.558941286 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136742054 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087601901 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069026754 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084164386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125928241 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096742891 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120686567 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07978386 seconds)
  done (took 2.416476711 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140817911 seconds)
done (took 12.583997943 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.172270567 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113690933 seconds)
    (3/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090204001 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07428296 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069510123 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.224672685 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206335121 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230069815 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077401799 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080825723 seconds)
    (11/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.199693625 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077452323 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074400326 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222811758 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072399465 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207781751 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19625763 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066217714 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076140367 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164994478 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075621724 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.211360975 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158753408 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102885535 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078201807 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075231318 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111092767 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163696453 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150886455 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073580009 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068284276 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.156464395 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083906013 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.413262077 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.157117203 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171145982 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112574824 seconds)
    (38/309) benchmarking ("sort", Float64, false)...
    done (took 0.127784709 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054921997 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065139472 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155981437 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088638929 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1305921 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075837591 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074994564 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155857218 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066298361 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076212289 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.152591367 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081083219 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088737786 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.143864995 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176997256 seconds)
    (54/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157592341 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080319468 seconds)
    (56/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107178755 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08302343 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.069462994 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130672063 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054270917 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084078651 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107718282 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076103139 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08999536 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067641708 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158274391 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0759396 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055726653 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067658527 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069610017 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154729963 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120458033 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087498764 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06593222 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080553286 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142919043 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090934442 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076659987 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069433911 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075122462 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129621356 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067644242 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.229952736 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11348449 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095219338 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116097218 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074925688 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.151855148 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068199764 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072094816 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06563762 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075946686 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090128347 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081372242 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101569137 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176787092 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079199896 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109982359 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100501853 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114452333 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15870353 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097890504 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155679274 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088309496 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080156164 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135548127 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064956689 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077761318 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076033301 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.158174741 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167591618 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073504419 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054861402 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076063819 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081174137 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143940171 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112557074 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175698057 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054188322 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075755272 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054327887 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066409585 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07738981 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136433033 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150980546 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075025697 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072771028 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095146761 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.159699298 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075619604 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07860961 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074164164 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088707353 seconds)
    (134/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158091957 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069020998 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080713151 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177138097 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159084075 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070532118 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05506608 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088772712 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187307641 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05399088 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080236691 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054281362 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098505818 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069203496 seconds)
    (148/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054672856 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18761377 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071617173 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076723343 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074429551 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091061933 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.175555264 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082647777 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110708727 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074986639 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074577144 seconds)
    (159/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.158687887 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066086406 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074854601 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054116629 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073747571 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075352138 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075717312 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165832878 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053775399 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094178901 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053883381 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054532727 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054275851 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055379753 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066316368 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067600191 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067299526 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056312134 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055461679 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053779176 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055209153 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089435281 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053752296 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.151204901 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140604551 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107395371 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.257974536 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055125964 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0564778 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077527831 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054416894 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06933565 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076915306 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20073539 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140343012 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066056447 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055688595 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067044227 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174840218 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054427867 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 0.129478076 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073844317 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054388622 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089972754 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071317713 seconds)
    (204/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055532503 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078827773 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06801623 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057535447 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070846128 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067929146 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087734798 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176589372 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05510982 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077978142 seconds)
    (214/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05549334 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074082374 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056719431 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09440289 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119450534 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068321575 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066744844 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069145205 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068582063 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054012592 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092998173 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074462672 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077537423 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076984761 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074697961 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136588511 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055240767 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075631801 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053803833 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168690955 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068086111 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152749529 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075252477 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05516425 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06836786 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104082056 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069336419 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054034975 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071299667 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06719493 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088667509 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188628471 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075431827 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092068871 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11189236 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054347025 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073716104 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135468215 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087153782 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069432903 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067708836 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074868895 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054431655 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05551949 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067016611 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054460791 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075319753 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054854789 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078852524 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067991032 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088217869 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054381876 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092296617 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054780437 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07611537 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055001339 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070534898 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075886134 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090502109 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074820087 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073423559 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076163027 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116079987 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067849609 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069084953 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068167317 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077356521 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068773543 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120461577 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085721235 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067925098 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065970745 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067496333 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092228796 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069265546 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053955301 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089974311 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068769981 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066075497 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067714309 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067726432 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074261096 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067385585 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055347829 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055150317 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055431535 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073317024 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054847596 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06721134 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090135368 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075159155 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066540474 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072521281 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.231335042 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.056112339 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056682034 seconds)
  done (took 31.234478601 seconds)
done (took 32.666246253 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084063485 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092763347 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077186137 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094860437 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082562251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076567011 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074171751 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079507597 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081695021 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083221534 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080734569 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057195972 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076206669 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076313061 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076974809 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092211931 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081051156 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075852861 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076091897 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067033525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075801492 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067880822 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069259055 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057072131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080811372 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073781031 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076363909 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076791472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068204071 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068515298 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071492471 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076057827 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067734432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08132197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075435017 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075089621 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076721207 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078826615 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06963515 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067689754 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076413561 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068091162 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074977153 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076206892 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074159982 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073437637 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075432561 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079366289 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091790889 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070189846 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076937461 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077722389 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078786889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075093924 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071964937 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075787371 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072822108 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091219743 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075541603 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070484618 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076432271 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075943743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073219813 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075583956 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075346931 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077477301 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07914608 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07352814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077103875 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073889897 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067716504 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075417155 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071771648 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068474633 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078317108 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080205573 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066891672 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073993763 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075202008 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075675962 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067149653 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069568261 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069003943 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074480467 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069954641 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059560861 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071862811 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07446725 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06720596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075982447 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075096385 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075067954 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069615487 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079472084 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067786389 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073171706 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067788582 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06797264 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069560519 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072132263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067226124 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06965654 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077655402 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069258711 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073577106 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080549378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067069906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074147291 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066600496 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067077482 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080257842 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077364383 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067559053 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069633672 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066984676 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074443352 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066093912 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066480412 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066707472 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066988257 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07280524 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066561454 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068573826 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215437249 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082925324 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068273244 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072674432 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070363146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069169392 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073555765 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067840311 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067753622 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068995172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064292618 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069973215 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068422424 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075057693 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06976937 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075653977 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069464226 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07602699 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073224832 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073485407 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073070638 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067271573 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062441698 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070201528 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069873639 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06960378 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068148263 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069178513 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068075782 seconds)
done (took 12.791450178 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070025455 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.133153735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096669052 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095141132 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086239514 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06919064 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076875199 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096472633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070285208 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098527579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088344028 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086424751 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110030485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067476693 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069297619 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072347719 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070117191 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082227773 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097755426 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087619416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112686782 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068870602 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092270644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089074915 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088201115 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093256431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069364033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072629834 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071995609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10300761 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088781818 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072352287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069697372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096528337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094246651 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083726291 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069051246 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083448974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069661366 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068658528 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070422516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09683225 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081604126 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081916366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072576301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078385859 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070200943 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083369738 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089529955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079746916 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085924191 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099073707 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071454368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084333035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067862451 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086009452 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077542824 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07127467 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069754775 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076365494 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068901021 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072188137 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082512287 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081127078 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072764434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084767066 seconds)
  done (took 6.917708877 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086577648 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092838276 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084246255 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085104893 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068697074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069323233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069690194 seconds)
  done (took 2.08574549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070168496 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089119616 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089714114 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090160181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082700048 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089032032 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08052208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069681205 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08910885 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070795986 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088745716 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098490468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072164412 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075961587 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090644368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069584919 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091345665 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069839621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072168603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090686781 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071359869 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098494232 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072995056 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06984475 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082555883 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06959085 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112640878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073450577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071146323 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07214768 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067192998 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106285792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081790808 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076644369 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069498975 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083099788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082920873 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067889469 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084614449 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077745323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082453736 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069742935 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070691465 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067756762 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073037834 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079559363 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06998917 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070340717 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071873999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087877039 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070676823 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081830373 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071552766 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074691166 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071272188 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075417069 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07892533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070809233 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08809604 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070947339 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084215765 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08376779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082557772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083837736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071233628 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081654397 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081938409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071796676 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071417045 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073088234 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083910582 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06810243 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070854003 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079659329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072326795 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090482416 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090282771 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071047311 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081967497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069788582 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069578424 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069632687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09024546 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074035627 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069259335 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073558265 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072807372 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068111093 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068646129 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073946224 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068122128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071087814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07238019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072091796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072164483 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08459753 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071333215 seconds)
  done (took 9.048147872 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07292998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070807019 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072328198 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070390396 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071262843 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070096989 seconds)
  done (took 1.97909209 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092597078 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071267533 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080524102 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073917229 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101886615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087713751 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088372274 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079209066 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084118656 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080060796 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087206446 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088907459 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093185864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074346724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087833659 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073807486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088334189 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076162592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079733434 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075099444 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086692447 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074084131 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074932143 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082989469 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077545296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073301664 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08000666 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080428938 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079569132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080725021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07425078 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0775022 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072866115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079192424 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088246874 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072764796 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073968472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078640191 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073770745 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077301044 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088493491 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074553509 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075870755 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078796672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079239859 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072692471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079081754 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080563242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087967115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078537432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080908315 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073834552 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076849117 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078431986 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072868263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079385081 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078419521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088191032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074176015 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072771804 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071391968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077110255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078808732 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078154281 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07923057 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078553461 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072871582 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074285804 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074566458 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073199338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078803935 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070914995 seconds)
  done (took 7.22036496 seconds)
done (took 28.771937285 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537312773 seconds)
  done (took 2.036645531 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597263361 seconds)
  done (took 2.124028596 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.651985062 seconds)
  done (took 8.184346874 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.365099615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465836472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.699464189 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135825045 seconds)
  done (took 3.221374523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718337659 seconds)
  done (took 2.258005825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231531932 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220000448 seconds)
  done (took 2.005201503 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377234593 seconds)
  done (took 1.910821128 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.078923408 seconds)
  done (took 2.61682378 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232995772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176304549 seconds)
  done (took 1.945837446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45011259 seconds)
  done (took 1.982970657 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.798584436 seconds)
  done (took 6.327328413 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22225815 seconds)
  done (took 1.799471107 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236790377 seconds)
  done (took 1.763745919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746679116 seconds)
  done (took 3.291798984 seconds)
done (took 43.014408931 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086070136 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086322935 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086528636 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082924289 seconds)
  done (took 1.849496142 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079048999 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074530564 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077561554 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074742966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077372283 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074304071 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075777631 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076807204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074314323 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074550881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074384729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074783481 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076844101 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076047546 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073416539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076923378 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07769446 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074445394 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077356698 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074471146 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072674785 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076867071 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076767516 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073695549 seconds)
  done (took 3.352334206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080712453 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075048472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076795939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073658691 seconds)
  done (took 1.848990387 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081176405 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091285972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089483208 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080357704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091278972 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086702318 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071373267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071325802 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072535679 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07914433 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070480372 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094849365 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088931593 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079617694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081340549 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067903737 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070123359 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087367315 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080453347 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080548861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072689144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080333258 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070238831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089192926 seconds)
  done (took 3.464818289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087957316 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101530439 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081771272 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09013309 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093173315 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067695356 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087265522 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093262209 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123861464 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067483536 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073264602 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06781129 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075732592 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067860378 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082172488 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107080086 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111327832 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071269779 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098748571 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067956976 seconds)
  done (took 3.264374336 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074896232 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071345999 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072669843 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067711715 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078953299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074326455 seconds)
  done (took 1.990921119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070971995 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072219292 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06968165 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069027701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073864222 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06920156 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068456683 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069827379 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069647202 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069177467 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06873542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067970397 seconds)
  done (took 2.381107567 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184348225 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070619674 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071005876 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068450534 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072575952 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068037735 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082790308 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070426487 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093092988 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068367527 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068854073 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070248535 seconds)
  done (took 2.535418862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194165822 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077185157 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221923014 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147522626 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108369429 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111364868 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109917394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109508748 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13452754 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098650542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158213476 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159691334 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105769251 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13319399 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088977551 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099506185 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147886414 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158338054 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104500862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158672944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139273295 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123080565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1413215 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100177535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104056604 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11706998 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073286163 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080551231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162497737 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128593467 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139419706 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110099894 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093519829 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169402708 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162129168 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135896033 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144116883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085087173 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102890096 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130023323 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187051744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088137215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302023876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110689546 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081859211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130762778 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115990035 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116862698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103156606 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08960973 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141808619 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17461959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131370895 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086504792 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121419345 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11111906 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109905208 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110412278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16938518 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153377835 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124688238 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073410063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108859385 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145251251 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128435709 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105297536 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120241975 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091695916 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129041843 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147922275 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119546169 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137094016 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11353549 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088685898 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116901844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136134485 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12371515 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155234672 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122569476 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074397355 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119719604 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099737186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081026532 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142793069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076616918 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166980021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099544118 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105140903 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120366365 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107549701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105987261 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149044508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28886697 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103568955 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068839521 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105072561 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117061579 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140985826 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087700667 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106764853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11540892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078693576 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13055889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076886192 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120751875 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077454396 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121291032 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126832005 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078487453 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119579544 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102442612 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099731751 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127881307 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152890373 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087993962 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081525097 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15872117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119153236 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101147011 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137205003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149562505 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.0995719 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098605918 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142477911 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164457462 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089602353 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156675841 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103969109 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084315903 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087195532 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120722285 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108846548 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120797631 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082351166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116214468 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158321615 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076275965 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094884195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130102674 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079496482 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081996996 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104026755 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103347769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095758973 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09712206 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100639811 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130852682 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274644622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104281396 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12249706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098095908 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160633968 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088608897 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102174209 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102385235 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071472112 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131577577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149061626 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080561837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154228539 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118341127 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114449244 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116447846 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084528822 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133948001 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08100824 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071936099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138542322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108437036 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106767021 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144319117 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113648019 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120440484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116064841 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127658164 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126341264 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12573907 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105441146 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088003655 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110186809 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125000209 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074511914 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090246692 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081060701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103820937 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094874372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084177992 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136225399 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120828733 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111318687 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109972836 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096122871 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140170277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077520996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122921649 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116362732 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095258453 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144994417 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144127118 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127794268 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250349131 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13453698 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072597402 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076949133 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087786559 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119156369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084303834 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083847932 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113455814 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140681021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124044721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132540209 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119978911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117057441 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148452581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071999038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117186478 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13979844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119472352 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104233904 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090751597 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098469541 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136697199 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104115967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169184261 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111534487 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121254089 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148322443 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101164317 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080612612 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101104454 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128564698 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102318154 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137001493 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097776438 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088413773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106747551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076620285 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098394949 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123981766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115660662 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131435506 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11244341 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129387787 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078562437 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112510665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120496852 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118662764 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066130954 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115251173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152357595 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094208256 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11358625 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299208956 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080132413 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133277862 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16577228 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139534157 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085020561 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106504169 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117459314 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122697424 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116986742 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134496012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104617906 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132378755 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108253989 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085727994 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087654062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095293841 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102435641 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092909384 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102560233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110974286 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095492604 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127453477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102459589 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10780757 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114943553 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099119172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091932507 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096361678 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167398084 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11582758 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162513266 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098863328 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136807568 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155265623 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07643851 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080112727 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079308675 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133954083 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086305657 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127675513 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109301525 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114998941 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120915779 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134711283 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095348411 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069857842 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10709208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129215028 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121068098 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097851111 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100562843 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152427931 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.095956988 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231195836 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110184854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11395676 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103084496 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16437738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064571158 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1045183 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077536251 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081008672 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122837912 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146161131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082199646 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100086451 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117122466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111143669 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122895532 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098784078 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110201401 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122082211 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143296682 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124079286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08944348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108832708 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123330806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148781934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101899363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096692934 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163782277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146415965 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151566277 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086896445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111909895 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113219459 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108532812 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134755788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083806059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155447838 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083486038 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132544495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10217465 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089088724 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125251651 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109708144 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088567115 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1399772 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114608575 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083125016 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078881445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113971433 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115820086 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101772338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075132145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286968381 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076057974 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129896549 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154501218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082761005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104565414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095044984 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081350719 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104225294 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101587446 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087667893 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10006554 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163840181 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087892048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142422156 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130755271 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109571115 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130121069 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100704994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639876208 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078452979 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144934451 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112735213 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163694357 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099217414 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114478989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107691111 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117817102 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138409435 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10180404 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176659643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127936105 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113706641 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080473297 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101836938 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103030921 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087709488 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105726869 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111990769 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113855364 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093182295 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114184483 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121392413 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08275406 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095251399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148416687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112634555 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138353975 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133044373 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08536275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114566443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130485493 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079478914 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111671522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140137757 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101296317 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096875218 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079669466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096029263 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147298406 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073803141 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140281184 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11124905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103411766 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106836423 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101388834 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121851712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098128038 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111902931 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087325422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.100070697 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106693525 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07918155 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075324096 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099102055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10283556 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093675316 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09049905 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.093191202 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135690009 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072026812 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092802643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107224204 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128414123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153615484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084419385 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080399646 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110976905 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10725557 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104561312 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113001706 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077311616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078902662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076904297 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080485137 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.100389139 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106648862 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105862502 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102516385 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143590289 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082041761 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219667382 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091572381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098887138 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069362349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076261112 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092060388 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.356741992 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106760433 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113784764 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15658173 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097672326 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0921086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093986074 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078059149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086442263 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125467984 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10904103 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11774875 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101547103 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06578365 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107424722 seconds)
  done (took 57.553799075 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113341551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08599725 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101283271 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146351809 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12556345 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203383606 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158848482 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191883987 seconds)
  done (took 2.829667751 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074614826 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097498732 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106294523 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087190516 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071265109 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07304164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222784025 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084264211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070261325 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09632373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081298613 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072790682 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416779288 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070651855 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071792124 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067003353 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070805385 seconds)
  done (took 3.51318802 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385640062 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625983879 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.335189031 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079958939 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.927701673 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092786499 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.14707014 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137257231 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081164876 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543353674 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412762429 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131990471 seconds)
  done (took 18.585997664 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086398186 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078221092 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091379771 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091015521 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080904893 seconds)
  done (took 2.106018391 seconds)
done (took 106.839201077 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087063707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.591639364 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057104617 seconds)
  done (took 2.355350238 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091027476 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087247296 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087060774 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085567561 seconds)
  done (took 2.038767643 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07927748 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079157888 seconds)
  done (took 1.843295349 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22532989 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166952985 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097305879 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087031905 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081751871 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081724175 seconds)
  done (took 1.938837063 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076554167 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07801242 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074632683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078759264 seconds)
  done (took 1.990701076 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080274167 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055200456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057946566 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060560981 seconds)
  done (took 1.935303826 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090337853 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083989818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080412874 seconds)
  done (took 1.940786762 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102131103 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089076722 seconds)
  done (took 1.874877156 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086031883 seconds)
  done (took 1.771955132 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095831957 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099699583 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128281501 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109414239 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135650885 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107750529 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085809749 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08673915 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078538341 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08738838 seconds)
  done (took 2.698560338 seconds)
done (took 22.642389424 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082643383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364908378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363096565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091560333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670726232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358443374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97124752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094681438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140243194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070101502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086632982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650905755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959848279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327796451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949420617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327419514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651978255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071210913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070273793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070948005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95697387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07063443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070441598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071243351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651737584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372707102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070859779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325136763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070701283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072455504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357119682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070696402 seconds)
  done (took 16.194413201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089581015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12066113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074918151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086587926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073007561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072384603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073867087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071641107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121394958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070831412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086885764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070424096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0742421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07090135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089221415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070639846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071136277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071427967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071245414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071082909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089214847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070796591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071064247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071333599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071013338 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081992698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071809123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071084315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071041854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072429724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073521884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071237245 seconds)
  done (took 4.18837721 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120757001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124516673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076225915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105995416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113900211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072950271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141650211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095276581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128510665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070833998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087559845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071408649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103437624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072376573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090413178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072062767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072525652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071344879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071131013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071160156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089751461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070975999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070569354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071288337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071267888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083681713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071695263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071534568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071443241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072750886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074250792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072139496 seconds)
  done (took 4.427441083 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076471904 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077197156 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08551757 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085607147 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072169923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074433461 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075613599 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072145673 seconds)
  done (took 2.322837897 seconds)
done (took 28.827338198 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082054599 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071476212 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074494744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089249393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074745237 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080115028 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06936026 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078052158 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074877105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075552006 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07679575 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070121068 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074296451 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069248082 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075727532 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070136681 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0808274 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073826039 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080932743 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08114306 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073535961 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075524162 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077635703 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080869226 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081343609 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080898137 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080870301 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076000944 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071603243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073352775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079307611 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085955477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070836643 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081148426 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070699359 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071019283 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074363562 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071111931 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081160867 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079121674 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072752027 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079389931 seconds)
  done (took 4.88023757 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090372385 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092585619 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08614329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064117832 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068373408 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067727862 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090350946 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061965642 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062429113 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088988862 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05876561 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061686111 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065242229 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056995194 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062658596 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059946916 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064059255 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058911513 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062389618 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061935004 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089552351 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057254252 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079272848 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065326654 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059557116 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064635904 seconds)
  done (took 3.516866482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078227789 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.0852407 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090697652 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142470164 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112708085 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080584887 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080923613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094554803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095813017 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069965715 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073493138 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094620433 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089301402 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075911125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070134334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086771396 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086709424 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071772294 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075501404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092986096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087715793 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087129204 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092740468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083570276 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069839254 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072017567 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073559904 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083094054 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072488995 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078691722 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073163661 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073338031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071635044 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081364162 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072509386 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071935437 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095081013 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081923864 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080377409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07082815 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077667471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071037602 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092876772 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124603269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069253594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076027401 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073934921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07971017 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070019187 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094646954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081075492 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070195868 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073278899 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069967833 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069030524 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072622058 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072040885 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072126557 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078829507 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075050846 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092177629 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074780479 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085571026 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069347454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077764072 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069116714 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070928017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069133707 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094394933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071184809 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108909509 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070559835 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071059679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078224921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077630671 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075995078 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069752557 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085746278 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079680639 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074405078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077479674 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073036015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072746503 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09713578 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072334452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071493383 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070731999 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075084434 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072194459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07128282 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081899564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069576628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072225982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086024483 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069798446 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07122541 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075738787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074136792 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069982325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080550026 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073683266 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070972664 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078764818 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069644498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072116205 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08109594 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075780093 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068934081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073498937 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075058855 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070177409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071104559 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072128412 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071699782 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077665231 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076175511 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073946571 seconds)
  done (took 10.927710642 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161060922 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150258184 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073408374 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142860587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078638439 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080798405 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145182422 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094007857 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070703585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07124387 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070544417 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109257068 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104941638 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115390152 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080074586 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070552645 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09175851 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113671913 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145976989 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141701545 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09318277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078035146 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073249636 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071470694 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072657896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079300994 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089480521 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079274009 seconds)
  done (took 4.500216209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083548302 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102792916 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076623628 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091273931 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091269463 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070589839 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072965662 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072241017 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086419435 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079782229 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07024745 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074281772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076609225 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072773973 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070484415 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076856514 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076755475 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071620007 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073749569 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074633202 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080023024 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093664581 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073428401 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069651596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074726533 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069825044 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065904544 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085230931 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070965207 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093603323 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068041734 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074883534 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083209475 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071667458 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070277823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070438304 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070269492 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070120374 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071964661 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070947477 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068921658 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060522117 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069790025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080565287 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083288967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059494743 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074882684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075313525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075211728 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067499339 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07314712 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073099747 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072906013 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077297853 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073776574 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075546524 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071527627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076216868 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078195288 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06996513 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067511972 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068691387 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074332162 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067606219 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084537442 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074490937 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068749503 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070041278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071534643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082700046 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07019009 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074436368 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068161611 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072159981 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074624746 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071781766 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071474923 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069043003 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070552862 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070657724 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058531261 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07042956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056784108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072914759 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068696727 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069017194 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069925328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075141125 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081461419 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071346003 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075573193 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071235525 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069461707 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072785579 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062716215 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072514004 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080205151 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083888283 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070316976 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06817885 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081769499 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075013637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069732342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059423625 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07408593 seconds)
  done (took 9.487372109 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093206253 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072512388 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083620728 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090212212 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087784947 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076396545 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079549519 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071728466 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085370271 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076270465 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078567912 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070530975 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080156061 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079107383 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072304874 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080324041 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073856382 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084257193 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084132115 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071070286 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0784379 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082295477 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091206363 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082157675 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080826191 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082453438 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091131673 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079230862 seconds)
  done (took 4.015394638 seconds)
done (took 39.024744955 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.806243215 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.950511357 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.778214552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.101609376 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.898911935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.80601231 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.866373512 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.773491003 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.956868543 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808829142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.063228716 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.849822664 seconds)
done (took 65.495176115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.827005402 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.909303579 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007976692 seconds)
  done (took 5.62324405 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.098709047 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.420642446 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.016580743 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772343934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.778552445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.080248414 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.57286744 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2860242 seconds)
  done (took 30.632499902 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.939337253 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998845563 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.465870629 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.497229451 seconds)
  done (took 15.66502731 seconds)
done (took 63.758605214 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.806272045 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.829606004 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.800539246 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.762231516 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.831739995 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.788587201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.778691458 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.90076945 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.77287258 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.762817843 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774987106 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.191360932 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.784979839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.211236744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.773738588 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.781666958 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.804382839 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.471044624 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.931583842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.78689158 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.777585785 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827336513 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.775140814 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782669616 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.806020007 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772908276 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.14899277 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776180035 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.617698851 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776833258 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.826989116 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.288272995 seconds)
  done (took 204.425885526 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.776998355 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.629337561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.683636426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.808708464 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.167037956 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956651614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.877348568 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203081716 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.777860152 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805078926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.941042141 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.778705222 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.962562495 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.721932163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.804596452 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.845698456 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937075527 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.994806525 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.808976833 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.928253678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.796705403 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791796106 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.738690182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946269845 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.810181098 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.857232741 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.795943684 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.792984947 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967767623 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.90951998 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.809775164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.777363439 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.965446613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645694504 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.7891994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.789416092 seconds)
  done (took 169.299705031 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.968647591 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.779420791 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.777730494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778690687 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.786176707 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777062319 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.777457217 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.90351622 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902877629 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.408593068 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.209080206 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.82916961 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.777296019 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567941908 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.776954487 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845311114 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.791477696 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777978915 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800006276 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.804380789 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779494436 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78012005 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.903738375 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.788867316 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781653472 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787298831 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.778664816 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783723949 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.149872365 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777907645 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.014825757 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77863213 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78450936 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.293198841 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.018337728 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.78216371 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7799606 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.779082368 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.608180719 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86587363 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.777885867 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.781238487 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784268381 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.778687249 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.998964942 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.779019303 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778539841 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.779465605 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.781576815 seconds)
    (49/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.778810157 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913475048 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.777795387 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.90209138 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.779006568 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258595941 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777285228 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779294077 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.67118181 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.355790283 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.779584392 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.782732332 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.781076059 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779089496 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786975034 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.549950803 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.853353296 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.782587063 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.785833101 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78561815 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.782575305 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.875579187 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781830947 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.775799946 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.838098543 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.901039037 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90057863 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781282219 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847605037 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873110573 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780997749 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.780861914 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780330889 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.780765513 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.861482288 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.784369601 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907052003 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787876628 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.782413772 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.832082314 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.852158738 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.781282427 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629420036 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.781247493 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.783975096 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.042863313 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845897629 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.780628406 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783934709 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.908174271 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902012775 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.492331785 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.782641971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.562928555 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.919383825 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78131229 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926352696 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.784402101 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.864821835 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785839495 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.785507789 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.815172402 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.782989978 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.84576157 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.780624286 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.157470378 seconds)
  done (took 403.308359272 seconds)
done (took 780.764455489 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.381213746 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.344502795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439858491 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.361343755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.337305246 seconds)
  done (took 13.57604758 seconds)
done (took 15.287783263 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.871649479 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.876238756 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805548585 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.875217121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803362323 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.873397033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.855725753 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.806511377 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.843462978 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.806778723 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.842261014 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.807836148 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795257776 seconds)
  done (took 25.574945083 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.011803114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.027509977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854715687 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.017776748 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.832429957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.021486315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942598202 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.933325604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932245444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799520331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799958118 seconds)
  done (took 22.888240691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018784289 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024547466 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.860218373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.023953876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834132673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015539238 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.944930205 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.941398812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936625684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800198379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.796679983 seconds)
  done (took 22.910746229 seconds)
done (took 73.08716289 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793320299 seconds)
  done (took 3.506318052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.819908339 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.988648137 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.799391347 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.79679538 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.796507668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.791899755 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.797092977 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792193791 seconds)
  done (took 16.300111529 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78878829 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.791796236 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.790937534 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.79120298 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.790609644 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.789241178 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.791372138 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.792645283 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.793813624 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.793184989 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.793816754 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.793447395 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.792143605 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.790561835 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.794071524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.791832371 seconds)
  done (took 30.384094771 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.792672081 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.793045765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.79138913 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.791821258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.790955623 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.790423091 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.793119047 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.791443783 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.790601407 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.790472231 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.791376806 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.791031411 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.792043326 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.789930541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.790510201 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.792251683 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.789651943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.791373993 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.79813953 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.791533506 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.79210387 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.791393959 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.791719491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.79223407 seconds)
  done (took 44.719084393 seconds)
done (took 96.624045937 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.53030658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.696868465 seconds)
  done (took 9.942531091 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799907421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.794539847 seconds)
  done (took 5.384098951 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.797123699 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795141922 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.79531566 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.795502846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.795528567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.796335592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796143168 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.79515848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797080621 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.796383963 seconds)
  done (took 19.677424844 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.797255044 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.796331832 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.793528809 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.795775624 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.79689573 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.793711561 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798014197 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796548358 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.797353003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.79357061 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796512556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793496683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796891889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.793084905 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.797195842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.793829839 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.793377006 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.795150805 seconds)
  done (took 34.037335618 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.797425153 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796895741 seconds)
  done (took 5.312608835 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.794579447 seconds)
    (2/7) benchmarking "second"...
    done (took 1.794541497 seconds)
    (3/7) benchmarking "month"...
    done (took 1.793679013 seconds)
    (4/7) benchmarking "year"...
    done (took 1.794902293 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.794426424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.795583387 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.79671001 seconds)
  done (took 14.284462905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.799853069 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.940928081 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006124145 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458405158 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.799867506 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801938753 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.816572085 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.801526741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803076766 seconds)
  done (took 19.9489674 seconds)
done (took 110.304359685 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.667426596 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792575055 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.025593881 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.851112139 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.844951537 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.138301139 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.809310742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.091078251 seconds)
done (took 42.942003131 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.87906195 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.514009555 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.530431103 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.817028919 seconds)
  done (took 15.581489394 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.786027985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.304646094 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.839292777 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.380265309 seconds)
  done (took 20.090425523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.164681262 seconds)
    (2/2) benchmarking "read"...
    done (took 2.144473931 seconds)
  done (took 6.034291591 seconds)
done (took 50.308167517 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798522604 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.799026004 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.796145405 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.79881633 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.797010265 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.79619682 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.804571059 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.799680543 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.80016184 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.800204537 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.800009083 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798968292 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797815951 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797714954 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798892603 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.797992687 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.798102496 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798116553 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.798205424 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798371939 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799924848 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.798637523 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.797293601 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.801294411 seconds)
  done (took 44.894070504 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801666317 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.799786167 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.801418326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.80118283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799776192 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.800215538 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.799931882 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.798693348 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.801230504 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.801166249 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798046959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797967039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800542551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.798658205 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801729319 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.799705334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.801271373 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797642284 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802739967 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.798333051 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.802287845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800005988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.799336902 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801172183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.799661517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800413357 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.804513006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.800353289 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801184445 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.799555987 seconds)
  done (took 55.733570336 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.807463322 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.810663842 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.802224155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.802776435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.803501078 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.803328637 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.803584109 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.803546148 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.803680864 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.802027725 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.803466545 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.803551457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.80360226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.801650142 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.803308031 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.802102344 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.803474289 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802993504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.802695828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.803306375 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.802492635 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.802214723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.803458708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805816482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.802901134 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.803593447 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.803518253 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.802574074 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.807407065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.802486492 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.803990461 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.804021214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.804865487 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.8041669 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.803827096 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.803312037 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.807520419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81167964 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.804634959 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.804489493 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.804968554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.803929371 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.805005542 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.803811177 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.803175402 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803620982 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804416721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.804274096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806975192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.803992161 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.803962376 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.805758946 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.804346737 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.804406252 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.804493458 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.804741406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.806051048 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80516924 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.804270623 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.805114599 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.805243394 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804235562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.805058523 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80538073 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.805649751 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.80550985 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.805610102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.806358269 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.806314045 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.806700078 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.805930246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805599466 seconds)
  done (took 131.648557149 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.806899645 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804900775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.8042049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802847998 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803574521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806592443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802618545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80595331 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803268581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806183204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805617924 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805643565 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803682743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805202949 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806866852 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803247158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810182327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806422994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.806708115 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808620482 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807810942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804133707 seconds)
  done (took 41.450618441 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808178092 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807533847 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80460316 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807262225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804948185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807653391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809040065 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807562035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807124859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804525731 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806060824 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808455544 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804791464 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805928621 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805264017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805799085 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80894228 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807391135 seconds)
  done (took 34.252304824 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.80621203 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.805668112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80844658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805604809 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.805552633 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809408384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80609613 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808678735 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810633179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.806205368 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.809443617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808531739 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.809811269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807845742 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80965954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807090082 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.809767344 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807424708 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810902294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807558469 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.806839305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808973615 seconds)
  done (took 41.507874302 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810074495 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81042283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.807293203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80740066 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.806364785 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.810193052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.81093073 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810207269 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809812279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.80952503 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806761112 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.809863754 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.807445797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808193283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.80792638 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807749572 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.81117057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808588653 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813120907 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808390828 seconds)
  done (took 37.914321812 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813337423 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812668827 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816209645 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813055699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813239824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814014735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813568181 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.81384673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816074433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813671768 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813777042 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814873195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813672083 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815432972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814236299 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8147363 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814454445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813807906 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813678235 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815774988 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815080344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814459406 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814421344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814974362 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817015958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815768431 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814218786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815848017 seconds)
  done (took 52.539502309 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813020446 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816281003 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.811136508 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.809760336 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.810222414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810467197 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812507182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.810296844 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812729957 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.809597502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.81219296 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.813629901 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815888414 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.812453129 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813826401 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.81260442 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813072845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811527622 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810879336 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810639261 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.814462495 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813020019 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.813292447 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812796442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810844734 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.813268509 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81061983 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811363705 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817784167 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.811284206 seconds)
  done (took 56.10655362 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.831522322 seconds)
    (2/2) benchmarking "in"...
    done (took 1.833388879 seconds)
  done (took 5.399814243 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.812636327 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815702627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.814274205 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.813298105 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812599708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.814824521 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.814526332 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812482234 seconds)
  done (took 16.245881644 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.814449915 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.816151192 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.81509783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.815025558 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.816698335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815278965 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822055427 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.814996649 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.818320697 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.816506922 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.824710816 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.825254676 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.818758836 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817695975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817240073 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817228778 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.817965966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.817368872 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.817256364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.817014524 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817047948 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817857371 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817886521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.812648431 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817751244 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.827900527 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.820101561 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.816651408 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816548165 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.821008595 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.817624464 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.81468429 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.817750965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.818902003 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816042729 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.819283172 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825763094 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81885471 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.823620676 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818944819 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81910755 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.814588949 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.817961169 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.820353448 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818779111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.818257368 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.817949243 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.814102075 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.81601095 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.82158324 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.822610979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817047894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.816213741 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820946768 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820028099 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825705754 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.81909788 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.822824142 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82707417 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.828636072 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.830644242 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826582502 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820026527 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.820978987 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827412584 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.844251477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826432487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816424001 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816333461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.819047029 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.826870837 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832715965 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.829673436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.821952383 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822566832 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.819345597 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819486771 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81988176 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828675374 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.823074778 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.822057849 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822374169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829750908 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843283268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.819741259 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823240079 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.821146205 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.822505439 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.821446385 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831107844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823211026 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819412439 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.819637028 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819983575 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.82283512 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.824983837 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.820958672 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821701003 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.81813898 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.820310405 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821407955 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824298984 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.830422039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823346278 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823187613 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.827715953 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.821354159 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820851615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.828804308 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.820757156 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821914698 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.82252041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.829574889 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819464848 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82326193 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.831139297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.821927795 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.825303651 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.823042495 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.8225396 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831558304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.849333795 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.822380884 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.822538959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.826089311 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.835864797 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.823227476 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.825990174 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.823931011 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820162627 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819263087 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.824791548 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.822486817 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.823055619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825894503 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824261433 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819648856 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.82319055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.825875764 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.82501315 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.825117875 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824544536 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.825399244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.826851048 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.826083931 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.825231896 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.830086028 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.823307193 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.825152359 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.824954286 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820746767 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82325604 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.825427962 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.825927049 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.823945067 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825037907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824240768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.825581256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824704898 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.822831268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824382839 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.826032829 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829335571 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.826312411 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.829125157 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.825111739 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.821814174 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.825342885 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.825885596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.824948956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.824116681 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.823569209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.829701765 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.833454384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.824536375 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.825176657 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.828531352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825777847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827790905 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828329512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.828812255 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.834353719 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.826891213 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.83467164 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.827734405 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826590571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.82576773 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.825198435 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.825359607 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828926787 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830424429 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.83483809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839220641 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835473878 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.828723391 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.832088831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.827249507 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.832244181 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.830554374 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.829338746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.827357611 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828452643 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82725365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828125714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829120067 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.83034826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.825706919 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.826184826 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827633765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.827037585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827047601 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.827416127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828975247 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824243468 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82664091 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828419996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.82897745 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.824287851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.826922741 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.827806252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.82719507 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.830517975 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.834316085 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.823684451 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829060238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828657036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827379825 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.827435708 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.82736348 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.830253509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.828366919 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836476952 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.828394188 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.829705067 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.835195254 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.827703758 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.828313468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.832194944 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.830539711 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.827233701 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.831667241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.83849609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.828750605 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.829926539 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.831472081 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830233869 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830267438 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.836240095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.826584319 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.831283634 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.828768795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832565108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.826887488 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.831300727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.831743514 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.829511625 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832173956 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829564271 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.829123796 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830197932 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.832275544 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.829175506 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.830682456 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832154595 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.838334797 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.835195669 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.829803901 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.833259229 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.831014353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.832458249 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.830545892 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.831666398 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.830441682 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843438531 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.839503352 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836130196 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.832080263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.829757107 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834746255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.831027031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.835380034 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83190673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831962546 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83154446 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.830127553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.82872445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830796246 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.833388346 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832414377 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.83212594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.835512439 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831120305 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831289457 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.833220042 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.832706489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832078331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.830891029 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.831384754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.83399174 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833870111 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.830003313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83238507 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838392842 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832037271 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.833379899 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.831419293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.832164461 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.830945253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.834324387 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834178957 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.836650132 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.841598073 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.835505205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.843060726 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833980369 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842583581 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.834481815 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.835776709 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.842613587 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.829230959 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.831700245 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.832853112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.834843293 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840594602 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.834697713 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.834798735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838765415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834873954 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.834753767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.834032345 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.834232217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834523735 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.834618533 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842388877 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.836019616 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.838741357 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834767731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831194805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.836152071 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.834087796 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.833606544 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836571547 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.835820204 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.835358395 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835947224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.836006767 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.833918473 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.835746755 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.835093305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.831841138 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83371569 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841372321 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.836047723 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84176836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.835177069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.844523763 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835599062 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.84234509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.836596651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.836586106 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.837050058 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835000843 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.837144854 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834676114 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.837624915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835113004 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.836668931 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.838195599 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.836963015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.838659184 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.836538902 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835762373 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.834508827 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847271309 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862624058 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.836880592 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838791345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.832646602 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.83747759 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841460814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.837450512 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.835555887 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.838370426 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.848523441 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.843214083 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83645877 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.836767128 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837419887 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838684761 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.835507897 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.836826594 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.837906006 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.837122571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.837081202 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.839013288 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.84001733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.838054671 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.837500602 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839784882 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839043287 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.848370906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.839714396 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.840663434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839037201 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.836637656 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838921378 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.839258768 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.838519137 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838305241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83815143 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.838874014 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845599492 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.845933466 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.840502532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.837549998 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.840075974 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.839784784 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.839404164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841087501 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839887219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839814122 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.839542712 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.83820109 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.840998176 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.838525169 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837663892 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.839356787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.838339533 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842028652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.848371281 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840162669 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.836313985 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.837659726 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83757024 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.836546571 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.838638999 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.847603661 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843385508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.85142683 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.849041312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.84465537 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.839693568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842906113 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.849038828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.837627065 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.841200244 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841840877 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.84027168 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841016393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.842523922 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841836836 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.846271724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.841071438 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.841118933 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.849272042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.842148777 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.842531801 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.842432941 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.844606898 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.840930877 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.837785715 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840996774 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.840888162 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847490643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.842505584 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842232163 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843320211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.839450351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842108451 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846950777 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840855365 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.840709982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.84000871 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.842189186 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841939172 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840852764 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838081443 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.839956635 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.84163263 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.844291183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.850077967 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.838418969 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842733988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.84295935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.843021562 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843501997 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842337188 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839388913 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.838706126 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.841786827 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843353211 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.841514684 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.844692524 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.840951856 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.843821804 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.844103624 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843740136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844810725 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853627632 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851236376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.838704551 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.84143526 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.8439358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846522495 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845581811 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.845790882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843715051 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.845582952 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.84376568 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.843734345 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.844152239 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847091923 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861317767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.8440275 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844594872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.844402342 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848729256 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.842372602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840943467 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.843333985 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.846147123 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.846566319 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.853575024 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.845872908 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.851101996 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84313802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845084026 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.848084431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.846538187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.852395974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846653632 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843472926 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.847922715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.849345874 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.861938866 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844403783 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852912923 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.876306828 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.845556734 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.845143719 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846171621 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844411522 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.846085609 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84730979 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.847180639 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.845490066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.844783805 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.846525576 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.846007152 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851067557 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.84658699 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846552924 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.845142455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.844953405 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.849016787 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843842803 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.847328777 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.845319246 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.846566457 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.848135645 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848770589 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847501059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858695069 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858585321 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.845209006 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.847182716 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.842818659 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.849585168 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849681967 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857340422 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.853987727 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.846771211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.848640765 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.847691224 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847328199 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844899558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.846760429 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.846894787 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846468299 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.844176814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.860710945 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858379767 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.852787872 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.847551134 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849255539 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847214406 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849549745 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849695249 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.85001744 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.84788018 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847876685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.855791579 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.847068082 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.846996895 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.851338453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855328037 seconds)
  done (took 1094.834652411 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844540234 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845700166 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844577083 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84397314 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845589188 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845700051 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843456282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84472199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844404257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845493132 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84590205 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845685993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845562466 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845904871 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846115653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844638237 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846275749 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845290929 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84589351 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845048813 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846700226 seconds)
  done (took 40.518840656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848946502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845624505 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846448996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849732939 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846749248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848534714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84593277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847304009 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849261678 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845976007 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.854465716 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849131605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.844934356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.845694168 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84632018 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848623766 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849720075 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846739522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.848812798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845761465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84935523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846173776 seconds)
  done (took 42.420154623 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.851919366 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.851026609 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.849797094 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.847519005 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.850396145 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.846232972 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.851527021 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.850099598 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.849349626 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.851490744 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.849372196 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.851417047 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.856883727 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.855196382 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.853152488 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.84989776 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.993417965 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.851214036 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.853075475 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.852907373 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.848047828 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856495665 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.848657932 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847624795 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.85061724 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.853666982 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.853810719 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.850998313 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.853329658 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.853751247 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.858571407 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.852415223 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.851288926 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.854209929 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.852773385 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.852903189 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.856845436 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.852545201 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.849379486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.85147377 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.861367938 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.872747747 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852438538 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.859322472 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.851813629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.851923092 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.855779223 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.862466159 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.849966386 seconds)
  done (took 92.705061111 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.85280042 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.851570785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.849109853 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852474406 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.852351219 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.850809209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.851369559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851430339 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.849040787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850398441 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.853235567 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851264707 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850121433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853694976 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.852554283 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849893887 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850280293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850038883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.855119162 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850208584 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.849379404 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.853939663 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.85372005 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851796289 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854112496 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850446974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8507927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.853913379 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.849936891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.851218082 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.852965172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853542374 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.853809607 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.851927733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852638743 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853954855 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.853864016 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.851907002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853440346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.851444071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.854323694 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853802582 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.85387786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.85466398 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852669576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853466656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852076466 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.851680806 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.851723805 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.855670693 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854975817 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.852898966 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854110028 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.852609931 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854702333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.855035494 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853857391 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.853242333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854488118 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.852811909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.852880693 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855432959 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.853366074 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.854687439 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.854480095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853159723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.853332891 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856551652 seconds)
  done (took 127.757353536 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856452594 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.857588121 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857345157 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860878517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859028836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.857778255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856924684 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.859212641 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.858930254 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.858495102 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859733468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.857131556 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.858329641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856726212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865025055 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859896951 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859127371 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859449772 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.860541601 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860051192 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.860432653 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.859825166 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.859860195 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860233578 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859615783 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.859871564 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.859694278 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860460059 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859705933 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860998815 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.860049722 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.860067164 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.859786537 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.86021532 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.859633837 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.859676824 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85920528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860977707 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.860547597 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.860403408 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.859972919 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862113585 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.860478782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.859865734 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861233647 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860998719 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862553915 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.861127538 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.858809424 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860330922 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86227334 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.86183534 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861199689 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.861438908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.860521021 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.859923336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859248344 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.867032352 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861232037 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862218665 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862200818 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859374869 seconds)
  done (took 117.103998786 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858077171 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859355332 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.855774585 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857056369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859107252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.857151611 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.861784844 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.860383735 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.859998917 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.859984439 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861241416 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856566234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858424596 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860470577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85710213 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859300069 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858755022 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.857262703 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861117695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85863384 seconds)
  done (took 38.956313046 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.857607943 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861864748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.856937135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857934583 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.859525741 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85740259 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.861177134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859873376 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85858393 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861072809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862492072 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861027733 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858917989 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858475298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86217236 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857774245 seconds)
  done (took 31.532936285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.858090756 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.859945369 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.862073187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.862684568 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859302102 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.857763835 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861660389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.857803072 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.85829024 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861660662 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.862547866 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.862043585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861789654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.862959593 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.858976333 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.861251592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.858671239 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.85718689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.862006084 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.863231505 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.860463883 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.85979943 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.861450016 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.862108095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.860381484 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.859975016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860427126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859478213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85961891 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862377933 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86037666 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.86350868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.860538564 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.859763608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.865603993 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.86135307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862591861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.864303714 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.863534927 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.862690897 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.864740804 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.860665429 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864211546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.863150181 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.860519772 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864311331 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.860836761 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86120476 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.862178176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860837303 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864667835 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.865685844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.864611526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.866161191 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.863757065 seconds)
  done (took 104.170709362 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862666506 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863915742 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861686855 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864336843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863646817 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.860911988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863351169 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862539663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861319731 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863794264 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861891766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.864320689 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861713525 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86667267 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862261174 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865222893 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862404942 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862542701 seconds)
  done (took 35.31929272 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864108103 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.86174363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.865245753 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.86246712 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.863122884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.866072483 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863311237 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.864918671 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865346419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863792993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864114055 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.865038083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86534276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.867620286 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86380769 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8637103 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.867623336 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865832612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.863767501 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863348999 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867799482 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867458374 seconds)
  done (took 42.810235228 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.86511218 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.866622223 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.882412769 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.890949207 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.88871916 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.904114944 seconds)
  done (took 13.082443252 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863594488 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867173443 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864371557 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86719348 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867230504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8647252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864796239 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8657547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868600327 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866047549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865459558 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868281074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867671382 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864871649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867849882 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869081473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865695355 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865063476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864910152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867987598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863825329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867956168 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865036916 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865493139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865326612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864285542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869186705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866112851 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864800882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870227824 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869034503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86722091 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869756524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865505298 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869011102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87004083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866239571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869068184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868839321 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867279311 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.869527905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870482537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869203573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865230978 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868632146 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866250667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867180879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867953576 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866526865 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871768294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870675707 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86722766 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869872558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869700153 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869105656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871218358 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867221442 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868023779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870917929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866968382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867164347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869920528 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867517721 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868251151 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87042679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867034091 seconds)
  done (took 125.041373557 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867781403 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867942685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867204803 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867897296 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866876587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868388717 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867011923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867284622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868672125 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867549577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871659078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870222147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867812219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869231553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868669074 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867230991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866891371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867397162 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869137826 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872350917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869449888 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869614014 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868539523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869213673 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868236273 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871712843 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869301175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869070431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86904461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868363314 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869255778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869434744 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869530485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86815653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869353336 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869357665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869589331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868961365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869197644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872225648 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869088558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873014646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869780143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869430263 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869915833 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869429773 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868949931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869871899 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870430518 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870082577 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869355759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870333804 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870978179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870497281 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868622544 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869612801 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869941299 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870340662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871339148 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872168777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869554881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870785545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87259728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871498172 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870944033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871627362 seconds)
  done (took 125.17623202 seconds)
done (took 2550.848578405 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.900243553 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.874390466 seconds)
  done (took 15.565845643 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.034993078 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.987786091 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.872601771 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.916716733 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.871309263 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.896456902 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.892732202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.871722729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.874175857 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.872734496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.872654142 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.060829747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.869341107 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.872656146 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.873762821 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.964802494 seconds)
  done (took 52.402317621 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.876511996 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.878869723 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.886984648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.879498652 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.878031137 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.889357269 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.912487193 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.880533035 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.910727119 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.891890882 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946569563 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.888101697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.876720138 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.927730692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.892301495 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.893665708 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.970094189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.955397521 seconds)
  done (took 36.028662725 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955746032 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.876804233 seconds)
  done (took 10.63508463 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.900786385 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.875478388 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.924531714 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.901212884 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.898084904 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.909597171 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.874098909 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.914818695 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.892421862 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.925113251 seconds)
  done (took 70.815394526 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.898153736 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.894380764 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.893099413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.893479379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.885930865 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.892551509 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.892056208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.890380377 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.553889903 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.928538111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.901566369 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.898719944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.896218045 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.897725987 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.891511691 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.919110396 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.005315379 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.890956863 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.891063324 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.899835962 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.894989297 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.960367708 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.909176589 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.896296497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.92316043 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.557794247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.901760699 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.90054275 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.994596802 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.893309193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.893292187 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.896502497 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.89608173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295837177 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.161984557 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.895287198 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.910530412 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.902189129 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.893572332 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.036218434 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.896250038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.896670435 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.662432646 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.142467878 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.004609101 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.941335322 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.204437402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.915472312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.898030955 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.924916683 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.899814105 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.8975078 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.905135962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.391561296 seconds)
  done (took 133.72621893 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.888085354 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.241617437 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063893354 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.893592418 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180300041 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103092108 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.894895805 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940489934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.895106057 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.128817229 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152774672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99949161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.893718372 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.893938041 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.896492919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.890101568 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050414958 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.967194844 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893532555 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.889933203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922978022 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13869381 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.017282594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.895663067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.923504952 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106286054 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.01466711 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.001514423 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.785057875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.88961941 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.956065059 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.895290236 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.893873002 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.889302003 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.051234519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.989060932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982906859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.893868552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893184935 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.891489141 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.564176763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088622605 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.988505857 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036216042 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096427747 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103928244 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.680702722 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.891529918 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.635075015 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058247968 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.127286503 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.133239043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.018716201 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.897006092 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.417863266 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.892817982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890754847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146252875 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038492769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.995113566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.895337328 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.893351404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889302709 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140339982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.898242637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.991406531 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897590728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.893285492 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.993883223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.998152498 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033208025 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108216697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.927502425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.782956574 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.441096325 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.141755084 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.964166087 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149440279 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.896678878 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.895933751 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972848487 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.738421952 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152520657 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145699659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148177566 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930642326 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.621409663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.892551922 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.121507431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.118952504 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.157321122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107457708 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.138280046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.223262096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.893840524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.895004346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.124119239 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034161787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.898224894 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.243817024 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131456762 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.44936975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.918682913 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.207429563 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031272428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.898391567 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.538611112 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.896706765 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.132185211 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.939824558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.898352238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895907742 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.120165837 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.889221538 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.895573629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.540090516 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.961674099 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.899994232 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133062041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.900301888 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.167869758 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898692322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137667809 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.892734988 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.934006837 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.130702021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105768797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.900565967 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14400913 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.144263869 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014271209 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124142528 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.598795659 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.899465818 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.187265966 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89643415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.897320289 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069622719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.898114627 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047047878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.902719413 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195102173 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925143593 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137360114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902528989 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.161823971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.935104247 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953493568 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902208188 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032720799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.901618821 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.830871223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060289465 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.900813613 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.894946258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.703876696 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.899064936 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.050507134 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.132107599 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921011259 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975113045 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572302862 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896383799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980091915 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923943692 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.286259969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.896742613 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.152696177 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.899847649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895374696 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.893114312 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.14065574 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.083712048 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.899621863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.89750791 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.807247964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.894137365 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893586633 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.076089302 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.324426405 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891933064 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097470183 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897194977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022928672 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897658785 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.969714841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.239299993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891799446 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.893234206 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.893217406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.893140811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.895600654 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.158514471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.924758448 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.413258875 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.034295061 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17428273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.212144566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.144939314 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.941987578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.892736103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.151724787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.897222499 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.96125692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.898110559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.918479812 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128192812 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898925377 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109435399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.180444399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758266703 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942967177 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.89733376 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.89397169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.893812212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041068613 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983615491 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.896605277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.891747012 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012864391 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017117355 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.105234891 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.895190443 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.964063188 seconds)
  done (took 909.522165096 seconds)
done (took 1230.489069008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.89412769 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.89461156 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882032765 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.897927973 seconds)
  done (took 29.389594078 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.90064532 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.89768047 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.901337703 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.898273892 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.899216481 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.897027983 seconds)
  done (took 13.212617296 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.925084732 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.335901714 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.890588192 seconds)
  done (took 21.970482441 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.967247764 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.275414016 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.99491658 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32090045 seconds)
  done (took 10.373704943 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.899252594 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.895887648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900468292 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.898703004 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.900493629 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.899020588 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.894628453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.894942162 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.901730826 seconds)
  done (took 18.901142172 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.941978818 seconds)
done (took 99.61033826 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.796898336 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.71873028 seconds)
    (3/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.917550659 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.969201676 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.037433799 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.805991012 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.211136233 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.889124684 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.14677422 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.524223395 seconds)
    (11/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.137918671 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.925451171 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216309202 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.889782756 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.974669521 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460977858 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.108098386 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.99480259 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.070295095 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.903496116 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.932321002 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.299699749 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.376883013 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301683496 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.060580427 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.169591306 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.032768949 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.013948584 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.953967039 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.008654563 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.240952772 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.086772807 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.003426813 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.194354311 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.014341064 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.008843265 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.610537931 seconds)
    (38/309) benchmarking ("sort", Float64, false)...
    done (took 5.689396061 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.985955155 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043761225 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.012474616 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.2655791 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.893967015 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.247730954 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.079459545 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.267956501 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.146611143 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.04280545 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.034083736 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.502913678 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.920386163 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.136270836 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.909616002 seconds)
    (54/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.021736023 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.917863954 seconds)
    (56/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.866189109 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.844896545 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.604448234 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.926359428 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.19553803 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.167504749 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.356443696 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.148325501 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.719066659 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.071609236 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.016341959 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.929153049 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.24150592 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.338341729 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.99295556 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085134687 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.899038776 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.539345073 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.005091202 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.043998131 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.907289948 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.277244569 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.04990081 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.083228703 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.906657005 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.510191709 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.03029062 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.953358216 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.182866492 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.913130829 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.559165147 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.991884658 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.028240365 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.213223292 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.977447917 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.040373809 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.99843479 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.845205479 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.420626513 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.983583418 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080561072 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.212485517 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.055607853 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.97243029 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.972812522 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.082566535 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.059087063 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.3758156 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.055879923 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.604568675 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.906972972 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.138134999 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.01230409 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.300957206 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.33163977 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.905723737 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.921113926 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.076854592 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.045689614 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.413027934 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.90802015 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.999151036 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.899390025 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.058417772 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.916241689 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.807479461 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.991934836 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.91605355 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.001695307 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.072977019 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.136784583 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.008740147 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.931337298 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.327191502 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.942177603 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.918633959 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.286674913 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.247305943 seconds)
    (134/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.338607799 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.999800503 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.615433415 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.279069957 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.041607836 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.971455072 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323081311 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.858540163 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.895333882 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.520178758 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.905653603 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.596932553 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.987645327 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.031518512 seconds)
    (148/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.237652836 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 6.914850614 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.901884431 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.026449937 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.168036459 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.145535347 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.319404851 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.760675584 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.168359631 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.173161887 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.102580727 seconds)
    (159/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.412464373 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.903466506 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.254855435 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.292019106 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.932620629 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.936676083 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.997069769 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.050371265 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.115687613 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.95346817 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.079451782 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.982700847 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.15569182 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.171820471 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.931367752 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.307726622 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.289658162 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.894113438 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.279776503 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.141759825 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.292571727 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.589381733 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232458604 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.901685233 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.136318433 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.891137206 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.077005143 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051899241 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235157729 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.939793728 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092304302 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.919904706 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.030855927 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.897635957 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.122690262 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.034826656 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.893557432 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.613266162 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.901794316 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.940491361 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 5.634101159 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.067623763 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.0644064 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.924047737 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.956618815 seconds)
    (204/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180911986 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.898929185 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.098156656 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.311969286 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.989627687 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.604581354 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.060940725 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.900599571 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.99217592 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.897466021 seconds)
    (214/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.506217066 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.9629269 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.874605797 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.657762167 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884745987 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.025457205 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.083439637 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.980505907 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.884748058 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.316004999 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.887792703 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.201225315 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.043254254 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.730491502 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082310345 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.731022521 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.178406347 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907207014 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.949484952 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.88329633 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.498307621 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.982012288 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.905894296 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.883308832 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.882515216 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.983341462 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.970606818 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.189907072 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.896494954 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.006945282 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.827840765 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.313105189 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.90182055 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898157952 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.947761235 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.055183226 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.896197712 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.872929631 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.804501696 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.971702786 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.13273038 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.899187806 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.437775435 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854600682 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.036480052 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.095416154 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.899311862 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15719993 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.876225434 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.119210266 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.910184758 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.23303263 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.517034931 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181281516 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.884701865 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.954779513 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.005618235 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203508522 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.976149042 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.887717711 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882514722 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.82605822 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.889903646 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.549961411 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.873769877 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.865527978 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.067633969 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.865057323 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.127022151 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.814651214 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.87456142 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.201740612 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.27699555 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.882026035 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.264339718 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.347273624 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.708071378 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.868105705 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.924272059 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.182028726 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.266965233 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.632946563 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.180046927 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.85827217 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.405939401 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.0062168 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.89765439 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.316788871 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.232676067 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.538311658 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.89573224 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089167498 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.027445864 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.091085215 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.970328509 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.384537535 seconds)
  done (took 1017.289972093 seconds)
done (took 1019.181714201 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.901389001 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891812627 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.88003092 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.901774876 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.987459897 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.904081783 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889678631 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.877254707 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.924555809 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.926934268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.875997151 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.900929591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879461966 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883431612 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.877631986 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894121236 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.199513183 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.915837567 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.899701832 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887268209 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.893865562 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.880042171 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.92995051 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.905158827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.878692145 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.879562186 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883435954 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.901924191 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.98955704 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.883972514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.881741133 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.891479348 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198446292 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.910332052 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.874524822 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.898656861 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.891024361 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.8871882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.884165931 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.917731837 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28571624 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.924335766 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.884413111 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.880659427 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.882118491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.883367039 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.888889234 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.885968249 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898003596 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897584494 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278725901 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942088981 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.885377699 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.884585943 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.890699904 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.884145615 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.883896372 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90068627 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903930908 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900390902 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.184003636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91758062 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.881747191 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.898752001 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.889455279 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.312799243 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.918575301 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.884785094 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284325887 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.930374829 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.311338667 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.933284073 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.881713743 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.89497155 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915508775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201320968 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.911758138 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.880131341 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.890040539 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87997096 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891548602 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894700433 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.884827593 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.8794105 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898826631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.90372765 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.892025992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883067506 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.895195224 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.90467198 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.891795209 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899240784 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.882841803 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.879183786 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.892046321 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.882765662 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.883626646 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.88379276 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.8885716 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.892469621 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.285514672 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945494322 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.879199628 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.880706999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.882136644 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.902687356 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281173051 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926397556 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.900819605 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924701366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.883624498 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.17307478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.913688599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893369321 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.884573668 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.887646742 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868904347 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.17251211 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.301740759 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.934121346 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877337376 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873987238 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89250123 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875575204 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872223941 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.194523563 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.910066569 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890005211 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.997097135 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883692767 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.906447119 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.879568411 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.874130886 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900783174 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888487651 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.90074742 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.876245609 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88405329 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.886581264 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865012221 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.879122503 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.878608244 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.864724675 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.86893244 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.857696341 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.897815591 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.879948518 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884759446 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.883223143 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9875376 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.859195749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162942047 seconds)
done (took 295.390909111 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.9350604 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.860577835 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.960999299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.858501819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.94027434 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.947497595 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.856552446 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.860719164 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.855214449 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240104136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.858039043 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.865193012 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.851578619 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.854589576 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.942599005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.857773148 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.854084771 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.203090774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.859553758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.933922562 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.860557666 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.861774108 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.860289614 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.233721989 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854172509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.841120781 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.919695242 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.85528804 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.186125513 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.851103086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.840452562 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.231141126 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.936323507 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.857978892 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.85225436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.852038394 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.923584479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.847670037 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.925888508 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926181041 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.941993129 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.885676714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.841614948 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.846061617 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.846132357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.843519161 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.837940618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.872259949 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.840205377 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.842094215 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.187689013 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.85443872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.840631069 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.839323334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842308052 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.874464186 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.840067537 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.845797792 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.934361712 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847656171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.905174864 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.218042396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.227190571 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846394942 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.842631955 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.843624042 seconds)
  done (took 183.077787831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.909552088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918156214 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.908987422 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.851545217 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.893803495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.913755864 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.851060434 seconds)
  done (took 15.007710705 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.847779252 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.8426768 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892272723 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.89524582 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.844324264 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.992340492 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.845256364 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.85495433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83995988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.899836875 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.843239116 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844519073 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852379036 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.841540415 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896329955 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859399645 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.960126564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.846184772 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.844704259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.991247031 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844121557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.849901183 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.897205254 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.856071443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.846102289 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.85211766 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.429712174 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.844508483 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844824505 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846053585 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843882702 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.884657974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844518111 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.839517627 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842601117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.961117449 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.845900194 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84477995 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849393875 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.839542854 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.848777301 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.84676037 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.845308763 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845137738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.848481766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.871738615 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847886671 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.845020012 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849210039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.849719525 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896043323 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845326146 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.844700515 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.845779469 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901983906 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.854748928 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.849779767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.846228223 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.847887823 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847096069 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.99569541 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901790635 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.847007966 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899464867 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847789996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.84903594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.851101132 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.845284851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943244052 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.849203018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896410147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845592341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007754462 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871405151 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851026771 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.850976061 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.848208129 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848264885 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.850848411 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.852877349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.844990793 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.850858507 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854291985 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847355693 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847663787 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962974958 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.957599852 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.843398859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861312717 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.858044056 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.846460422 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.899448928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.846127651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.846153884 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906010474 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964564985 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.906655816 seconds)
  done (took 203.577499635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.852237679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.858114829 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.849052754 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.869659438 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.844431028 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.849536829 seconds)
  done (took 12.889037453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.849338509 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.852069911 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.851449124 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.849505148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.852183019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.850136811 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.853599064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850316889 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.853288978 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.846452639 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.852853278 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.851540268 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.851457283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.851701559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.852167202 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.848514089 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.850696659 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845933645 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.850227235 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84909113 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.010608976 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.855164946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851630087 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.850499105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.854442416 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.850193329 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856859444 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.848158737 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853725086 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.857241647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.856572521 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.850169139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.850131831 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.85710449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.854471204 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.851331418 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854322842 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.850078954 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84755106 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.850245262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.852055272 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851090521 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.851655329 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.854112452 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.850597783 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.857591069 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858137689 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.86182059 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.852381083 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.852843281 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.851037229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854228166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856356504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.851666422 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.85546563 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857400822 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.856402423 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.852391944 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856447714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.853430887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.851332543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.853079908 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854157914 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859465008 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.85341908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85351105 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.852491616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857716172 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856195378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853071182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853701274 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.849160705 seconds)
  done (took 136.324818663 seconds)
done (took 552.675269128 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.047446076 seconds)
  done (took 8.814139361 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.069576625 seconds)
  done (took 8.897631783 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.447576832 seconds)
  done (took 10.236727517 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.886521786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.890793095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.869883327 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.866307973 seconds)
  done (took 29.326927974 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.949893892 seconds)
  done (took 8.726885807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.876514653 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.851495944 seconds)
  done (took 15.541440398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.890033201 seconds)
  done (took 8.661980155 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.257049728 seconds)
  done (took 9.056287662 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.879730181 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.881452884 seconds)
  done (took 15.553917696 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.831964581 seconds)
  done (took 8.609617097 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.378933477 seconds)
  done (took 11.23441989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.855149676 seconds)
  done (took 8.727342667 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.898200384 seconds)
  done (took 8.660467756 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.967838938 seconds)
  done (took 8.738216151 seconds)
done (took 162.555158193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.853858918 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.849024335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.828035292 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.83191639 seconds)
  done (took 29.138487039 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.869289158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876066536 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.878100309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.880114542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.876430162 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871559271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.863172318 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.863112427 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881028446 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.873504598 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.870753642 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.872346318 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.871450171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.860649844 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.874532006 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.874995939 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.878436428 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872640038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.865792215 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.871174914 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.840472723 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88361003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.87816944 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.842650742 seconds)
  done (took 46.650383732 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.031814349 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.911818441 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.001836622 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.897259627 seconds)
  done (took 9.605437835 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893298881 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.896634784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.902920863 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.947163612 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.970814739 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.90032269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.865117089 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.859605346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.850903591 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.895265561 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.971975701 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.89064501 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.981820423 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.844316807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.029487704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.839237003 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.842386885 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.891617193 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.939997727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.966227376 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.850077806 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.89934644 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.905296354 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.895990626 seconds)
  done (took 47.490270913 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.848030679 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.857600719 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.855704359 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.844814328 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.848556657 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.849161107 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.85651092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.851137502 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.870696242 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848943789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.846506747 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848472218 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.849570461 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.846651651 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.848538198 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.856586183 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.864664502 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.852009821 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.854146581 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.856850295 seconds)
  done (took 38.823847587 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.84360771 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.699649419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.195398108 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.101865384 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.846364804 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.845833224 seconds)
  done (took 31.297058647 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.862098776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855533818 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.852535426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.907863676 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.994396408 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.846354309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.837237334 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.851094356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.890429172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906376568 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.86136933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.866433785 seconds)
  done (took 24.302689052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.838334679 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.825026434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.835182926 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.847877231 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.849675399 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.841326069 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.84044966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827908864 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.84479687 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.852840424 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842659898 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.847572297 seconds)
  done (took 43.845504812 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916479387 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711226896 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457301713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554080632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3678149 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044383514 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344470577 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999919193 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.833234741 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100888617 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414243081 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075860163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08414191 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825054025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904435463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300563005 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127431745 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063855377 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862070234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568977255 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996911655 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480886138 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.589390904 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005494444 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085336349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010792071 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.136318264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833396509 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009252012 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917033016 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88801294 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879262107 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152069284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100540346 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008623519 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889465368 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53200777 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.595790364 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.872925038 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.574991514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.555223298 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.012140043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889356647 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882744514 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812987951 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483405408 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060337952 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.887675677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.583821886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88388193 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893015638 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970788367 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.87931385 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.695448437 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833670412 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163145514 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.880779374 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887874793 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450891522 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958985618 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593143997 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.82678157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.977649057 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561329694 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351471861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.042828328 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.887396075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888213706 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816907712 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.606556719 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006556631 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027951545 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.903830443 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53196304 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196074849 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.533338332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966790161 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178232789 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.765098049 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.828618643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113744357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841641909 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819709467 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.744201498 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.818458005 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155900534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927957171 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.548718908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928453785 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061542761 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900776853 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913071893 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899274991 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113453883 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.772720788 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894648742 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.428240938 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17569807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914977968 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064785564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826033892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.895695656 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147371391 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104460707 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213845584 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359098718 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053368794 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894049001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.98467877 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.892180668 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901198956 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.173302891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963154533 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966726218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032012436 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859268256 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204003792 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932400048 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.080232599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.503437588 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169886839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238238389 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157834497 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986884173 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905231261 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905671 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636807185 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530401853 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.127724284 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.906932467 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477743228 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922180752 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.909552584 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840254831 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.566182779 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.504329602 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.016504662 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131574968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.93635372 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182917662 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84112986 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052198547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017926296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.129474094 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.553981308 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.986810568 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165948355 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486194109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.244089353 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92296862 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925251605 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026322421 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930216978 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.430726327 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16595333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.910995046 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913187926 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648379168 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.982016854 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920019991 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918454409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711123235 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20112172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944379697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91554445 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.849906803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928613703 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997000697 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91998093 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923940756 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43921889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669250225 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.926581244 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.566833449 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139125808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924872434 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.638710625 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112640956 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00246293 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211821505 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987052308 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.853021391 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.622417024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.622225617 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920649289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854206476 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922319808 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929110389 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93055194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.143750964 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205637069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972596524 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.618714191 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.036644781 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934535419 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.926873597 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922764167 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.421214255 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010379398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.634934254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938299165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059767305 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.939103212 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856988038 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929440588 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927552602 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923716453 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.889763928 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977759545 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.598969197 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257581455 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185243326 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572238791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941936651 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.671973154 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.053263009 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.974587252 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.481530796 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.100525867 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.93129951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045295846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.974571455 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.690776192 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.733295404 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.536708369 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266574048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.29535944 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410490066 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.557300998 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186760103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140182539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198795832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.493729904 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027526563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143667155 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911416802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049406166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.610829701 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323932389 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980216112 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192946754 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350734551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.567247639 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126574942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175902223 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000177423 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.86220924 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.009602998 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.489412232 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121218852 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.530181969 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194174784 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132579434 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.510888312 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074515446 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.966935016 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434678225 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0501556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.676545557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326972082 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.597966047 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.566294096 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338704929 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967225748 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410793355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320543833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380564124 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.06191348 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900800099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978723917 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.977707855 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.967268178 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946635197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.816295595 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.21848331 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978134794 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200965533 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331000801 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242566922 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.878581025 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.974603844 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969318909 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266841585 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.703731666 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216011638 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.385268367 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.55514686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979405198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.901586852 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902655642 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.67083905 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.969456827 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941903025 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2023455 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.078054845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920903231 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423690116 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293840901 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221923677 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.982878546 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24813497 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250400549 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703442557 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998199957 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.069318503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.493822078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.668251262 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.190695736 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203997744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765607728 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198680858 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.611264879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.945431148 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.970926331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184159503 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192462087 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.565964119 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220575261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.696045618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.985540649 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347573133 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03366823 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.558404473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.184893175 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.065280015 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98167693 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051422284 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980507251 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.983386705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982740489 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016018798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571707986 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.105877735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.984583698 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06132789 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.052610991 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.551950887 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.981601758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25508026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346193008 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307603907 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036761384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.972764545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976233413 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904045597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11014415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416507193 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245236093 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.100397022 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.113125488 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997028418 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.504926509 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32288285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296349084 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247674288 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.866675281 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97319682 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064616009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.196264013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983240795 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.182029889 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211646024 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303202482 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442698928 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.182836986 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260160662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249361887 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35160681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.974724754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564748168 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.99190141 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.512610849 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.015427538 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591612731 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261332906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986153214 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186727963 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995885437 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.174941157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.426284011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703176325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336322363 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.963002289 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034467496 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257158787 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377982402 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292913207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054929688 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984542241 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.673416387 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112873251 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.839850208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.197161931 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976448108 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185054375 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.688004378 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984804036 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259547451 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290117126 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.973764741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.863806258 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003318588 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.985116214 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198254944 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245462458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227022125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98522717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976646397 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.79081795 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260038529 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041878088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909455135 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.980590184 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073414616 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223658118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996846846 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.493552211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.678773323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278581913 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.894547435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998027332 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44636177 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437453024 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317342363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503341475 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219250187 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535226763 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904786656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.364487668 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.983013574 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451563367 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367585572 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.982152605 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.547652341 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101201605 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.256633026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30818409 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.995984533 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734556525 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.021110018 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200862118 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572161639 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918888265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982749647 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.039134838 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.979401098 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.108197931 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989861765 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.89598335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898678006 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.827341263 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469529037 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.983988403 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.972461479 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.509856803 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.599430695 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097684261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134746042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984094517 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.700714323 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.270458266 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232850046 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.537256425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.060990417 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.984615465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980068669 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907838425 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.177383251 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.17722538 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288863057 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.395305351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.101195957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985373166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.194812333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190902508 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.591878116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13937649 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440845202 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103135798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.907835759 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.692498082 seconds)
  done (took 1711.771553916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996994783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.011489502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.033990477 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.056588352 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.018898889 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.066928088 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.067209208 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.06963947 seconds)
  done (took 58.225250932 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.984005513 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.173718563 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.992869051 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.985111145 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.023521388 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.988156955 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.164005067 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.001838067 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.046867479 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.999136642 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.990178793 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.009857043 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.303122938 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.012405971 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.987983479 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.974625099 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.008341636 seconds)
  done (took 76.593037987 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.986537689 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.170806131 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.003787769 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.001095189 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874839051 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.989956893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.973759553 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.007247446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.993521302 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.15899712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.325998048 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.989781834 seconds)
  done (took 91.385897493 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004872868 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.993178934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.993010705 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.993132874 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.993831041 seconds)
  done (took 11.896103926 seconds)
done (took 2222.81824972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.228992792 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.174414708 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.217432936 seconds)
  done (took 6.30286898 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.13843464 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.18504157 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.300724137 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.324926693 seconds)
  done (took 10.863136158 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.286969104 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.359094159 seconds)
  done (took 6.556609687 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.314812608 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.012537692 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.378437694 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.987737811 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.990257607 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.987624863 seconds)
  done (took 22.880809321 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.992082412 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.994455749 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.99070894 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.995849073 seconds)
  done (took 9.883836964 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.975718535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.710188729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.975204591 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.989735155 seconds)
  done (took 21.561728893 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.740073622 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.117528877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.733761457 seconds)
  done (took 9.502413166 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.744967429 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.338742479 seconds)
  done (took 9.9931983 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.154391496 seconds)
  done (took 4.066285519 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.020579513 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.263126791 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.548194852 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.567998058 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.652011547 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.238798604 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.338829947 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.225244607 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.441141126 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.482040607 seconds)
  done (took 26.687398264 seconds)
done (took 144.141322221 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.573022824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.019655029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.192926055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.359422068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.230932573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.19361054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.206065612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.354750409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.049412384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.039079866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.392501366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.22601759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.156205723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.011075345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.165633891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.013573456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.21990117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.384702802 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.040483778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.271635739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.222166197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.004423935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.193950487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.018982092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.22778699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.146225467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.548514115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.017704296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.175032513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.560360877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.147735912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.410489632 seconds)
  done (took 172.685771492 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.992419373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.992358898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.992434055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.991792272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.573854097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.993650032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.996364972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.992652208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.453231082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.447832562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994670633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.562007002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.99550391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993364296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992615517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994067829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.614116942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.994722712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.993578832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.993619564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.996368925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.391517111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.994418542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.398705834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.61252545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.995568377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.995080472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.996701689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.99372078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.993092257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.993323042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.995600359 seconds)
  done (took 213.829123091 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.99505413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998035552 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995311486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995774001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.995784416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995444103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.995386743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.994210121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.766377474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.742460945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.996972517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.997428999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.992446723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.994528552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.99611305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994800482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.995412122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.995628047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.996596167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.997646358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.99586181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.582940435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.996461738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.586910812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.99617814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.998975031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.99527618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997036623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.00004274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.000747243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005750373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.995324278 seconds)
  done (took 224.499137829 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.255394233 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.000341099 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.001009185 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.909210516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.001663852 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.001241336 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.008187546 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.249735204 seconds)
  done (took 20.357656794 seconds)
done (took 633.291806237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.467045927 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.32286956 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.185724954 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.028603616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.283634455 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.062134375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.022152428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.091514396 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.648214462 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.097461802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.669849403 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.045261327 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754375989 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.054364726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.144572211 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.082971708 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.570464492 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.653934861 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.202929706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091539052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.198230178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.960943938 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.10657045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.677586698 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.778554424 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016672691 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.087243277 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.574456046 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.033623879 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.182319162 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.791345262 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333581607 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.036742738 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.021303041 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.079564903 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.059030672 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.285152291 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.037034345 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.148401897 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.771811665 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.101145033 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.559131533 seconds)
  done (took 108.238686413 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.991404983 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.990414156 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.991035597 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.991667904 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.991014978 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.98972992 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.988437284 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.990757578 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.991602386 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.989223148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.989636283 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.989834631 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.989038142 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.989246823 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.990365167 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.989812253 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.992537175 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.990249991 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.989346954 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.989170338 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.991329313 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.990670615 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.007935973 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.98976772 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.990706412 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.99190256 seconds)
  done (took 53.699201692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.004807993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.168108664 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.245182646 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028762989 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.005452046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.007486885 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.024146996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.010475889 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.007638233 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.006900325 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.098413502 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.011219522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024247984 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.246133901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.025097305 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.007016328 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.00727835 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.006315328 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.177841427 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.022653639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.026000368 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.012437005 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.026206583 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.021911594 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.008549407 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.0057004 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.01086291 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.436767258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.016923339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.096943239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.064472554 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.032855394 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.392031389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.253276947 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.065664158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.016815565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.00589528 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.098822676 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.012455596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.006959199 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.025134024 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.014347227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.242109254 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.499452779 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.023148086 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.00608984 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.447162329 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.110936581 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.049206023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.017611941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.243231228 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.027690846 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.007985101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.008312122 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.045156675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012195993 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.007348462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.306745091 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.020867 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.025608838 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.013771006 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.009275359 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.177585166 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.018197884 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.168894779 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.019596608 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.014660974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.009911565 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.244109415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026707062 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.502551689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.024290115 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.008067819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.100115564 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.174872307 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.479030063 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.021625045 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179598682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.407903345 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.034042457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.015706682 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.426032204 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.038173078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.017433171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.010598617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.011078363 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.009044482 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.054176971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.024180739 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.438013328 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.507922266 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.327262064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.037419358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.022580998 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.010270298 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.306580904 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.019492291 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.009814677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.239473272 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.516461307 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.026139572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.016169902 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.493081989 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.028419897 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.030175832 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.019138787 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.249658184 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.031856408 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.054798984 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.011334718 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.016450395 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.012997096 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.02877754 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.019075874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.011700549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.484309415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.122519955 seconds)
  done (took 248.143653804 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.007985402 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.010525954 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.005152361 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.009882114 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.005899139 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.009475755 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.005246374 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.005142823 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.010347008 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.005199721 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.007124804 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.007235364 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.007339578 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.010310503 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.023827301 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.011644509 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.611169248 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.007647987 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.00694833 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.016543146 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.661188388 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.015253473 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.008884461 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.016569384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.005632524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.007536132 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.015404488 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.014122686 seconds)
  done (took 171.4595663 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.013119421 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.127258414 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.036270339 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.042016062 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.022460245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.012049057 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.035044469 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.030267571 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.018695911 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.010653306 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.010784163 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.073344909 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.02534918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.110215876 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.043007572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.044244002 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.115278763 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.02033605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.010464435 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.011103753 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.043115375 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.008380222 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.074216604 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.141590928 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.035512134 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.130974173 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.021645699 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.014403392 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.012678344 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130108662 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.031637869 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.074571747 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.044748369 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.032118763 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134914288 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.132537685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.11740956 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.042287506 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.018479944 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.011648253 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.012843165 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.001028471 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.130581161 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.037080707 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.016308175 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118278238 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.03677718 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.014298946 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.024198635 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.013158097 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.027834008 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.033269122 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.082541145 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.15026001 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.052942274 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.039813509 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.038981987 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.315984673 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.026039693 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.114828742 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.008093333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.131004518 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.03947113 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.003417536 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.015099966 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.019981541 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.04365177 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.046980917 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.118870137 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.023197483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.11567895 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.048908595 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.022458589 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.014328295 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.017093706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.132403255 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.135387758 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.050031476 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.053886075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.047088427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.011804763 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.016303712 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.004426519 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.034687809 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.020510717 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133198253 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.136686927 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.022733835 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.018268459 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.01964866 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.018494112 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.043894203 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.14332202 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.056897216 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.110251626 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.084662628 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.095498867 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.036252489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.030960991 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.021263881 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.0816561 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.033988254 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.029003424 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.367945028 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.087359136 seconds)
  done (took 218.030458603 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471033968 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.071438628 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.074924808 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.334687581 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.366597069 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.054184971 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.068152311 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.067784443 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.089512503 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.258774186 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.139028696 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.085861333 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.05316975 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.039467568 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.064208308 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.08941024 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.075255225 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.403288813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.176474003 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.208740654 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.050196751 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.354690257 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.338191844 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.458162687 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.101699405 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.389633241 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.733045675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.208945962 seconds)
  done (took 65.767374494 seconds)
done (took 867.256666694 seconds)
SAVING RESULT...
DONE!
