cset: moving following pidspec: 19318
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.222473025 seconds)
loading group "string"... done (took 0.576465236 seconds)
loading group "linalg"... done (took 8.317373545 seconds)
loading group "parallel"... done (took 0.173892341 seconds)
loading group "find"... done (took 1.259937452 seconds)
loading group "tuple"... done (took 2.015072722 seconds)
loading group "dates"... done (took 1.340361457 seconds)
loading group "micro"... done (took 0.202188766 seconds)
loading group "io"... done (took 0.949405422 seconds)
loading group "scalar"... done (took 40.741050448 seconds)
loading group "sparse"... done (took 12.504913013 seconds)
loading group "broadcast"... done (took 1.03270547 seconds)
loading group "union"... done (took 14.449756895 seconds)
loading group "simd"... done (took 4.923790483 seconds)
loading group "random"... done (took 10.012333482 seconds)
loading group "problem"... done (took 1.621377667 seconds)
loading group "array"... done (took 23.17410719 seconds)
loading group "misc"... done (took 1.695628804 seconds)
loading group "sort"... done (took 3.488958348 seconds)
loading group "collection"... done (took 18.078836164 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533668163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126330451 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136950375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119947065 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150437601 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117714089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124435621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084493162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.920070089 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151354819 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115611474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433796021 seconds)
done (took 5.394600107 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174697003 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09032196 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079035467 seconds)
  done (took 1.21670079 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065951174 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128607524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06736455 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06770434 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067510807 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066942901 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0672137 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067300352 seconds)
  done (took 1.581511092 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073243882 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068770695 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066471144 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068991355 seconds)
  done (took 1.328024745 seconds)
done (took 5.426057167 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791695728 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210613703 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190661654 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.409120057 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139192334 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183776204 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652433012 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324587062 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204740971 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096573292 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112770778 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360957019 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124962455 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65318323 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081080626 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096673688 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140160481 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450928634 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072059448 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088464261 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093263107 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131913594 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090901665 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07776484 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152817537 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071110009 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143099375 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08404623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069413478 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222003978 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175612865 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665685553 seconds)
  done (took 10.450028227 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10157038 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099458379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069506417 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126769141 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09810685 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070272727 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075864182 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068165219 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090381164 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129616163 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091760675 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108687083 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066961296 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069919822 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083643541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197684862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08093693 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08197365 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069572338 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078946159 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107861241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081500616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080610739 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080248573 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129180906 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170020702 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096702145 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098805901 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067591859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081883124 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115417673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131502618 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06657522 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067008755 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125998114 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095620722 seconds)
  done (took 4.545608186 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097613536 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153107146 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092166441 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141190116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066580637 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11459469 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067724826 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086155307 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241118783 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.403422389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.624552721 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152684675 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120124479 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108144184 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073531339 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070997628 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069508449 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.267349111 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104593522 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114931954 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083954256 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071327578 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070349224 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070179558 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072169479 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064717017 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069423559 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087586894 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07657616 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334658373 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125393627 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068667243 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.829098216 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1659787 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068846107 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105540575 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163984939 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097549248 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146492238 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070265468 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066280509 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160718065 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06515896 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21027826 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070289445 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088433415 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112645881 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12039915 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066475156 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066501005 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167001387 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065773142 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081778831 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.264594426 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06745737 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152551123 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067860986 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292214725 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095319343 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072765249 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065951929 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.213421616 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117312557 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069549388 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06908543 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069484277 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069520133 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377097335 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069263579 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.024197838 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071977594 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07999631 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071352511 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072204522 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079449509 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079626065 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093518628 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093708143 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069060172 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07578203 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06908281 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068375621 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068827909 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095989528 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393088349 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068233525 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075057311 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064923334 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064909813 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067161558 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095022333 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099336334 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067552167 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066633677 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102440445 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070736883 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066475263 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068134768 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117422729 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069752539 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112557424 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066703556 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182630043 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098701395 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070419502 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101701626 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077281566 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0712452 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.46351378 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066145848 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073069668 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066655599 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068235165 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067639303 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079127392 seconds)
  done (took 21.989869787 seconds)
done (took 39.134418308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239925658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082695377 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083568738 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083500099 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083500934 seconds)
  done (took 1.713907817 seconds)
done (took 2.836055858 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126808249 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102272612 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064738502 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097976231 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064995601 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101172556 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103262173 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083676037 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10034492 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065485746 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097359292 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065038628 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065521819 seconds)
  done (took 2.276848755 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08258483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083210212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069594908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08208158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062717018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082579695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081049035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088925739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083312193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074454015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064653726 seconds)
  done (took 1.970150093 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08240418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083514664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070367255 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082736899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063228785 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081606719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081670039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087338388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083585171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07523409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064664322 seconds)
  done (took 1.969414674 seconds)
done (took 7.324641702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078483348 seconds)
  done (took 1.181781636 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532789966 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.598911297 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079043163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100542667 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19793523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111486585 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238815424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085776027 seconds)
  done (took 8.221810036 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095620162 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084559497 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072945831 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070973021 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07147178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071251202 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070760693 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072304587 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072254531 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072032618 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072404586 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071367632 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07166174 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071383417 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070978552 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071335598 seconds)
  done (took 2.371771698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097678661 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097031247 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075176667 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076252643 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074922087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074555535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076968183 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076679571 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073498545 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075006676 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077992767 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076086945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07531513 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066773769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075978811 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078483282 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073860786 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077103495 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077231947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077988794 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077771771 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066122514 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075494939 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076226276 seconds)
  done (took 3.067647713 seconds)
done (took 15.955235803 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115491702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080673632 seconds)
  done (took 1.307807859 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07893717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081993255 seconds)
  done (took 1.280388286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077276 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06335917 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085823698 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076253203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065381671 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065548634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084356507 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065815988 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065158836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065241056 seconds)
  done (took 1.833562135 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065545635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072572062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069405861 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078620787 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070088527 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064122854 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06832702 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065289026 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073789525 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06422702 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068512394 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08371718 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068618136 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08508755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068783127 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06812978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070296674 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067671237 seconds)
  done (took 2.396435896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063147443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063830045 seconds)
  done (took 1.252481164 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066253748 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063277513 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066072426 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065991851 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063856967 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063153556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065453432 seconds)
  done (took 1.574919867 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402719753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123501733 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328226731 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072168813 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080124302 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252558937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066283177 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071638338 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071448199 seconds)
  done (took 2.63216027 seconds)
done (took 13.408217621 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081040747 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086351116 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098104266 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412251073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093091115 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069705585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115552046 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181507127 seconds)
done (took 2.272398545 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216619489 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.860967991 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.476476907 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211318824 seconds)
  done (took 2.675261588 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347948879 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083769991 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079628059 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069156883 seconds)
  done (took 1.716947388 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067320232 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070745727 seconds)
  done (took 1.269969146 seconds)
done (took 7.012161769 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179187683 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091693784 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066219412 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066266492 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066027847 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.067268421 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066167658 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066429985 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067436268 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066514773 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066364722 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06636493 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066284125 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066193079 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066782664 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067095896 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066449104 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067065969 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066349672 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066847807 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066995922 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065867719 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066552492 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066574223 seconds)
  done (took 2.899272435 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081011172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067048067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069064643 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069670222 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071418025 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071605058 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070727916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069448761 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070868115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068823784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0712461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071565937 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068632725 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070995955 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068835546 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07172706 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071260538 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06859198 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067165765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071149635 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070284884 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068795204 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071370122 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0703687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07139105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071009035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068519954 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068855252 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070548431 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071528274 seconds)
  done (took 3.253778882 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065592909 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061520242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062174377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071738936 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062868045 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064160469 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062896745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064038951 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064019823 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063052785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06436593 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063709106 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063441096 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063748984 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063966192 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067136065 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08085657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063028093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062668253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063517345 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067281565 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062658602 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063474074 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063040694 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062783442 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062596729 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066360276 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062705863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063415381 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062753764 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067086982 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067361411 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062961319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06825337 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067341683 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062931792 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066887695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062800925 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063712464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06141283 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061549671 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061210964 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06133384 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070291046 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061389477 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062551072 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061686281 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062956864 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06203637 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063501783 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061121987 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061198642 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063662673 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063367992 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06825179 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062684638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063617391 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062614675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063760223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062732493 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062835294 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062559425 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066141956 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063522714 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080192465 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072278988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062579374 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064093813 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06356344 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065971679 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064159749 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078591005 seconds)
  done (took 5.794336632 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084725193 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087447392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066161676 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066463395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062314865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062053616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069979001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062121279 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066568538 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080716246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062507905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067018662 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066382598 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066205151 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062200333 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066777638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071607823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063155513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06312659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067410036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063758523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071789709 seconds)
  done (took 2.655582408 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14905698 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067956703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10535842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072940757 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072575871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074908454 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069832205 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069716172 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06973323 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070063015 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070567129 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069930746 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072574014 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069939626 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070625562 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070155104 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069636932 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070510906 seconds)
  done (took 2.53330168 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078722998 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067397426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086653708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066921086 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067452387 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067131206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071157137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072437846 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067754954 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067451013 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07206806 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067495574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067280687 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068084134 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068711028 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069413613 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068911581 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069456932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072919969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071310073 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073492867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073914874 seconds)
  done (took 2.703511872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07867431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067628477 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084095998 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070119038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063872246 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063779294 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.079393343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068156098 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070092812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068779399 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068255388 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063631424 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071020725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068771102 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071290368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068287226 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068067751 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068293093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068210654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063466912 seconds)
  done (took 2.543793504 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082760931 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065093514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065439397 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071465517 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065771772 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064794292 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071232105 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065285006 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065124799 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086640769 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065320527 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065625479 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071542131 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069360583 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065371569 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071544865 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071166726 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071550219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068204917 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06496614 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086060474 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065685839 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071538567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065892714 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065870307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064978012 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064991771 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06913476 seconds)
  done (took 3.095197275 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065644701 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065165357 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065112583 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066651034 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066681643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066630166 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066762963 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067115989 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066455183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066928822 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066215052 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066461518 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066374227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066716242 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066220079 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066380555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066720807 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066862824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066569984 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065901346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06487313 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064724433 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065169782 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06541017 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06517719 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064519472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064685895 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064827264 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064818624 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066566605 seconds)
  done (took 3.134214197 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075110007 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075296001 seconds)
  done (took 1.307206033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063810209 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078672833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062820462 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074425716 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071957709 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066624779 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073672486 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072354982 seconds)
  done (took 1.716128207 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085581008 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076197136 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065863733 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078165726 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076849823 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086658998 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128521128 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066197411 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076506003 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066401504 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084390825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067886096 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076472896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071011268 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075952611 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079531641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062990989 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070093551 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065742514 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063706688 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066305363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079550857 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075491382 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063640372 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071047947 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093771564 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082053859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064967463 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072813393 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078075402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076131829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062609139 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065985557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065970091 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063703942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076952003 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084842052 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072990151 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078310101 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066469615 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073776657 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063604091 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073929017 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076011029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081617058 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065782043 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065268762 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062953377 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065976562 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071590449 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063194145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069673104 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062600064 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077948009 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073546294 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080808709 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064526893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071091476 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072042622 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072676209 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077213375 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071707131 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075450936 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065081497 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080786935 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075090349 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077708832 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063251816 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062358796 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063662737 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08044765 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094588772 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076221691 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066321536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066842075 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064456722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072900603 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066400181 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074860492 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077571824 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065433844 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070311461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078048055 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070125677 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072202537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072576497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064375261 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068929533 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066528179 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086184972 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064934702 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064035931 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06679225 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08158034 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072678881 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067905462 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067181062 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0776113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06263374 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065755545 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06676001 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071213276 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079875835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069026177 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069270323 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078452761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074051102 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070081041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071692952 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062008437 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064466814 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066295925 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076093773 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061343634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070720704 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068404305 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065143762 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076242351 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063293568 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064115621 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077038194 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07579228 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062894217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061272982 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071384097 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06393382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066317199 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077916067 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063033904 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062327139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062798635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072014921 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063742118 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071742729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06822902 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069617337 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.189245633 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06436977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070638375 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079069062 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069619194 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072426772 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076623658 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072229324 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065214899 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079166076 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072544144 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067985942 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075816608 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070273345 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063712074 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068267586 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072600936 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064854292 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07273032 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067716198 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07204946 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066821677 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064954671 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071617225 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065707401 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068106715 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070416092 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065085147 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080647194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072225652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063512984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063083256 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072412433 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066979084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064873885 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06762338 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071731792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065766358 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063487053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065017629 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071410969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073649376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068837348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06693446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074991282 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083723563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064893126 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07312509 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065469027 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066569686 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06635352 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080517439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069604433 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072960691 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06284102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075691078 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078393398 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068335789 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063583306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068084897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069387982 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077807965 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069445732 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06644473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063519503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070433798 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067459126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071025727 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063288235 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06684337 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071171991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06429169 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070944836 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065166332 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079516492 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072973328 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063500964 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067930088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06381345 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076714551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063303259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065817795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06715068 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06596872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063829174 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070249448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061188754 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076108317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076817195 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069047881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066233642 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063514232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076172499 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069354049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072233077 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070966816 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073348858 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078982059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066450453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070915433 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079431583 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064195615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06163251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075047415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062121506 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062410894 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063067417 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062542687 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071222159 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070450277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073072383 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060819109 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070045091 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061531444 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065433323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061261583 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071814016 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071887896 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068927879 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076756594 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065459721 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064353847 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071944408 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063887698 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064976079 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065632519 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071401702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064659053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070490021 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066819766 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070476123 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066215247 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061006199 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068222775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063403744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069059178 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073286979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063128482 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06869838 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071040285 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064533032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.203491826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068842688 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067767201 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071817862 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070879926 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069464736 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071493441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062505238 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076518439 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063892964 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076377142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069465444 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061360021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071243073 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071445608 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070922964 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066127338 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066306375 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072245883 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064502169 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072085705 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076934983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065282566 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079928239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074875605 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069341538 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070890208 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070016475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069535412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065951803 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068840078 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064382238 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070374408 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065821836 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074587233 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072163884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07089992 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070966976 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064969059 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06931476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064744603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061353951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066277927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06783228 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065713528 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079488404 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065684253 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068250634 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065213558 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066906959 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064934608 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063457273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073136162 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073680015 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066067215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076913949 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068280629 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07201895 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081816935 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063288529 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064909788 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063960205 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067183048 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079048856 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066361224 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080216048 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070845559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068242831 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06315109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066500816 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064623834 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063076317 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063717835 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073995402 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067909685 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065229111 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065605066 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072584744 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066271779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078811281 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064701847 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070204112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066160542 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062962894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068193035 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067904515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072252533 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066193863 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067371159 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063316258 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065474002 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069941797 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071632656 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064980395 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071250046 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078061201 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065591986 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072623424 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067888669 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063577884 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072699198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065213818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065557372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067950833 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073233031 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073162434 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066116327 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079019811 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067078684 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070001697 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065812522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063667896 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065295965 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065387148 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064971645 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067688069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066015861 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078313944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063336864 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071759355 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070462158 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06888469 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074928293 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06541126 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071598412 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069849531 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066492225 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070540788 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076058752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065849586 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069724689 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062794482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067920766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07185184 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064870813 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073712031 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06767814 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063038135 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068136058 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065435339 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064449181 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064078388 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063833661 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074284457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06527217 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.204620408 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067951464 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064985594 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070170497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067230306 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078020041 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072867497 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073477119 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063974178 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063240561 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067034599 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06595467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071875687 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072834736 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075947889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07176314 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067567219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064550142 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079046437 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074286591 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071307302 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065223241 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072714682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065284428 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071732129 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070301005 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070787034 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066461843 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073837575 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071110115 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068678478 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076312289 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074518967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066804318 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072417049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071563841 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070884612 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064337564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065009765 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070638495 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072571636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070656179 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064066999 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07919852 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066704769 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070985947 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068563481 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065172185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074687745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063679304 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07236005 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066908744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066703121 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06364924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067641596 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067222969 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073349835 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068312914 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063810866 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082191649 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080376281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072120036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064973799 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064804718 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064060438 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063881309 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068436672 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066509995 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0719736 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080987922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068544982 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06833744 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063889557 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065991756 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07309738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073588851 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063320403 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064077748 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068801945 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072297119 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077629885 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064483209 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065266439 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073230683 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072503375 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063630873 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067622987 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061244694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071692481 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080495958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064450893 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070455524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073874244 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07743277 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063940858 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062148459 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064420501 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070461656 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069616814 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06492782 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065294336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08277862 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071157981 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066476708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062685585 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071281904 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066744276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077802095 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066944738 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068312371 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073633494 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0724456 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072522627 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073750308 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0750215 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069675161 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069606703 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062416953 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068319588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062307965 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066230224 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065656671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06499634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069723947 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071448285 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067533461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080006247 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081300141 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067600434 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061834635 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067329051 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067530555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063164454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06529822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063110861 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063391111 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063795356 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064100065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071037787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073889263 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069211963 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065110629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064343906 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061966977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072207702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.205278166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072253318 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064098291 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065884895 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065640411 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073354985 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068039194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066331886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071263961 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070208974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07034833 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062506381 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075978581 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062734968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071512195 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066392083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064064024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064494691 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071275178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068156101 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065550657 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070558563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071506214 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067170494 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06278382 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061397731 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073134863 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06230326 seconds)
  done (took 43.152389092 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100858011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063733382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062904489 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064639523 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073780435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065233772 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064453835 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065351633 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065403313 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067171219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064015011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064262223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071632095 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079156335 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074465933 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068499721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064015535 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064883278 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064009913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065066188 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071970239 seconds)
  done (took 2.686675522 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070288503 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077713994 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075792101 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08202546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072991935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069681966 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077434369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069089912 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077514627 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074604415 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077663152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069449312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074590716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074509637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074990091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070455638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07809063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07329589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069338816 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075789441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070468032 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077602653 seconds)
  done (took 2.866421771 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064086681 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06331645 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070038841 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061542315 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063352714 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062049608 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066735184 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061797976 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066190415 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066086331 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066240309 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067676143 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072649802 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06361418 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068485739 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0628799 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110881619 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067889613 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065493332 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065988689 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064057297 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072712803 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063842947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06420048 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067663925 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067986739 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06590765 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064225147 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06491047 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067301008 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064857588 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063181192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071498063 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071080793 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067246873 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067675967 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064873489 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065658684 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066375091 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063389794 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071484874 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064157368 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066023993 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071794938 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063335217 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063762164 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071639538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.0653717 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06365929 seconds)
  done (took 4.523242418 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074163149 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129770353 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0694657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092620674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078197962 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071029675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069710987 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093896543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065213973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065621849 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079358911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079956648 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067500979 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069442925 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071314195 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067201693 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068366393 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066232479 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06983414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066204957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070601309 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07192181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078734662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079208487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068310018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066286514 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06675203 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068892478 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078604184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071010458 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068695161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069468876 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079334106 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07230322 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066632918 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066544141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078396467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067297127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066737327 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065212628 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066707345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068434364 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071460359 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079631319 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067530983 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072183387 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067068092 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064767919 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078782371 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066756095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071969691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080261433 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068132905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067801135 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068874205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078614965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067111874 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066036178 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067220188 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079191474 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064990016 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067700198 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079337062 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066142372 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070844073 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079732493 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071656948 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06736998 seconds)
  done (took 6.297168536 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072025488 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093818878 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080030398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081964175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075501341 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075460487 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075196214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075141858 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075613597 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079068592 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075858504 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117570086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071479372 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076934575 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075263721 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075749052 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07497143 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073441715 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073201829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072973407 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073418864 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081368501 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074645723 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081549012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078294122 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070608976 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075150408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074823109 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08126577 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075028785 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078582537 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074749258 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075397159 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080142737 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076487013 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072888778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063131056 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073635599 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075305497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074856759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070652087 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081668073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074894356 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070918583 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075154888 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074848798 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081789133 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07821741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076943217 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078759426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075021441 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081739117 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075242352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075130572 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081810785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083946665 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081057731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081775873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075335267 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081109464 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081434753 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084430261 seconds)
  done (took 6.083744333 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077942386 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069623495 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081138179 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061987357 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064692251 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072217597 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062503665 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061847507 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070427144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069977967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071930813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072426646 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07423858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072073289 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071798513 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074296588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071771266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072304516 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071231788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073415824 seconds)
  done (took 2.695884209 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07655816 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080813832 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067397766 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07197184 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06732592 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071938972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066677935 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067565705 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06811833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067806111 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073633815 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074345323 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068618568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073328325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075345577 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074055869 seconds)
  done (took 2.409904635 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082752764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07006819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077031373 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06462161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069069311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064364492 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064741977 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063398964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064058644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078242078 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064937584 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076255841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064885015 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062953799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063007122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069806467 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063987296 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06449171 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063823915 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076159595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070785787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064448559 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067069043 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063340908 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068616828 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070978328 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066714319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06879325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064767231 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064600623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070991908 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072305317 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064680168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065460881 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064084239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065577268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064687896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065375189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071014738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065032735 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063170688 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070484087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065210032 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066200256 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06420875 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083706857 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064129176 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071184302 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065370397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070567836 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064960306 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067570697 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06575378 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073040671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067834695 seconds)
  done (took 4.99736991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077908026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067168789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062453185 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062684726 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069092103 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069740973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069240062 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069439118 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070168777 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063582765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070182893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068585103 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070016971 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069268073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069844564 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069595582 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063335812 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070090743 seconds)
  done (took 2.511870011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072449836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067047129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072134631 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067970391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068245232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06802312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063902781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064261298 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063831615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067670421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068667064 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067990673 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064024279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068603793 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068274152 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068230948 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068577132 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063716003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069164422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064469066 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06799614 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062885117 seconds)
  done (took 2.748501756 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095239884 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083470008 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141246024 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07940067 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08711895 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072175913 seconds)
  done (took 1.829361476 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092407955 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098080218 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067245371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068222847 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074720841 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071790456 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072505607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073015927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077221819 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077511309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072241343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079743724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077079738 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07965275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074492031 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074142705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070896232 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07030835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067238404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080083058 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070888518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075907899 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072585715 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072065969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072532958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079164522 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076798894 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077373764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0721142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077205452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074492852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071949756 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077049513 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076501782 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069033139 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076431554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072550474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082069381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074755263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0786708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068809428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074567771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076792845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076553576 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07564942 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071222955 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075554244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070369628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070464843 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085055379 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072794132 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076430564 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075102156 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074794683 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08128682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074931644 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07626005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072784016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07494422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076864216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072577428 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07655078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075625946 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072855439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076657366 seconds)
  done (took 6.241558613 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103341086 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067528256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070548623 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075592389 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076950021 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070594425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070952029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07080529 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070468435 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067876252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105639134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07093898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077216977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077163408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070961065 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070954796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070720206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077096138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067944811 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081775398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070983784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077219694 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076926872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076484448 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075596006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072882871 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070828047 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070390436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070638643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070754512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074507931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071092008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076800248 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067990155 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076756889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070710832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070373274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074489513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07087561 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073123036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076946202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079919173 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070499599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070699328 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075428852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070288839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070302876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067830538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072323999 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069183565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077594681 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077398703 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077200441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078632248 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072137917 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072465531 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072593949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072112032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072119575 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074523148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078607269 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0723916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083178815 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07249869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072726673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078889957 seconds)
  done (took 6.198037274 seconds)
done (took 128.012436724 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208228765 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186586705 seconds)
  done (took 1.65635147 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074032683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104133787 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082406716 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132957145 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071121333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105891802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104341648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083181945 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070958658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070829759 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070907552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073792835 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136715585 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071207731 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071022874 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073897113 seconds)
  done (took 2.676856903 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104945313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214987879 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111338174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070421275 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106076426 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07712128 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069458804 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084763893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076206031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071089549 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077115741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075762127 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071035196 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075340706 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076484342 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077700885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071135264 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077528733 seconds)
  done (took 2.869955516 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102275594 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093589772 seconds)
  done (took 1.481337749 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172844329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133400623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202539983 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343918075 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153940968 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.426846592 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137878559 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137150798 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111827394 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.133948609 seconds)
  done (took 3.23348273 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103259937 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197705161 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298055755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123872855 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078434424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114300399 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123323774 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081478937 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080604956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080678174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080934292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077771439 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100091151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076834533 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075832816 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077899343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103203181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074999701 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07585231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076474587 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105252749 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071457494 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078591708 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07583623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078635411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078406629 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071207169 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069435777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076158775 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075917072 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08204203 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109665112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078516809 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104447041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074103495 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105670557 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078771839 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074353036 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075675264 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074814236 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077774837 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077788337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078724731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078158608 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071265247 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0809302 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072691109 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071689769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082155259 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07288743 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082718463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082228165 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1081122 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072718411 seconds)
  done (took 6.155678557 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107757639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106836019 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071266333 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112695386 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104167524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070837574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105582339 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09918082 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107597577 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071209394 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069561783 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071267123 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079654479 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081084229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116086103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107712303 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073035795 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070870028 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107830423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107363792 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06967251 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102021632 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0980289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107147777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068853702 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071372284 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069394363 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072467996 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078069346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079531592 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070188063 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079377223 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083201303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077109301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068464424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069397287 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069721095 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077782774 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078942096 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078445618 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076329794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068548593 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069529083 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070208898 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070668659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070044573 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07972018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081120963 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077591614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069592113 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070865367 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070097462 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071997905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080082786 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078687883 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08216704 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079829221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07045257 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070396571 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073555928 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081920824 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079207216 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077739529 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069833273 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078918162 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069288191 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082109481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082303226 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069542336 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07059367 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069084148 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069441283 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070028101 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076022272 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076026003 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070635073 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069394554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069006407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078790956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076838473 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069595221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07713745 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068062385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068970185 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070216953 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070323186 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076036511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078506741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070553963 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069203516 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069616312 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069061509 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068770949 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075638771 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078355798 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077535157 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076467057 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06941142 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076663354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076038273 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070273839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077092241 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069199957 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070110643 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069136526 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075437056 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074694274 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076780529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068682675 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068074257 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07522691 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077734386 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067980367 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074626263 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076972309 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075004215 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06724661 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078217003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068779513 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076409161 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068497859 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214535701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071004305 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078750491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070935665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070115962 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07037441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07837697 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071317758 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069427953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070889713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07015031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077452251 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080695983 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071060767 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076794201 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077660727 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071146292 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076996268 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0702614 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078277904 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069993867 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071011815 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068403983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080367567 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069974957 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070013549 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070153224 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078680944 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069906632 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078936294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076749692 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069206765 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080574228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078827887 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076385775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078861589 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071330696 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069576389 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069317443 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069703509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076503071 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077712841 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071043694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069439402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076516939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079072906 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068731848 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077299275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077528163 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077612745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069802027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069926735 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079938779 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079816367 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077039243 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077850447 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077373675 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070010394 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077294385 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07742896 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069903925 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083178111 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069607241 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081638978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077544435 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075946645 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077894944 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079288104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079303801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079681291 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081834928 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068827249 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069190954 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077576423 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069623563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069677526 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077038499 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070585182 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071055654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081592009 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069636417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079233523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07013476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078267937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068181388 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07049016 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082180481 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069982511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070648083 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077197491 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071905278 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076636813 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0789514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076995506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069478354 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070863696 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078097771 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077755506 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06891141 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069014151 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070826725 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076594946 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075479042 seconds)
  done (took 18.473493124 seconds)
done (took 37.845664286 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210390473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156669995 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188816276 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116724994 seconds)
  done (took 2.056719209 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108073697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098328835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.08952224 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068016001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097260562 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068248839 seconds)
  done (took 1.846847731 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297469338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202849017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181717364 seconds)
  done (took 1.997065188 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210453673 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202740494 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477336541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289984834 seconds)
  done (took 2.593594162 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140623321 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083149307 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065059174 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084138202 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124102318 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148923938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093319074 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117898235 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076528525 seconds)
  done (took 2.304392241 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148795015 seconds)
done (took 12.294293869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103206417 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.278118169 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.262487657 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078425451 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075792989 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079468808 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070928437 seconds)
    (8/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185275396 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214503755 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078660736 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.246374409 seconds)
    (12/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.235096677 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.195091815 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220178666 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079709407 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.403937067 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110813334 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121066891 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102584814 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077443154 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0937348 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183824776 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07571821 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.159902036 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075678518 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140279324 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112260266 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.183994365 seconds)
    (29/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.14116939 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103987287 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075976507 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081905462 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184684344 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069068144 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072939513 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160447323 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076559306 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106670722 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07951471 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077639072 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185901729 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081098833 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206101374 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065452374 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075845059 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075623146 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066891719 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125551633 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176361034 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130853716 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12697311 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139509014 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.162583911 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178995289 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.201697139 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118405138 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.067357371 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074508914 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092740835 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066764745 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092136993 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126097079 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075257528 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195707711 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065375308 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075050422 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177768488 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192339619 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11429617 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228999785 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 0.13217924 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068225876 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072246012 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077265673 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.169058677 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066368419 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065443379 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169094278 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094063261 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066254306 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092263974 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.229040132 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068096533 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.2177926 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215395562 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177329447 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.280750294 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090752833 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090190291 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.18298162 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179330411 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.182314291 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178002075 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067082478 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076204234 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067775823 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175075044 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067843619 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092981058 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141513147 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090044077 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068904323 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071806103 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19941682 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092796295 seconds)
    (106/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069255914 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079609856 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074005663 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08701709 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082907758 seconds)
    (111/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066814282 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.138865978 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079558796 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076991201 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087871968 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073866101 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0752502 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067103433 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066727262 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073344934 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084434939 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068496729 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075358628 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243207741 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069561889 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073947802 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066955379 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07479901 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070767244 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074139985 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073716591 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076557988 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184021228 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08656168 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076507455 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.131580214 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069811144 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067131496 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067935248 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068063963 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139637648 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090986663 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074955532 seconds)
    (144/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075501202 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068714414 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069463555 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073755788 seconds)
    (148/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066124228 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066683263 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074407638 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078426337 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.136075675 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067845771 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065346588 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066374192 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074692245 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139078895 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06574681 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089173821 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.164251525 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166387873 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074356313 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074233976 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069809526 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066543186 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078494896 seconds)
    (167/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07965069 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066150923 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14209358 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175977754 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080725539 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079557661 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069367669 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178014884 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073294343 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074860585 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092610014 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068337988 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066771774 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065951306 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078354913 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066991765 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120717422 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120151779 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067458387 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114480599 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076393903 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125656269 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065654554 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07581678 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090665624 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.06970801 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065281035 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067979691 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06758909 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13803204 seconds)
    (197/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066294676 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133519737 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066482519 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072771378 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120203055 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127317279 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074143087 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086877966 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.193260938 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065095555 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07180211 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068150113 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067437763 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121647422 seconds)
    (211/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067085777 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.242714007 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070188733 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.226295853 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077116129 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071742299 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078911803 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181631418 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069428781 seconds)
    (220/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070744608 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.070210148 seconds)
    (222/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074273858 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070088001 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069116385 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069571758 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069058479 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075127066 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068000017 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075703439 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068355656 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066614226 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066798505 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068018106 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066814316 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067819649 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066794257 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069715154 seconds)
    (238/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07829873 seconds)
    (239/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076875588 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066256795 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137788119 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067344972 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066975579 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077773155 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066514759 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133485429 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074850086 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119914186 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066256501 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075218192 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093899994 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069202337 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076925446 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066436302 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088720829 seconds)
    (256/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09327512 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069845519 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094752853 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089317604 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076639043 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117686805 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136126093 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070196525 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066073509 seconds)
    (265/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069976379 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068302544 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066853565 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069248892 seconds)
    (269/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066453583 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091817081 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067135396 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067203744 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091249381 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076422747 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087130427 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174833933 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075675778 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176894474 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148233566 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075357086 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069176437 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.174732501 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068562102 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134520962 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.080890662 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068922489 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175631763 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093188372 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067002779 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07775921 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069049757 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067481558 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068288663 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 0.132911073 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114108987 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07364297 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066394158 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086828427 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066467515 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069395363 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066932324 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068550646 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134256585 seconds)
    (304/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067560924 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066100197 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085691098 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065755661 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06660632 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069415919 seconds)
  done (took 33.375342199 seconds)
done (took 34.700439499 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087523458 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098634283 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074130891 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093562751 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081372295 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096032107 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074458316 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079015618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081824828 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080532403 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079435395 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073309003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075578725 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075911423 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073522351 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097343993 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080386902 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074211635 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074666791 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066684915 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07435379 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067007318 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066334014 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072690888 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077788031 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073331282 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075980743 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075606945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066545847 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066924324 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072009121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075180415 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067276119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078686171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075930321 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075117514 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076054276 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078907406 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066179821 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066528206 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076624292 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067541846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076523093 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075031492 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073419019 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075173297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07681296 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081421971 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100849086 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073846651 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077045658 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077162742 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078165996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071935039 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071836742 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074716331 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072466712 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097293779 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075083608 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072532342 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07628241 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075787273 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072612234 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075311071 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076268946 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079258748 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08059582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074716321 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079155883 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075438587 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06781528 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076379839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072966168 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068299606 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082112145 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081486659 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067556977 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072850724 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076721123 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077148644 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068631058 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073406742 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068583835 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073629403 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072116019 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072728197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071779939 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073769137 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066352059 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075252371 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074694998 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07578937 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067856594 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081822151 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068434095 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075382072 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068776057 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067611181 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066280288 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071656229 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065983281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070517421 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075131625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065336599 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07097413 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079544155 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066590493 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073727396 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065623104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066184121 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077399197 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076605201 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066322169 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073795715 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067495397 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073382774 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068158865 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067906686 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06801072 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068069882 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071962087 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067989123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071687601 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071271681 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078179299 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065402889 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070599932 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070200418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065733931 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0719663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065513591 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065678517 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064846519 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078907785 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069625068 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065957735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070782271 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070851385 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075037401 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067167731 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075128707 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071519273 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069752244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071260372 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064246752 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075833723 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069048712 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068792148 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064073764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065318658 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064479569 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06431151 seconds)
done (took 12.634515653 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070040849 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117311238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093524546 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09337546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082639069 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06788425 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073953833 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.0912764 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068776285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096314713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088410874 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088863309 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109185289 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065862665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066708546 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067985147 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06829516 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078630015 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093835946 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089535506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105841051 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067368343 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086276069 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087176839 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083269422 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090020366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067729168 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068188343 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069911834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087112231 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091986933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070579631 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068100139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091766944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084804363 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079768982 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067824053 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075624113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067602627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067066983 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068739266 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087730233 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074993064 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077583903 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068426831 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074738358 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068487757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08262702 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084966561 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075009242 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082691182 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090742324 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070755977 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082935406 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066080614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08243893 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076532146 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067593105 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067765757 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072335202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067501566 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070116032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078822203 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076047991 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072255572 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081552184 seconds)
  done (took 6.601015376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084993703 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097329389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083056616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084206831 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068171559 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068804499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068389572 seconds)
  done (took 1.977773439 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067763887 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087763844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090850433 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090675801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086543641 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095021419 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077495004 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069746321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099606581 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068907481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090250247 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100914256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073687452 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080617777 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094890109 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0680234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093235884 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069641728 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069982845 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095242797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074473443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096807953 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079865057 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068304416 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082295697 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070151831 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102353088 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077637498 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0707703 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070930782 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070461955 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097058989 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082124848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083766035 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070639647 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084652881 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083139869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0734202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080600742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079452539 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083082216 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070602161 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068575216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070843832 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072938084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081282908 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067057845 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068994981 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068578587 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086792545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066884798 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079671505 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072647627 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07322383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073474712 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072989165 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076380695 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069162322 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087081768 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068670985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084460923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083644013 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080631522 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084012587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068848556 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082234753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08295986 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070470823 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071511901 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071256554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084797779 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071181929 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069118487 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078958733 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067649894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091693029 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091491059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06715605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080876118 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068080436 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068701336 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079290694 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091431117 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072877991 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068952294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071476707 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069482268 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070630437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066252435 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071634201 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06902432 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072913411 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068640668 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071134065 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070685746 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083593179 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06710997 seconds)
  done (took 8.942032466 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069877225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068205999 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069607988 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068484874 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06820451 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069063114 seconds)
  done (took 1.867534388 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091485088 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068343251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080683129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068807631 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105125667 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086714031 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086682309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080989725 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084367491 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082305248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086953482 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089416817 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091331141 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073054806 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086242893 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07140973 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086459491 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074118289 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081059568 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072152007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081426158 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070454889 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071509158 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088224 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071787328 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069809004 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079371472 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081440262 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081204452 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081104961 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07223828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073147216 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076892064 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077534387 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085113995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078742155 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073102887 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077323672 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07344502 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074414464 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088960497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072824863 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072598132 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07705051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080263465 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078838454 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077182141 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079371444 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086100052 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077024053 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0766982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069963669 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072259046 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074800771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076158548 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077109556 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074363902 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083586086 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072411021 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078345771 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07056797 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074458523 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079179467 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073843457 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078839082 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076875701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07850093 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072898513 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072008443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068811412 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075200036 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069355767 seconds)
  done (took 7.047594899 seconds)
done (took 27.885645573 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.514351843 seconds)
  done (took 1.919131974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.624843301 seconds)
  done (took 2.060121405 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.579359097 seconds)
  done (took 8.011024358 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401003616 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469595207 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747848916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136775093 seconds)
  done (took 3.226334393 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707649391 seconds)
  done (took 2.149525855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236970248 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229069352 seconds)
  done (took 1.922128619 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347246849 seconds)
  done (took 1.780107933 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06034149 seconds)
  done (took 2.49459953 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237390473 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160641296 seconds)
  done (took 1.839002441 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448262212 seconds)
  done (took 1.884446038 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.206485558 seconds)
  done (took 5.646586957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215725004 seconds)
  done (took 1.696682244 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234338325 seconds)
  done (took 1.673540543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754238079 seconds)
  done (took 3.195755804 seconds)
done (took 40.946055948 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084043255 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085858616 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086140216 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081601547 seconds)
  done (took 1.758933887 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075325892 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071270086 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075104778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071627258 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075612111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071361314 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072581613 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073811311 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071132648 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071667537 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071644125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072376468 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076914124 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07603174 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072661621 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076425414 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076648136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072786626 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074193802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071480519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069449699 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074373744 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07407388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070435675 seconds)
  done (took 3.197920404 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079888826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07394413 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077781899 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07429174 seconds)
  done (took 1.756513836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077500307 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.08868002 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087315338 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078041822 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089609872 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084451717 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067874676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068039281 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068968464 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079857237 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069336154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096842164 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089079792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080192259 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082120512 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066552209 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068415433 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088791639 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07960952 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078574309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069424887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079568518 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068182132 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090156223 seconds)
  done (took 3.343324767 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085298261 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067043879 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08391723 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092499963 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094356286 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066754214 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082463978 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094828063 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139144105 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067651776 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073099084 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067674108 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10590333 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067476663 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083590263 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110163916 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113281107 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070816915 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100199612 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068490581 seconds)
  done (took 3.188971819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083864949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070675096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072099138 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06775433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077784811 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074359688 seconds)
  done (took 1.902177173 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068997149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069174019 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068497603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06760381 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073530803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068316838 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070458893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071122406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070922575 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070751301 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070077343 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07023178 seconds)
  done (took 2.291803876 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21162161 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071160936 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073170632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067506842 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073377567 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06780243 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0836645 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070282424 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086464509 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067947705 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068598082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07140662 seconds)
  done (took 2.466818086 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190796438 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074732279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222151067 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145278992 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106094351 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112313136 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110512367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107805571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132740227 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097238682 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152717236 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158860023 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103792435 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126406966 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087832255 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120786609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145258143 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153151236 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099745083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153341359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138483954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123420091 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144703574 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100207251 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103915194 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117457322 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072432442 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077590245 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158421752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123026539 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135461082 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105210378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089991324 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170260451 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156784981 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13177833 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139593742 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081939483 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118155689 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128173168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191363467 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086943385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148553061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102481858 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077397138 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121348807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113315867 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11546758 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102055321 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087081258 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279206694 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173368125 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129337634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084612554 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115329031 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104660801 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109668076 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112604451 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168235494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14875361 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118389599 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070361438 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104874735 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141131245 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1244372 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105123718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118071758 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090315051 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124373129 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14723381 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124900911 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133033976 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113331738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08503607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11388434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130762789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120657501 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159367983 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11594742 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072358425 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116145819 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095939934 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07878241 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143855043 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07440436 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163713671 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096395814 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121401203 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122760959 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105214698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105309451 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14953989 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134508043 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101202784 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084606493 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099510716 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114634336 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13584272 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084327511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103165113 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108850972 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077226351 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126324061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074258142 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115154533 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095241436 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113946233 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116107302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076451268 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265020073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102960293 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099600404 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123609655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14817637 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08562028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079277752 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155098842 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114089722 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100100884 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13543742 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147428869 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118878483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095028278 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140904037 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165083119 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090268715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154993301 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103191266 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085049785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106128096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11832912 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110250768 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122335232 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08187618 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112901021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158267011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075944522 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097822636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12839673 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08276312 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080025405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101447459 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100576652 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094727777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098889096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101461469 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132158543 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116090205 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102846356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118625469 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094617961 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156117302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085493394 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099048213 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100990517 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071605524 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126197384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146231408 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077296536 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150464106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115749099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109020567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112197605 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081098184 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129171988 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076948036 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070920827 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131396799 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106608785 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103133168 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13894326 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262031757 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120409614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113830672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124710683 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122394228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12178156 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103801385 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087312582 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109331174 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122737043 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071734168 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089812246 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080892887 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09946177 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090672109 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08185468 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131813692 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115750728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104544304 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109565778 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093751095 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14007417 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078039354 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11858304 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11611796 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092591831 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144445507 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142688159 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123879269 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098355104 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129956445 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072468658 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073357993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08664037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117917235 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082504682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0820459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109472956 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141077854 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120118585 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129390411 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117016673 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111953652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148181576 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072290071 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117449396 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137359569 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113047869 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1020142 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088092385 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096080752 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134136196 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099178443 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168059562 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106934094 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115912418 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145818296 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099270345 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079554937 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102066151 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124353775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24994059 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13753959 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097030473 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085020412 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104259029 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077309805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094256833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119198375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11273963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128708585 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10762291 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123193677 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075936971 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107737254 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115534937 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115777902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082365741 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112863384 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156636679 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093969489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111026723 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141144772 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077199466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133196932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163420351 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136824654 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082514587 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101499085 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114754565 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12073412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114166898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132855922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102790427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129880998 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107196896 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084747265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090260742 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095970225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102574015 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.111923173 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10245402 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107939851 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093532449 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123276984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099018137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105779812 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112151615 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097671738 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093901155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093755845 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163271735 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110187299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156960318 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096201279 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13347486 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148106879 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073451025 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076698264 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077974514 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12873005 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081407304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272345704 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111650767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114853895 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119408258 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135395498 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098632157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07347612 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107945649 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128315796 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117408932 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093256844 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100224792 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149123845 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114676304 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077045193 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108332345 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109899728 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100755764 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163057251 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080342619 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103159752 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076455692 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080463123 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122209802 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142024374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08495588 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101077769 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115652414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110270984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122589288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097061876 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105446508 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124228903 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142999248 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124811781 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09144102 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110716008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126083891 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147217845 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101689636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097819082 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164100889 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144295354 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153155291 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087479438 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110222042 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110304784 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108011552 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131000926 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08429226 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155025054 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082082561 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126561901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096493475 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086293554 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120706465 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106112892 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084810095 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134132551 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106661688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07919801 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232292531 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108672104 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112385439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099452163 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074628826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130785988 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07276349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125733446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157926548 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078776502 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101151205 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09319038 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081184151 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099525909 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097991118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083923347 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096823496 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159890611 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085492119 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137705101 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126780149 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106775376 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132915445 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103867809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644252464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080994131 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145391998 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114029294 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170474846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099815097 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116009899 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109353858 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118909362 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135621128 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099311102 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176431015 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123353706 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111000019 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077439741 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098240964 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101279502 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08636899 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103130343 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107985151 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108742584 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092202171 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11070162 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116148608 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080966571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093588918 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146234928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1146353 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135668351 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133272297 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085293174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114199891 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129087413 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078958549 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110164891 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296558066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106126806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102387622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084778486 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101080858 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16431586 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074840806 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152314741 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115853162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109164092 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110152854 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110162922 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124650982 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102973809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116597931 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093767978 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108772518 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110633992 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085415901 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080466952 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104017035 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108527851 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.132853173 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093315588 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096813344 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142074537 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073171594 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097540881 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108787064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137700211 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160565779 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103342904 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081797065 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114073647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114809934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107300394 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114281827 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079754763 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07908507 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079630975 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098655328 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120834914 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107998313 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112932835 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108947139 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153206847 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083844187 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226592821 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093510102 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100410409 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087278194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078710125 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093603474 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093756314 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100354056 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104728022 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161074082 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091630418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087299343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088584551 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072763129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080074041 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118046566 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104211339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108324715 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098907343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.233346339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101343197 seconds)
  done (took 56.955274402 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119001708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100839879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098877761 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1469543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122134259 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200380188 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150893384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189221545 seconds)
  done (took 2.680546181 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069057432 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09510549 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103802433 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084965772 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06913096 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070995434 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229822821 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08215246 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06774627 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091600645 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077919275 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069367319 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.460529126 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069100882 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070517998 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080007569 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069348026 seconds)
  done (took 3.40632242 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381532993 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607971273 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354669888 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076415052 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.90333257 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090401019 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.185789006 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139002544 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083365785 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521198084 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.372627088 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135327039 seconds)
  done (took 18.408629582 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083298565 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076428044 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091537597 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090953282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078805272 seconds)
  done (took 1.976918186 seconds)
done (took 104.827693312 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082215401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.54297304 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069848976 seconds)
  done (took 2.196224648 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091967531 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089672359 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089876198 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087907804 seconds)
  done (took 1.924740876 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075944252 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07755054 seconds)
  done (took 1.709764213 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233100094 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176743103 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094919882 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083677329 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080949628 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081365377 seconds)
  done (took 1.805739076 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073267969 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073847448 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073859662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077920244 seconds)
  done (took 1.853323461 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07166509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067344718 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069600193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072454677 seconds)
  done (took 1.836144993 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084824862 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085327092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080156451 seconds)
  done (took 1.806818593 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101426948 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095563051 seconds)
  done (took 1.75427352 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081776417 seconds)
  done (took 1.639333291 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091696483 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101223295 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13241571 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114812095 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141201667 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117952395 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084520198 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089232475 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078760912 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085767754 seconds)
  done (took 2.594081358 seconds)
done (took 21.262797104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079779896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370923971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361047456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091991976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672590646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357742814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989822258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093659476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108674479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070225435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087001458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650768427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979505726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328308321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967269229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330785299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652181164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069847704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069341906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07021112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973176242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068851882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069748435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069506875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649852425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374633823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070892847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330282944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068809977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073891901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359661458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071462911 seconds)
  done (took 16.120037135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071352108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123285824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073541628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086018039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072045493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070766329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072622559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070397098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118808682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070136212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088109854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069079682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073389466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071158582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090623538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069839163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073047467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070652328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070306785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071691547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089612587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070400712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070746653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070610277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07101612 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083392885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07211449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069924863 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070621811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074386405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075216535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072192663 seconds)
  done (took 4.03842788 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1174726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127471705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075332343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108249724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118793103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071590165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148258364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094732767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121922439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070571771 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08783157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069651319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104526433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071782015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091334173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070453847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073083004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070906084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069990187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071157224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089879026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070689177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071167182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070947115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071217395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085597911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071722641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070389997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070748296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074357547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075969144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072058487 seconds)
  done (took 4.303195607 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071790698 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074167543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082165193 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083129107 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069468547 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070684813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072127232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068973508 seconds)
  done (took 2.168312251 seconds)
done (took 28.195599058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079253887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069098779 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072382675 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088061172 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075496499 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080130953 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06604401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07574478 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073410969 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072775709 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074390913 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071083994 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071064575 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066619237 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073301156 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067358325 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082382955 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071553609 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080874407 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081705334 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070428411 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073893886 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076338445 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081158944 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081678094 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081035982 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077034832 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073805051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068907674 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071261838 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07088413 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079244571 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081137801 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081413339 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067873165 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068365727 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072420351 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069680931 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083522317 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077222376 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069975677 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077764492 seconds)
  done (took 4.695240331 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085991807 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089892566 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08273206 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080126042 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090546768 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082910695 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086967301 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079120479 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078294739 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086315327 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074988067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081838086 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079080239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073142943 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07797638 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07519833 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080246605 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074551995 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078205679 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078623165 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087187105 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073451238 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088269912 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080193113 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075447557 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081596729 seconds)
  done (took 3.684663558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074576892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086058901 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093099076 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14427403 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112042056 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081142992 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082328692 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092795316 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097700523 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069401625 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07358136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093169348 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094138453 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075644259 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112621905 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085044694 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085144463 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071725206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075759463 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097970271 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091500358 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087833178 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097710212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088920494 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071448105 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074057458 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077039115 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08914585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074220202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082783921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074031657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075581457 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072538564 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082379665 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074472478 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071079363 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096433711 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082891536 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08259243 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069388834 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078403348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069369411 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093745292 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129061555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067694551 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072896749 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072329809 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079794679 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068316897 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096472448 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080852585 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068190683 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069294756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067835684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067966787 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071056553 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070503373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071007076 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078984539 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075190052 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090378511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073674709 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086119557 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068061755 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078984707 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067857355 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069756991 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067402347 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096828134 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070993738 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112708404 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070492498 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067239277 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079437173 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078793095 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074602225 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068609435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086198361 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080328424 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072862389 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078556618 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073887095 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073130952 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099285031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069500709 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068392922 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06763762 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072158457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074599369 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069475045 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080708047 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068147997 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072159756 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086520215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068783726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069508007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072325886 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071047062 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068372503 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079329762 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072541517 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069957506 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079538971 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069403536 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072113372 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081510832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075368718 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067745164 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070855367 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072014298 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070367885 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069965114 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072111422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070825615 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075519582 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07555925 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07447575 seconds)
  done (took 10.829754234 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165252814 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159282404 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073671149 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149766682 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07750617 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081462843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156424827 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099162716 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070371373 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070833704 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069661758 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110691812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106020241 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116964751 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081382699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070169866 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094254452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115291404 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156596544 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149762018 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092278621 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077428977 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071978276 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070840702 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070760068 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079422685 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085989873 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078191143 seconds)
  done (took 4.420839332 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078955741 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104439074 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073392487 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092489416 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088952847 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069871474 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071705921 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07120765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086135491 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08060083 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071936391 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077505068 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075784281 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075210142 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072237982 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078588311 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079354405 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071449184 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075666628 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078309783 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080957012 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094982638 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075115588 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069808637 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0727015 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069307673 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077468974 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081281626 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069471243 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105272232 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067185071 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074006407 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083437834 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070028737 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06875694 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069718099 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06999921 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070499384 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070675336 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068282425 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06856112 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072970329 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068477437 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077012124 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082906984 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071110885 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071722045 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074670629 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074780997 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06902676 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072849882 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072403894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072312326 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076790199 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073462809 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072069963 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070118565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095754265 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075383921 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068645057 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068767674 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067980487 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071583162 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078983209 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084443423 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072107791 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068206399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069695085 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082160044 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082392774 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068512493 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07394688 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06703101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070976987 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071914989 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071950985 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071645695 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070455965 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071076543 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071131506 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069961421 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069082846 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068478779 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072337184 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067520096 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067975778 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073319703 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071553339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080330571 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069076436 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073160878 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070240674 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06820817 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072167236 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074477112 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07280527 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080058911 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080040739 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069758245 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068102943 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083524485 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072077756 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068592732 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074762685 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07404874 seconds)
  done (took 9.439073783 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092114613 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070105494 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087002042 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09266036 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079059751 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075457836 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080154966 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069334349 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085416316 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07448517 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077247605 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06838483 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08051669 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079163456 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070278077 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080404793 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072850455 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086774064 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083694646 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068151775 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077903383 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081666022 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081806795 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08340011 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083206758 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084273454 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081060761 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078841712 seconds)
  done (took 3.847598971 seconds)
done (took 38.487511556 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.676351359 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.906397692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.647850158 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.876777682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.704819547 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.858831915 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.731031213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.638041862 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.808252662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.689909172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.948129911 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.107476719 seconds)
done (took 64.313790286 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.668974631 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.792679087 seconds)
    (2/2) benchmarking "String"...
    done (took 1.888889059 seconds)
  done (took 5.262205807 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.828375627 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.44140769 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.879938327 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.640998724 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.647509237 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.930460161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.444071131 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.115431673 seconds)
  done (took 29.681467795 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.844338578 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.86772806 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.359270597 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.396591422 seconds)
  done (took 15.098067504 seconds)
done (took 61.217088792 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.680884437 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.668395331 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.658362734 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.640146141 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.73649091 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.65497903 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.767387148 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.660590925 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.641393708 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.653363376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.643381607 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.068592934 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.646695914 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.81390827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.642711335 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.643412406 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.662469672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.137004647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.795231335 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.657347681 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.649646903 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.68944593 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.644896994 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.654534343 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.661570268 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.642117287 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.025890187 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.654751138 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.463521071 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.647884427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.68575447 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.066717801 seconds)
  done (took 199.540531465 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.642775245 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.438311194 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.580860069 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.64779068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.660074572 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.836358485 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.748510088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.021717862 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.645865519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.673366489 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.764587833 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.642554105 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.814018034 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.584715375 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.678217458 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.738043522 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.790102857 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.838296185 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.682504644 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.806913553 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.665124674 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.605813525 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.558992126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.746188957 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.659601001 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.643264885 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.652088045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.669431968 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.827799568 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.730629076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.685414601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.661385559 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847331739 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.513569652 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.656806908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.650835643 seconds)
  done (took 163.591636197 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.835190803 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.644768206 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.644672175 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.644139195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.649741803 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.64473884 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.765781841 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768630476 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.306848634 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.022589115 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.69641579 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.645771201 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.417228332 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.647552301 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710488767 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.656774637 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.645183774 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.660133232 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.672431957 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.648062348 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.644842622 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766271915 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.660659179 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.645275276 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.65382482 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.645192048 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.650663542 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.031411552 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.645360982 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.799140102 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.647606619 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.650565926 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.88650491 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.6460748 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.645402966 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.469622539 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.482461747 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726970718 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.64681481 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.65040048 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.645612082 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.863207622 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.646010707 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.646623972 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.646937945 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.647257294 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760032909 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.648143399 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767246153 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.6496207 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11996926 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.646033827 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.647311466 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.295776495 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.647178616 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.229244406 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.650283915 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.648139876 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.646001565 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.64789284 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.651840223 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.151435998 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.720194432 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.647878322 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.648855184 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.653048403 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.647004128 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.761854582 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.647473705 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.191799187 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.663322043 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.769881157 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768357184 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.649917685 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712908004 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738482226 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.646811675 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.648556859 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.647027523 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.647009161 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.646821383 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.728078236 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.6484561 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.729653882 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.656983636 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.648517605 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.700846867 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.64912549 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.647263104 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.716160257 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.648794099 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481927549 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.649700052 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.648710264 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880665679 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712803274 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.648513894 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.648997595 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.728840514 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771408931 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.36399297 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.65135736 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.046009275 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.724074233 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.650923696 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773586344 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.652919947 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729566154 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.655204477 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.650441815 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.683182404 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.649061302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.661164321 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.648693822 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.022258767 seconds)
  done (took 386.556427392 seconds)
done (took 753.166346896 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.266112984 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.23198121 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330641112 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.253576057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.227276067 seconds)
  done (took 12.896568095 seconds)
done (took 14.4849004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.726738462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.731451591 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.667793056 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.730532349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.665746267 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.729502964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.713908593 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.672117304 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.6984713 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.671765614 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.698299194 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.671966061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.656914771 seconds)
  done (took 23.622836219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.880854377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.880770502 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713759992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.881659498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.688844644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.881109328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800968143 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.798230097 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.787712397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.660205889 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.658168416 seconds)
  done (took 21.22234219 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.881890967 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.88549722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.719988322 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.888560378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691871495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.881818318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.802779641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796153877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.793797326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.659010698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.658230247 seconds)
  done (took 21.249981604 seconds)
done (took 67.683634222 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.653428964 seconds)
  done (took 3.243314547 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.671472185 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.8302591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.654622791 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.653910941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.653708829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.653806902 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.653217441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.65461938 seconds)
  done (took 15.01711622 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.653782164 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.653473501 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.652594798 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.65240438 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.6529626 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.653300566 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.653175451 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.65349258 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.652627028 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.653358756 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.653693376 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.653105718 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.652977666 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.65311047 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.653490798 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.653797371 seconds)
  done (took 28.040990625 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.655895893 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.653673637 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.653707613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.653857171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.653465944 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.654276035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.655760858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.65384891 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.653470704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.653963164 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.654379253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.651336217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.651423775 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.651919695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.651999902 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.652737764 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.653106088 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.653935143 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.656904888 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.652806507 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.652100318 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.653237407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.652031959 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.653069067 seconds)
  done (took 41.276198444 seconds)
done (took 89.167784876 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.368559352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.500101586 seconds)
  done (took 9.458467775 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.657110827 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.653916462 seconds)
  done (took 4.980311831 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.653682738 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.653441709 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.653184558 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.653806604 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.653193207 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.654022501 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.653424524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.653446044 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.653865677 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.653202279 seconds)
  done (took 18.124893674 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.652590599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.653653123 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.653084193 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.652503115 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.653323374 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.652611751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.654231757 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.653024177 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.652795949 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.653509695 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.652544314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.651569376 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.654105932 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.652410558 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.652242512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.652865316 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.65102711 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.652444755 seconds)
  done (took 31.34024662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.650646907 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.650205409 seconds)
  done (took 4.890986515 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.650822934 seconds)
    (2/7) benchmarking "second"...
    done (took 1.651142569 seconds)
    (3/7) benchmarking "month"...
    done (took 1.652121595 seconds)
    (4/7) benchmarking "year"...
    done (took 1.650254267 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.650348698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.650184917 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.650747796 seconds)
  done (took 13.143360781 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.651457506 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.798805389 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.860388423 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.293727356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.651384804 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.654487278 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.544099175 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.652392822 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.653300696 seconds)
  done (took 18.348363303 seconds)
done (took 101.876998862 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.522938719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.650255985 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.922523003 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.713930272 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.714551434 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.981551236 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.664676113 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.932959688 seconds)
done (took 41.690676853 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.674861519 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.395301621 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.441693118 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.687309077 seconds)
  done (took 15.105112469 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.643127817 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.964830205 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.668407011 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.48970404 seconds)
  done (took 21.350693351 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.007077728 seconds)
    (2/2) benchmarking "read"...
    done (took 1.997205384 seconds)
  done (took 5.588427878 seconds)
done (took 50.302034392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.643609389 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.644141568 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.643088334 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.645290903 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.643135523 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.646492989 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.643352484 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.643282531 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.645254768 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.645405828 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.644127058 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.645448656 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.644440626 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.64533882 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.644804488 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.644676779 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.643306844 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.645120712 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.64480042 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.643848103 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.645587705 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.645171946 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.645075036 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.64567566 seconds)
  done (took 41.052393455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.64393821 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.645829857 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.64344908 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.645738569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.644938374 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.644345989 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.644703153 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.644473843 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.643080845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.645492821 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.646103194 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.645387807 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.644169576 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.64379438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.643634927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.645033098 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.644478947 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.645675099 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.642855951 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.643513626 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.643823512 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.643552811 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.643553246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.644636597 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.64429181 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.644632048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.644654146 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.644236918 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.644449352 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.645530834 seconds)
  done (took 50.916672495 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.64405355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.644851714 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.644941744 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.644894594 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.643715371 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.639323942 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.639080465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.640010011 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.638464487 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.638755369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.639247484 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.636102491 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.634895764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.635861174 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.635704688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.635956475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.636246169 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.636115575 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.636143104 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.635041986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.636625157 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.634771302 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.636218349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.634538401 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.634749418 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.634769864 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.635728487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.635977828 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.636247953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.634271655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.634882945 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.63432621 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.635479357 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.635292946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.634925048 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.635472222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.636109585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.635181131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.635360519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.636805098 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.635226829 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.635701908 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.635534094 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.63530472 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.635429316 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.635636289 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.635616338 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.635496945 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.63481089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.635320287 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.635775573 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.635432083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.634280327 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.635978903 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.634869735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.635547389 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.635335568 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.634857647 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.635943191 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.635375348 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.637244196 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.636017712 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.636478438 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.636338706 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.637253925 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.63648599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.636088204 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.637159767 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.636001659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.637202324 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.634818792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.636105986 seconds)
  done (took 119.416293264 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.635644634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.636287261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.637193124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.635220946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.636193552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.635824045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.637061146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.636006893 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.636143216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.63729421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.638292797 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.637403867 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.636262557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.636824247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.63602884 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.636678608 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.637856438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.634837643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.635476737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.635897748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.635753288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.635685913 seconds)
  done (took 37.573942718 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.637247434 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.634755533 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.635416777 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.635587885 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.635727954 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.636233085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.635143588 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.634709878 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.634275542 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.634944397 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.634392469 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.634783425 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.635892563 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.633461436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.634270292 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.633721589 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.63353932 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.634202589 seconds)
  done (took 31.000578048 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.632854315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.631667369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.632412368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.632968337 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.633735872 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.63435288 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.632578128 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.631576291 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.632084393 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.633059206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.631390545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.632435429 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.632518415 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.632777092 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.631943766 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.632949286 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.631203291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.633255135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.631830539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.630104982 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.631484899 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.632365201 seconds)
  done (took 37.483999782 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.633256747 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.630853243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.631903137 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.631270242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.630985696 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.630875258 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.631169416 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.63069915 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.630456135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.630336893 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.629838729 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.630011217 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.631195533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.632572368 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.630252519 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.630656607 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.630189916 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.630809548 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.63082374 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.630844856 seconds)
  done (took 34.187749708 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.630858911 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.630061415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.631008236 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.631191765 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.631832299 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.631654037 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.633790698 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.630886702 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.629833071 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.631857447 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.631639837 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.631444289 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.631218994 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.631057842 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.631637533 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.631901683 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.633483122 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.629422009 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.630445513 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.63010036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.631229753 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.630724529 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.630996126 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.630553358 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.631232241 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.63219717 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.632235257 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.632087936 seconds)
  done (took 47.24580788 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.633265574 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.631496859 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.632068346 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.632048408 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.631340266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.630345898 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.629661027 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.630152331 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.62884463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.62952104 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.629719437 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.629952229 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.630860526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.629378981 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.630648892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.630141359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.629939068 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.630907589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.632273441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.630351786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.629510728 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.629620484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.630072059 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.629669872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.630683572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.629394729 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.630205997 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.630149698 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.629891239 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.629369064 seconds)
  done (took 50.481456746 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.650104842 seconds)
    (2/2) benchmarking "in"...
    done (took 1.650486073 seconds)
  done (took 4.868854104 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.628122374 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.630369459 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.631013654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.629863225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.630667684 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.63028422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.630267821 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.630652976 seconds)
  done (took 14.608388379 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.635605065 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.633709247 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.632313523 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.632992999 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.63330455 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.633816033 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.640449988 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.634906473 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.636292938 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.634639911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.640773625 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.639902128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.637650036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.63453006 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.634612238 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.635854046 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.633747044 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.634970436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.63574968 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.633496263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.634947671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.636945026 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.636557057 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.633996498 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.636978976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.643869626 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.638711017 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.634387766 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.636266684 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.638293264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.63627147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.63291421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.634537402 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.634440172 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.634269778 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.634172966 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.644691521 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.635438594 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.639676246 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.634270465 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.63358311 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.633891533 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.638346415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.635895947 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.636085109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.634743942 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.633877289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.632479731 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.634085413 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.637776162 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.640173566 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.634515959 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.633792542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.639745359 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.636504622 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.643721671 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.633725266 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.636746258 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.641834524 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.64255051 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.644705792 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.641118376 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.635648565 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.633476954 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.641895869 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.654566693 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.640826137 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.634839123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.632852784 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.633632489 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.640210119 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.645958328 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.642223162 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.635371651 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.633090566 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.632382039 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.63548983 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.633570215 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.640765193 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.639693025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.634318043 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.634028793 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.642736447 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.653471933 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.634044168 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.635266536 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.634604513 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.635133629 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.63518745 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.644801205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.635033622 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.63453768 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.635100607 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.635391325 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.636787644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.635490036 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.63409471 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.636347878 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.633924228 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.633369444 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.63366945 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.636411959 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.641852733 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.635445722 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.633976768 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.639752643 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.634125464 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.634283516 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.640424232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.634594753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.635038018 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.634501205 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.639226142 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.633811476 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.636367414 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.640235888 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.635601336 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.636266683 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.633447275 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.634181051 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.642936571 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.655256687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.634748895 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.633253391 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.638494947 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.643181081 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.634854425 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.63743171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.634604472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.633306418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.633226382 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.635424265 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.633441767 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.635517152 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.634365176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.635596371 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.633434847 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.633976014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.635251742 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.63698837 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.637959823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.636962805 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.637177791 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.637976368 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.634431993 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.638027422 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.643112389 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.636092016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.637285558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.636156281 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.63468387 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.634046158 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.638323789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.635687492 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.635993099 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.634317783 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.635758738 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.634483837 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.633810943 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.6372079 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.634901991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.636047657 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.639756293 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.63562115 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.64009394 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.636851003 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.634641526 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.635635235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.634514155 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.635909389 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.635550478 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.635932571 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.639061954 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.640794753 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.635971545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.636845009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.639404867 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.638389543 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.637064192 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.635875407 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.6406997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.643833563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.636216594 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.643826977 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.636607755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.636529691 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.636051112 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.638145464 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.637394949 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.638256422 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.639628677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.642649506 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.647056313 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.64478945 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.637076967 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.640128053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.638157545 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.639584333 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.641746849 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.637723051 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.637654823 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.636737966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.638026337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.63751442 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.640116715 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.638130985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.638189762 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.636766009 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.637518904 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.638115948 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.637386217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.640336308 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.639365184 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.639709067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.638640808 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.63744901 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.638886126 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.638697843 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.637089975 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.638153432 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.638743128 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.638874539 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.644704091 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.638103104 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.639379451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.639476075 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.640432326 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.63771435 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.637933115 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.640542389 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.640383274 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.645076425 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.640603307 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.640274752 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.645860685 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.639796339 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.638470373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.640886158 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.639409296 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.639439259 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.641746522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.644657766 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.639283885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.63980372 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.639950791 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.640552081 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.638264881 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.645466415 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.638752807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.640625893 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.640156974 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.640541005 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.638820704 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.642249948 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.641982088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.640957843 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.644261321 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.639053047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.640451347 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.641432675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.640118303 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.639207659 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.641348312 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.642297926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.646623347 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.645196029 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.641911608 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.644370225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.64272744 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.643570807 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.642641723 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.64005101 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.641247983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.652081534 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.648923038 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.648672149 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.643973597 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.640937819 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.646952571 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.641145885 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.644934962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.640857382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.641871486 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.641949964 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.642111681 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.640971401 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.643282401 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.644164267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.644605188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.641556733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.642314493 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.641483942 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.640547932 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.642253752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.642590672 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.640787968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.641330778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.640868129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.643940648 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.645190303 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.641394003 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.64258029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.648408707 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.644247548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.643515205 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.643610156 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.642175291 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.642298174 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.643158318 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.641888344 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.645485569 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.648848593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.645219951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.650054698 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.643087686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.650838862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.642411979 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.64592771 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.648693441 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.641743867 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.64232148 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.643191752 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.643424385 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.651490661 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.6431834 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.643969127 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.646405045 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.643178671 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.643259318 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.643160643 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.642411317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.642299518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.643943373 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.651314444 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.645189318 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.648204991 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.6468274 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.643911339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.642401282 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.643777032 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.64488404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.650379533 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.643916255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.644747391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.644431486 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.643852851 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.643459795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.645184635 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.642758631 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.642897042 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.643708323 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.651941433 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.647086702 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.64937083 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.645029554 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.65373011 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.646408115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.653409613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.646363361 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.646525173 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.644391588 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.642473065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.645838258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.644123186 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.645666519 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.643331817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.646695326 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.647440225 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.645811568 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.647787406 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.646161844 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.644109652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.647493097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.653556542 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.663431402 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.646899955 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.647646143 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.64439287 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.646292211 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.648267065 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.644154051 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.645003385 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.647065416 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.654183959 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.651283732 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.646629505 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.643755034 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.647789043 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.644918131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.645396002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.646259001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.645969315 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.645464042 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.647933365 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.645946416 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.649206791 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.646672616 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.648455796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.648952249 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.648998398 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.655192593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.646026965 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.647914018 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.646347522 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.647132678 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.648260891 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.648103702 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.646655568 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.649733291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.646171363 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.648266187 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.652190909 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.651093305 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.650609415 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.648335376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.646666654 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.64683633 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.647035077 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.64629717 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.646944783 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.647930467 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.648312464 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.647924435 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.647810128 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.64681393 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.646209536 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.650661425 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.646150681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.64922161 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.652756571 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.648392743 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.646601133 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.647092746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.646581672 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.64722506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.649130985 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.655117194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.651808393 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.656379445 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.655176346 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.650128277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.649456206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.651094697 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.654581062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.648181191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.650035492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.648002046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.650587499 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.65015583 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.652087946 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.648378608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.656795747 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.650304605 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.649839667 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.656590153 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.651199964 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.648764766 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.651890787 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.652994169 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.648943986 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.648812592 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.648714924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.649625927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.657317585 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.652567707 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.649058345 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.652122275 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.649553394 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.650837177 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.653033235 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.648773505 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.651494658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.648344431 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.650768454 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.649246624 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.648730705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.648816685 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.650153074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.649233813 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.653314371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.655461944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.650393113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.652636927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.651583833 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.650951985 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.65095526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.649643119 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.64904636 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.649752408 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.650340268 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.648099943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.65186211 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.653385849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.65223666 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.651766714 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.652737667 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.65010883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.653219252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.658226944 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.656592257 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.649704424 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.650288268 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.650714271 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.653974221 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.650769336 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.652791142 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.652187266 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.652847929 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.650064331 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.65073866 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.651281919 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.655952718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.66614471 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.650788899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.652011121 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.653828266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.656025436 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.652232087 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.65098014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.651942878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.652879376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.65383614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.657562847 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.651322216 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.658399942 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.653358007 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.652478267 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.654046319 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.653858877 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.659373639 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.655064976 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.651438 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.652051843 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.656402008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.666629295 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.652072795 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.661149693 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.67742539 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.654660378 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.654205853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.651559474 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.653817796 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.652713615 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.654623432 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.652897226 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.652920977 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.652543785 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.652258641 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.653708787 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.658723277 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.654864796 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.653276338 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.652425498 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.654694249 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.655283415 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.6521956 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.652102833 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.652844114 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.651942328 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.654163314 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.653930101 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.653726032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.665210764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.661618206 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.654404749 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.654286306 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.653037381 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.656245206 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.656394166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.662141443 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.659156543 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.653840442 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.653493354 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.65474812 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.654558622 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.654313886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.655449529 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.655540741 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.655241881 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.654018361 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.664880231 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.660734421 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.658423245 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.656478695 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.6565212 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.654239641 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.657524385 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.655633153 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.655279447 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.656452506 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.65734725 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.657785311 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.653913087 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.654465363 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.656968844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.659941867 seconds)
  done (took 981.625803041 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.655706892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.653916741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.654156869 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.655450963 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.653571304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.655140873 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.655332136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.654506222 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.654154154 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.655206866 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.655403433 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.655062016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.655302085 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.655176906 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.65428131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.656067086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.654335762 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.657130652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.656790316 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.655492718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.65665516 seconds)
  done (took 36.351369605 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.655314817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.656906325 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.655893069 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.655055924 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.654362758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.655918172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.654515349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.655636418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.654736732 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.655354028 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.655542525 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65601123 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.656162753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.65742705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655875688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.656578611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.656219618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.656817227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.656738669 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.660194875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.655599758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.656674488 seconds)
  done (took 38.027114528 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.656993653 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.656793941 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.658639461 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.656604607 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.656183096 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.658485266 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.657251564 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.657946717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.65844551 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.657928099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.657469061 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.657555535 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.662481647 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.662572193 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.660728813 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.655610689 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.803560735 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.657192576 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.65693196 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.657575759 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.658737248 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.664012983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.657342511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.657639494 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.657866157 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.65793008 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.656941742 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.65810363 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.658432924 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.659355172 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.659940088 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.658378185 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.658167618 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.660861799 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.658051204 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.659676554 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.660614108 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.658496539 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.658430606 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.658297441 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.66674224 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.675353629 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.65866351 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.664330118 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.658999876 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.658686687 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.661073958 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.663282644 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.658960033 seconds)
  done (took 83.045252838 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.659214481 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.659050223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.658664602 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.658278491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.65941301 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.658669204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.66050826 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.659093425 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.659862044 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.65915334 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.659334225 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.661447373 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.660748946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.659334947 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.659613004 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.660108836 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.658496264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.659663388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.660414873 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.660456796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.65962523 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.658716998 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.659550911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.659505931 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.660352538 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.659036258 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.658784121 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.659355541 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.660504741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.659957395 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.660065926 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.659147032 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.659826174 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.660353166 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.660658076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.659878245 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.660842027 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.659399434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.659986165 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.659669463 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.660308756 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.659899975 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.661578231 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.660690935 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.659506268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.66064409 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.660947058 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.660952287 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.660908224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.660969624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.66021204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.661099714 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.661218549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.660828653 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.661618805 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.661615884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.661157722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.661930531 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.661651186 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.660976863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.663177677 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.66169039 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.662571978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.662163994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.661435113 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.662582056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.662349623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.660930563 seconds)
  done (took 114.500533143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.663409496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.662633508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.662399629 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662747245 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.663373379 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.662123237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.662407671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.661944744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.66165158 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.661987767 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663468484 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.661414016 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.662280239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.661679805 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.661430072 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.661346953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.662317822 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.662561538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.662711561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662865049 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.66241781 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.661475509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.663353394 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.662579474 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.66304677 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.662339715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.663029142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.662309775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.663852962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.663242888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.662241924 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.66252372 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.662705135 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.6640571 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.666452709 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.662771102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.663002661 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.663103512 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.663076244 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.662484265 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.66565638 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.663180576 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.663486097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.66342139 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.662278938 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.663283617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.664091716 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.664057948 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.663342278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.662994963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.664056199 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664120307 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.664117946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.664731263 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.663354571 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.663940709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.664701742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663215748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.66582287 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.664529664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664743979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.664100286 seconds)
  done (took 104.715400983 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.662818905 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.663186782 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.664164314 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.663930508 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.664311016 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.663724587 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.663492438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.665343843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.663747762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.66293092 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663981906 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663961859 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665405231 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664048725 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.66442845 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664417657 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.665016873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.664454695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.663691127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.664847425 seconds)
  done (took 34.88282849 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.664062214 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.662527421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.66505032 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.663861867 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.664660093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.664805284 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.663876424 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664397656 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665580928 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664048568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.665718025 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.663939285 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664992093 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.664458178 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.665976253 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.66499678 seconds)
  done (took 28.234549892 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.665063187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.664915894 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.666507904 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.666723782 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.665587487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.667366522 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.665879829 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.665920049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.66523889 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.667359589 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.665745845 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.667202871 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.666048464 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.665788662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.665878499 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.666411978 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.665484952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.667815411 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.667291858 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.666995126 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.667010566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.66666692 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.666391511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.666914652 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.667138796 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.666949207 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.666912018 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.667500456 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.666051606 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.667480077 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.668446902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.667354461 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.667428187 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.66713757 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.668011662 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.666605872 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.666980359 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.666352455 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.666235243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.667538462 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.666683947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.66785463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.666802289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.667538486 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.667214807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.667882021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.666075947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.667858435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.668000057 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.667262744 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.667386404 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.667744811 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.667694286 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.667964562 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.667262572 seconds)
  done (took 93.281985273 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.667940369 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.668067156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.667481996 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.668181479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.668143958 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.66835214 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.668548415 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.667653204 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.667672411 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.66894489 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.668302479 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.667595593 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.667864187 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.66935563 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.668294397 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668661247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.668784526 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.669228726 seconds)
  done (took 31.63325315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.66921643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.66866606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.669402428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.669858255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.670153908 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.669734688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.670238385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.674538309 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.671360824 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.671129066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669411117 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.670241865 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667796975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.668554597 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.668445744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.669049539 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.668427232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.668746389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.668483191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669501832 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.668089227 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.668818997 seconds)
  done (took 38.33452038 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.670174995 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.670611853 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.681680763 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.686229191 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.688670064 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.696702431 seconds)
  done (took 11.700879607 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.668933908 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.67010128 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.671175015 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.670863381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.670117797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.670304315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67032251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.669157264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.670296131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.670695346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.670381309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.66958024 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671498172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.670844979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.669736391 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.671457139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.670984052 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.670058552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.669886918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.669134512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.67052246 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.670571625 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.67008801 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67103368 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.671382679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.671018297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671700463 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672194502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67061563 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673100912 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672022122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.671247251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672421574 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.671668963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672489699 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.671059431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67190449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671817256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.671350018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.670902324 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.670614896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.67210733 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672450186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672177666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.672728047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.672505998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.671238007 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.670966753 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672055702 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672094249 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.67217084 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672842064 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672207119 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672087289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672556445 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672585461 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672939618 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672054542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672526964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.672723377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672398378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672908021 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.672356083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.672985313 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672731898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67341505 seconds)
  done (took 111.922625696 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673433605 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.672265405 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672636514 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672040242 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.672351557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672751022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672878332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.673556169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672844987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672965281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.672993924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672564554 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.673509086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.674199817 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674376306 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674220082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.673808663 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.674773246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.674195179 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6742879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.67426201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.675111945 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.673762761 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.673919637 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.674779615 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674408122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.676197376 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.674038577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673877406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674149227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674245133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674795223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.674672833 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.67487878 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.674645629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674174931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.67561021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.676246739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.676393112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.675819245 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675800235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674739054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.675418868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.676020164 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.675383209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.674581653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.674136237 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674432612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674636546 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.674828562 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675287935 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674859086 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.675378558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.674807483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675034978 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675473293 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67590094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67583997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675126902 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675555391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.674985773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.674865054 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675664272 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675721055 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.676159865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.675546008 seconds)
  done (took 112.13049391 seconds)
done (took 2290.808371234 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.681459812 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.692466426 seconds)
  done (took 14.985846032 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.839531984 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.79442258 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.676475196 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.7237804 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.678417158 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.706513191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.700563885 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.678750639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.679588054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.67945423 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.678819164 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.863033984 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.686627728 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.67836244 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.677430456 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.769127452 seconds)
  done (took 49.127596419 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.681037391 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.681984421 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.691275364 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.684070522 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.681485855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.693758615 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.711945623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.685728476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.716597246 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.693374089 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.749534405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.689553223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.680557632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.728118981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.691076874 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.695122773 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.770935685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.752204845 seconds)
  done (took 32.291462802 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753967878 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.69197733 seconds)
  done (took 10.064491897 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.698773111 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.717307211 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.734457344 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.698816761 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.687511221 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.691376457 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.680595108 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.683099184 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.704438434 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.698948996 seconds)
  done (took 68.611854062 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.684373468 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.683144171 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.680897092 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.679010767 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.678100713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.681714818 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.678839787 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.683485562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.32778507 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.712046209 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.686663212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.686171379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.678939848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.680868673 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.677890279 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.700454636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.792344284 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.677414411 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.678092695 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.68523032 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.6825004 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.731142472 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.693639938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.682354384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.709766592 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.324872833 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.690912493 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.68619528 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.787286895 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.679126299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.680829601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.867549287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.684071334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.13858665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.944328084 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.685872615 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.694507003 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.689331078 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.679010556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.798180294 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.682217146 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.687905121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.611072346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.927167003 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.785000189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.725232726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.975957989 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.697405065 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.683133725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.709605364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.682873171 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.682923403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.694429563 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.193431053 seconds)
  done (took 122.317158454 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.679193678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.026659595 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.845963301 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.680479738 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960855802 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884081908 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.679664266 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724462744 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.68160588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906878396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.930650522 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782279665 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.680537597 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.681216699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.683756822 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.678781321 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.833406341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.749488015 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.683939227 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.681693487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706387219 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.918840278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.801055611 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.682433742 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.70614619 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888227807 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.800376497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.780041677 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.468215815 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.679639156 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.74252246 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.682390127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.684046438 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.680620807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.834545712 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.772638143 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.761453607 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.682846521 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.681921619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.679092256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.426217385 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87906021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.773689833 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.808215872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.929915032 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.882529576 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458047015 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.679016755 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.41269333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.842678162 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.907239442 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.906630743 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.802443929 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.683128968 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.205561136 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.681694772 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.680398866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930108728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901649235 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.775104555 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684452834 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.682165964 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.682259134 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.969597371 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.685479918 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775712424 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684187415 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.683103611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.777010767 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776286472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.910041568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892708957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.710535011 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.036702777 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.195007704 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926631092 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.746344384 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929408153 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.685044428 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.682907759 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758072699 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.517067819 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.934258699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961714024 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923756574 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714706022 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.399306101 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.683257016 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.905448676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.901866804 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.939982868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.925879224 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.91880759 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.010238924 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.682546647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.684528657 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.928602372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.805651678 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.684962249 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.023188142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910046069 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.213697975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.708179573 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.981643688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.813264314 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.68631019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.322339549 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.685748422 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.908199272 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.721261418 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.683827127 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.682921782 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.900512873 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.667016954 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684405981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.321947596 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.744477008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.685646817 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915038429 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.687479013 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949376123 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.687000227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917625246 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.14680969 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.713641965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.909164642 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.928980705 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.687142591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.921526837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.923810333 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.798164406 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.901894517 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.312927737 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.686314966 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966654936 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.686845907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.684711392 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.852651304 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.685312511 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.825959108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.687029879 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974088755 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706721632 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.916183251 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.689240729 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.937026418 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.71642897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.733679437 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.687159839 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.815022504 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.686851692 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.559983915 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.842355637 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686568883 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.684956825 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.909568565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.68691485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.834167098 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.910496054 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705104802 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754825251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344880307 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.686236597 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762679068 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.707786733 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.075670798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.687762138 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.93524729 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.688668858 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.686585849 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.686105721 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.970624023 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.867151961 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.687345427 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.685901572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.587691828 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.68695568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.686363684 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.867372408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.053437875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.685526454 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886831453 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.687697902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.812360192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.690465452 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.754953083 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.024270108 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.68524351 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.688540372 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.687295403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.688241078 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.689461041 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94722708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.712046207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.191302042 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.82468629 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956925767 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.995429104 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.924978896 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.728591906 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.690172366 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.937784101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.690722055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.750191226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.691246603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.706973128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911820052 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.690839935 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895381401 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.953437556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.533131438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.73433108 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.690378039 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.688572571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.687949156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.831424137 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.769721143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.692429937 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.688950821 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.801552945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.810033691 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893986665 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.691510522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.719222988 seconds)
  done (took 861.704324238 seconds)
done (took 1160.715431486 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.690373194 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.690439208 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.692713275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.691692544 seconds)
  done (took 28.390410963 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.690538933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.690040386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.689223976 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.689244519 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.690821001 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.689786847 seconds)
  done (took 11.76447167 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.754182414 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.690028422 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.692747922 seconds)
  done (took 20.762059651 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.760722776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.070094672 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.821013937 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.098103431 seconds)
  done (took 9.375876047 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.690760516 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.690111171 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.690998381 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.690552149 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.691363478 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.692063526 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.691674479 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.690446595 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.69149223 seconds)
  done (took 16.847194808 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.80997727 seconds)
done (took 92.575257836 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.781525904 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.004922021 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.697639259 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840046307 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.759070606 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.701393858 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.825827991 seconds)
    (8/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.691604294 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.716745169 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.717249527 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.693855844 seconds)
    (12/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.120717824 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.974794652 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.906803392 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.710136363 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.873824939 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.695150902 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.468485608 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.014374597 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.859554839 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.695695104 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.805132058 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.718745597 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.692418267 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.013868912 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.153015527 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.698242151 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.034596007 seconds)
    (29/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.826310064 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.95858787 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.783014487 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.698153447 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.951407916 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.697091738 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.120074633 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.827887601 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.771127358 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.362271209 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.715061224 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.863178363 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.693690156 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.697138771 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.106498957 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.801378407 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.694019153 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.53882438 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.710104187 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.995830121 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.808622038 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.576800365 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.821015448 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.692309624 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.9116093 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.923533186 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.475203037 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.698453483 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.472990582 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.930227039 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.55430204 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.855962001 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.311777713 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.77607214 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.710928569 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.059661478 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.785861725 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.696123768 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.876009561 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.995911388 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.70949116 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.692861066 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 6.099368612 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.696101638 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.057836955 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.713317659 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.932645174 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.639125611 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.995711309 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.777896232 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.517160632 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.994934376 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.695678787 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.126116036 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.813017477 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155823531 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.035419355 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.698023229 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.796018633 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.81046565 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.079022706 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.697516024 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.580031571 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.695927672 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.041105299 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.026826147 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.698653558 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.005492413 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.913262078 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.784218958 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.36016432 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.703651212 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.489948256 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.48694202 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.793596798 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.052987889 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.713557706 seconds)
    (106/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.695205893 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.127923552 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.728832847 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.578465932 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.521128847 seconds)
    (111/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.77746502 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.945097567 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.345006793 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.831340716 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.006226199 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.778991179 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.717055211 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.826479831 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.694855658 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.597877924 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.89569373 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.695455338 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.403839306 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 6.695114466 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.700167424 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.990882981 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.698552392 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.95145355 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.755231756 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.70805207 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.021558168 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.728350452 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.694359422 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.949168657 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.773379426 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.796496834 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.088496364 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.142893144 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.69909721 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.801385632 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.572544283 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.087159149 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.948893145 seconds)
    (144/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.718352814 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.825767457 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.696759472 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.816112443 seconds)
    (148/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.068986102 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.434896829 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.720351131 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.359407898 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.839606374 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.062835911 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.717621986 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.793698999 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.726988856 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.83196618 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.902878097 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.598149475 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.845570289 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.944230517 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.854326751 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.719859387 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.758789336 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.773673933 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.214705948 seconds)
    (167/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.18517394 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.041591752 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.701140574 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.700346481 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.247899034 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.988080534 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.959272562 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.912416342 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.904820765 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.700882706 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.431127556 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.701904339 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.411840455 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.083704381 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.942792109 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.894369615 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.70061201 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.699245962 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.455968085 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.827900374 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.701162214 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.90452585 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.432000697 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.151557122 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.488455242 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.79362173 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.791165073 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.779271647 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.914675962 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.891695613 seconds)
    (197/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.86711184 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.70617588 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.816865273 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.714071617 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.702286821 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.892150512 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.700793664 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.552450195 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.024505911 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.814132607 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.706995589 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.788262723 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.935390162 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.829807606 seconds)
    (211/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.804421991 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.834492749 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.021718542 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.705961796 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.843219251 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.998069418 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.770547411 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.581904448 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.708593035 seconds)
    (220/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.007563988 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.788701604 seconds)
    (222/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.769371818 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.703259906 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.843439807 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.870926988 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.896066187 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.932804077 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.837412684 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.726976748 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.703030443 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.10074897 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218166732 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.840216878 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.966507458 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.705616326 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.482277529 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.00730818 seconds)
    (238/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.908249006 seconds)
    (239/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.345712066 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.000171031 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.706442555 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.891206982 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.814302012 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.706931471 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.215520791 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.732595807 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.727064857 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.706013917 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.507027666 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.731162006 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.738680031 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.704547199 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.856199661 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.437743317 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.82224938 seconds)
    (256/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.747532134 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.767446069 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.068867194 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.696913561 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.758619316 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.847658321 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.840928257 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.930202415 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.822184703 seconds)
    (265/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.794080024 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.716920576 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.299879549 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.029017926 seconds)
    (269/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.821410877 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.332486934 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.842895496 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.05827618 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.517343546 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.043762342 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.649227139 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.915704604 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.740056597 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.715295993 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.720427412 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.722578533 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.966920619 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.616395182 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.037076304 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.756828099 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.882474411 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.726658369 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.058738147 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.72315242 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.255506968 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.523882043 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.061803456 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.07399801 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.834634222 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 5.459332957 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.855405096 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.747164259 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.849627036 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.854788471 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.729409631 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.977193225 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.198586382 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.71854832 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.804716806 seconds)
    (304/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.056151476 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.642389263 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.695958064 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.94386953 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.720386319 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.299443423 seconds)
  done (took 955.625728497 seconds)
done (took 957.321710269 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.769701662 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.738380153 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.721264783 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.743417815 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.837066659 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.769293901 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.734922882 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.724808819 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.770917403 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.771659186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.721344091 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.766549998 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.723790942 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.722283852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.722013568 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.737398688 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.036840961 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.759804723 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.740984747 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.734364878 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.741753054 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.72123374 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.772130112 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.768380241 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.727832893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.726960947 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.728424657 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.743694245 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.837747565 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.726768309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.727358523 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.737904242 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.038012693 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.753084067 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.722110509 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.744063006 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.734680507 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.735134682 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.728067369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.756024269 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.125476468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.76364839 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.726312939 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.725034374 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.725374212 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.729434083 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.72624657 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.731551849 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.738768862 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.738818924 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.119589185 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.784298809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.728028684 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.723692172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.739041677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.726231731 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.728312755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740775681 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.745432557 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.739712006 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.022262118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.765735721 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.727817033 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.743564409 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.735630737 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.154778047 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.766058223 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.732128131 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.124936815 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.772841976 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.157826522 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.779322068 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.727313299 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.742204187 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.758873369 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.040381604 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.756010799 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.725817048 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.736276737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.725458163 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.738019699 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740671103 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.732326811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.727725376 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.742857422 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.772889884 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.739233946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.729049843 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.737062738 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.748515384 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.736952769 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.73934163 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.729907814 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.724801337 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.737379511 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.732075799 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.731442828 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.730821862 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.729871378 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.741001273 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.126757556 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787125927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.724115704 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.724333388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.727356175 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.742847429 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.125820997 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.771245985 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.750586019 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.77583265 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.728198355 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.023835348 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.765518789 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.744356533 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.73893096 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.730891172 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.725358953 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.025449418 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.154841624 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.788549374 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.728706966 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.726773322 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.744167834 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.730666293 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.726767476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.042238343 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.763427312 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.743578185 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.852429627 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.741852982 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.760988114 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.728443144 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.732422418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.777914996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.745299238 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.762247371 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.730539769 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.745097572 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.746355769 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.726237436 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.743422004 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.74214091 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.728712569 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.736749602 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.727605818 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.778580525 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.74312298 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.74302147 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.751037369 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.853149738 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.725830013 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.025720921 seconds)
done (took 272.257389283 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.802584808 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.725755388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.8187304 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.726360709 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.820657598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.802332841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.725873226 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.72568144 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.726495259 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223114761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.726356639 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.732487235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.726678614 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.727673493 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.801681374 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.727385905 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.72658175 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.170144249 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.727395954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.807865753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.724919286 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.726698951 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.728059255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.247105817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.726619959 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.72795599 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.807423726 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.729534097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.170499929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.726128091 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.726693761 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.170349414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.80756864 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.755197249 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.735885561 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.732918183 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.818199645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.737430439 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.797268425 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.7988269 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.820525529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.760450085 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.72707647 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.727487283 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.732052755 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.729464128 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.728512985 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.760217713 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.729040522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.732778331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.171250819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.734284996 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.737305375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.729312243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.727967989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.756558249 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.728627363 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.728856341 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.810610022 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.730457831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.79955336 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.249402108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.224958176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.72957146 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.729173856 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.729404718 seconds)
  done (took 175.793617488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.795223813 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.807135837 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.795604242 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.733813799 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.779102223 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.798066622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.736114057 seconds)
  done (took 14.108381785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.736155742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.729687967 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.778345249 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.7795351 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.728433686 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.88457976 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.730203684 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.742235407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.735778179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.75580003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.72962098 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.730619915 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.737508957 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.729199068 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.778942392 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.742053504 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.845751997 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.733804903 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.730489426 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87750064 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.735579609 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.736955468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.756445547 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.742606206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.731127355 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.737602532 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.297846295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.731004504 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.731292918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.730661105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.730983733 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.771653828 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.732552234 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.732167479 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.73090784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846294827 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.731564317 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.732142034 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.731502881 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.731489698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.732435149 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.731234632 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.731540769 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.730890552 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.731212884 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.754380865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.731248342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.731968089 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.731204635 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.732188865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.758027278 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.733679572 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.731403358 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.736074502 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.775037325 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.738932344 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.734194728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.731997657 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.732021957 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.731501904 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880160349 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.782360123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.733227674 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.781170525 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732141312 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.732615317 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.732811764 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.732349992 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821040475 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.732577861 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.78165055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.732556897 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.890577596 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.75664937 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.733750846 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.735800067 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.737054683 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.733060321 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.734102668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.740975699 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.732946265 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.734848144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.740881156 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.737628801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.734358174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847218754 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874055969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.733748417 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.735276681 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.741989107 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.733615075 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.776079905 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.734911808 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.733610548 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.790662288 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.850522494 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.761633059 seconds)
  done (took 192.275429334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.741887417 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.742250979 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.737158851 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.75009886 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.736263343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.735919071 seconds)
  done (took 12.110859877 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.739077378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.737786948 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.733313906 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.734445848 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.735477053 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.734704271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.735913235 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736299603 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.738548529 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.734967773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.735667686 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.734870265 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.734908467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.735856837 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.734135636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.735327006 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.734456443 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.736410845 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.735099212 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734501458 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.984033493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.734964142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736802196 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.738887982 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.739557788 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.735435091 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.749538209 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.734431469 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.735641189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.743514148 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.739526993 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.735477925 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.738794779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.742036945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.741460186 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.73953316 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.739414909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.736203927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.735719766 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.736658247 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.738015417 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736634648 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.735968433 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.736299338 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.7384335 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.745551975 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.741722455 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.75048811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.737054793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.737925771 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.73754031 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.737168359 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.736772125 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.737194718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.7424232 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.744288159 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.741469397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.737674582 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.737154058 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.741688631 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.742886407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.738422697 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.740156025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.741759228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.745174414 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.738069573 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.739968012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.741724775 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.738336034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.737356422 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.737911581 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.737699295 seconds)
  done (took 128.070140788 seconds)
done (took 524.04087485 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.962632827 seconds)
  done (took 8.632536594 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.920920445 seconds)
  done (took 8.647596629 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.344774411 seconds)
  done (took 10.015722616 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.755743881 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.762306138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.752628565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.744312941 seconds)
  done (took 28.711596575 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.921164978 seconds)
  done (took 8.592406276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.760313437 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.734817984 seconds)
  done (took 15.234790856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.838491538 seconds)
  done (took 8.509237033 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.040110305 seconds)
  done (took 8.722491428 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.761618115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.762803737 seconds)
  done (took 15.217184004 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.740669369 seconds)
  done (took 8.412532399 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.911823069 seconds)
  done (took 9.684949078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.767647318 seconds)
  done (took 8.508058054 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.804912974 seconds)
  done (took 8.477293013 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.837699509 seconds)
  done (took 8.509520805 seconds)
done (took 157.546028909 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.741583679 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.736353732 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.741194206 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.73626873 seconds)
  done (took 28.627056089 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.771908687 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.771289531 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.774105727 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.78214216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.774176901 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.79133152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.764737996 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.764310211 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.783021068 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.774586569 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.774381108 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.773697665 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.773896513 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.764565894 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.774522949 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.790815629 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.783832768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.773271313 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.764069068 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.775384913 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.740593901 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.784380944 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.774845621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.739576117 seconds)
  done (took 44.212450156 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.93259094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.811103731 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.894727402 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.792591538 seconds)
  done (took 9.104259559 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.793426432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.794991643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.806477869 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.845319008 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.868085885 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.80410197 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.764887671 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.762152085 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.746791389 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.793151275 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.868817031 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.786993888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.882229791 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.740878887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.922142215 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.741208796 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.740957222 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.794142815 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.842698882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.856554795 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.741717775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.793051935 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.795128696 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.789469913 seconds)
  done (took 44.949991028 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.742069477 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.749667162 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.748177014 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.742016024 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.742824633 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.742808138 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.748365066 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.744131208 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.764602547 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.744408767 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.741484768 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.742309283 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.749792394 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.742640128 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.742616285 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.756830595 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.758257807 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.743783111 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.746427465 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.749444655 seconds)
  done (took 36.617598244 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.740833751 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.587791924 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.086854647 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.992800598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.742978256 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.743185752 seconds)
  done (took 30.569466722 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.75521889 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.749703328 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.742625824 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.801269088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.885774197 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.749902442 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.74285548 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.753752382 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.790893653 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.81096771 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.765961047 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.772983523 seconds)
  done (took 22.997086476 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.743512616 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.743844976 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.742484048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.752533376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.75319597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.750571789 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.749378646 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.741676599 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.755674864 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.761795857 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.750585567 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.754824118 seconds)
  done (took 42.679254894 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820615179 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61742634 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182653913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203671947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266759511 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947152872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.741503255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827250549 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.743275881 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014992084 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.077229371 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941480831 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.985051918 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.597802756 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.745945085 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237349182 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027617012 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954405842 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768935156 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344553932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846210213 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311245852 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.402860878 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.849024353 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946345165 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.86384303 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.000000603 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.693517527 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79083752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745328766 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747202355 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.743331129 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013982881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862705657 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810974211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747323419 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156900269 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.448230082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.752302864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.409976871 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.267209929 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860900655 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745878006 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.742569945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.669775271 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308618794 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831828583 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.745856971 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.443751627 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.743146146 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747617967 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818348841 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.745000396 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.551191724 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42804946 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012434466 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.744018331 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744949823 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303114021 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723899645 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405704071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.67875965 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.836578035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400622671 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196695343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.893940752 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.74524832 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745802555 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672353823 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.39836208 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855355662 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880126004 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.76047841 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384349228 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021538351 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.144480269 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795162996 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021811408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.577081987 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.677653265 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961409657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689792356 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671327714 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.573810737 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.670962613 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954230606 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777932798 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.346785281 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781702303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825400691 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.749925615 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761830857 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747535743 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958708496 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.638392481 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745107973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.016321146 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995946468 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763706106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.831277542 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.674017826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.746890546 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990579624 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.950855957 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.05903711 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.22292283 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831001798 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.719544149 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.762368407 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.726284566 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756725079 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.010508785 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802642562 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727586142 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860708961 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.693631989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990598308 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771836902 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.847520084 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.088046014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980519622 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.084376268 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.993176314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809672814 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.750477733 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.748820729 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.420080661 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354753499 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965221984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.761331547 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286057117 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757281233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.748830047 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680836086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.40296835 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.085222908 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.824359866 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961870353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.740342612 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024418165 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.674366117 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884915839 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.748898711 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.96241768 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.381624299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.828899505 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996465305 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05323089 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.047585339 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758152613 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763443307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841258761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765736066 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.237972105 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995521525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.750867881 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.750797123 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.418847793 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.79612329 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753194871 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.752366022 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300083933 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015995326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774470479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.754964071 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.623604824 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.763215543 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811849491 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7521807 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751558142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.271006882 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256818857 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.755383813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.406541214 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967014697 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752122622 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.355481621 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922035603 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.762705521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012262217 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813557925 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.677723466 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.450260311 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.45109876 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749642462 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677674163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.751767848 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755678727 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75762239 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.937950899 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018068772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799285933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.406983609 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.854285719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756497162 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.754013657 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752530811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.243745081 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739071418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416834362 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.75745342 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880567353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.763635581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678223264 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.752141139 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754168674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.751361463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.698445645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799104807 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.404080579 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948950499 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000772573 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.158230631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761213305 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.406782713 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.863918459 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.774807505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031772499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353998836 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.861754071 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83139199 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.759175694 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.409149283 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482133808 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314996276 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031813318 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057061697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084853349 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.17282765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080432479 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837913782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978695079 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274139246 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81073152 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841935455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692642001 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767761274 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387433513 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10261851 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763374699 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97089513 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02908284 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.09611603 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883473153 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955932324 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783297412 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.621036555 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78649396 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.288199676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772045764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.175343709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95411153 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835493368 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.057693444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.83081604 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.753796654 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095115113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795085066 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.460446363 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.106504741 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.182293763 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.211122952 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974920018 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.759923202 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.192917396 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10018123 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.977597264 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.878544606 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682845066 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.760558992 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.760018285 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.766014929 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.726773766 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.596873399 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.997533434 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759878971 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982971191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.927459166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117028728 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.654161558 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.755957065 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75686215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999014127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471177264 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915117087 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.114230088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.337077317 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766926085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.681368984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682594212 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.455930841 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.763315329 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720457249 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963501709 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.859880461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437740064 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.168491967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069533455 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99872374 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.767828881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018960442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027591162 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.247397622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776753965 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.853308719 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035721949 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.441518866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972377861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98263757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289448622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974918748 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199409728 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.727152728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.757550729 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964262367 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.971997206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.113183771 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930013259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.467891571 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.77296142 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114295706 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814210555 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.101841695 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.940258469 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.841537234 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763396558 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833568129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760933629 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.763697475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.762167289 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767783007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.114529062 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873044306 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.769267196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834154763 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748678682 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.32837831 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.766653496 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019458589 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0924403 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081669591 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817153974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.758067154 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760477799 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685931401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886759493 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.199187585 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029422897 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.879563042 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.893134532 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780295159 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042805812 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.041138644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072995582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03193122 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.642971001 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425791833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882838825 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.975417383 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765036182 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.962694688 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971853715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060270492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319023929 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.934511661 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953482708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030604453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120425962 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.761117345 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344295013 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.76761076 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17164914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.79273224 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.107390402 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010847775 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76481003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880603622 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.762263568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.957460868 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.210537311 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368744035 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104138767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619496931 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763038409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028771947 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078069399 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060331722 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83688826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765616266 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.450343063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891645591 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.622290722 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976450516 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.760863521 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962499393 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.470738093 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.764630027 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024059449 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062642927 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.76057225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.644587219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779810885 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.765279879 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975173594 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974325654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00430232 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763916175 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.768413157 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.569347392 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027121022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815597212 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686797404 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.761779851 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805424553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985613109 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777091616 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.2734744 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.461274632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041470903 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.664459925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777252026 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.208470881 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133133365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080112631 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.284089783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984925456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.312834463 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.632519028 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140196645 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.763367224 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.204934311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14365545 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.7618332 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30284594 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875820918 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.022306304 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085078526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.776887393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447621539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.789811614 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977798285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120890832 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693310734 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768553756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.810057299 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.763430123 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.764582491 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771940099 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.667389205 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220521609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.606023559 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320242186 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.76577801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.774861206 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.088556466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321579941 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874192925 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781137612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768548365 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.475799989 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.049321384 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0078445 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310156012 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.862473813 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.765410318 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764690037 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684588535 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946332732 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.952482526 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043498964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.152561823 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.875047076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766065239 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.97209267 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967972422 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.118486248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889657854 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.934967341 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881232357 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.703929839 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468910026 seconds)
  done (took 1605.365530655 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.775933404 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.858092054 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.772030134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.808548444 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.845958682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801214419 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917494939 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837375618 seconds)
  done (took 56.313575777 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.763541161 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.921038723 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.769412848 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.761676268 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.767355044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.76314841 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.916930091 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.775867256 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.76691601 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.767604664 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.764877587 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.763963065 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.041141172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.784246712 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.763818286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.764366413 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.766570212 seconds)
  done (took 72.405212661 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.763886192 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.936445372 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.79379426 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.764577401 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.498049851 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.77410478 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.780750151 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.775773758 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.766922876 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.809281312 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.064467792 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.809449667 seconds)
  done (took 88.234792026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.776580474 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.766290701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.76510858 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.765097891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.765282353 seconds)
  done (took 10.541943047 seconds)
done (took 2094.309654473 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.989412697 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.95066115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005680541 seconds)
  done (took 5.652543543 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.909592321 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.961028688 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.073300008 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.08058652 seconds)
  done (took 9.729362077 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.077457719 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.135547737 seconds)
  done (took 5.914355449 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.090371817 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.790057777 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.183225797 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.770424779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.772200988 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.77290159 seconds)
  done (took 22.02157564 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.769387404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.769859952 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.769635609 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.769190157 seconds)
  done (took 8.7786735 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.768333269 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.47573965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.768887992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.77889433 seconds)
  done (took 20.493394346 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.968325874 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.884759407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.912353742 seconds)
  done (took 7.467137186 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.990613277 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.874438264 seconds)
  done (took 6.566082063 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.908411094 seconds)
  done (took 3.610610921 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.798194597 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.039518398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.253697094 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.844716712 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.416599232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.019574964 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.10895531 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.993773335 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.21596408 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.24736316 seconds)
  done (took 24.64104895 seconds)
done (took 129.625643488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.34362209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.800624648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.971189877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.135286648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.003653721 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967889666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.980446903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.124576998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.823687229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.819020759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.135433087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.000277945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921803586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.778267796 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929104277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.773345155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.987828205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.175955296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.852121094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.014852959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.980967233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.755188137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.945229144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.775276465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985428183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900940192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.294650975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.770529148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.921737409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.308834299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899641921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.142708528 seconds)
  done (took 164.925391418 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.737329576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.735422682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.736725576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.733760706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.21137242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.732447119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.730220897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.727321275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.139090511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.127993175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.725672366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.190445811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.72402404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.721588261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.721089434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.722530074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.284274309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.723830152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.723413935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.721550729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.723868483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.027808194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.722303991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.045232037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.294114039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.723633642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.722350324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.722471559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.72102707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.722225836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.723566484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.721956342 seconds)
  done (took 204.413403615 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.721782639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.725234416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.723501844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.723964954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.724688533 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.725370836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.725030647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.722726417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.360971434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.350414073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.724037721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.725246376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.725658324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.721443104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.725923671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.722206998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.723943155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.722597808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.724195774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.725290855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.725081093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.453151321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.724955579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.453115877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.7242315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.724339772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.723639517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.724552174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.722649848 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.72554988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.723322275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.724121637 seconds)
  done (took 215.551312631 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.973080013 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.723776828 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.725122915 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.637905784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.724774938 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.724093076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.701730047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.969766114 seconds)
  done (took 17.839909993 seconds)
done (took 604.440740086 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.096107833 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.935615829 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.900463611 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.748337071 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.028158828 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.792848603 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.743631463 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.813793423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.571906885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.820896204 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403975195 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.768427657 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.500751732 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.773181627 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.86703607 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.804095915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.298393364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.391486266 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.92576439 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.831730705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.923623325 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.644576365 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.82783821 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.598431307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.530022238 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.700320017 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.747444958 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298516917 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.757047428 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.901384465 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.414157921 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.993518289 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.76043436 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.74344597 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.801384587 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.777368453 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.93173971 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.7568015 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.871515021 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.451236885 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.840762094 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.476740745 seconds)
  done (took 96.423965379 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.736254685 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.731656623 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.731288998 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.732282427 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.740811201 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.730373019 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.730583831 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.731782573 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.732176996 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.731280299 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.730707954 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.73946385 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.73121501 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.739405965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.731136046 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.731756026 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.732517691 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.740106737 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.7303718 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.731389594 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.732074509 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.732256598 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.728453753 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.732413525 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.732712924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.73181547 seconds)
  done (took 46.730122882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.727450871 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.879883793 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.970163951 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.747365663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.728297141 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.73100684 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.746543118 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.732609574 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.731074728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.730573269 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.830798513 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.734783628 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.74744347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.974414769 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.745476345 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.727899468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.729063473 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.728729478 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.886960143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.744427869 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.749419604 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.733848848 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.747986686 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.741922485 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.731458061 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.729829474 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.732826076 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.162170491 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.737453885 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.830880841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.788961769 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.754413485 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.104929112 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.980616912 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.785694173 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.739055325 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.727906337 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835466886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.736523045 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.731432494 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.749309607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.737373109 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.972477407 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.247844119 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.746364311 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.729982783 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.171559931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.845701598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.771158908 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.74098933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.973576344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.747811082 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.733230207 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.731186424 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.766847112 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736206534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.731097453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.050958614 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.743569122 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.747947631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.735511869 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.730615268 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.893053782 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.740047615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.881746828 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.739819476 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.737545111 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.731881127 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.973738965 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.745984347 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.257503884 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.748010651 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.731617531 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.835011267 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.887958536 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.197265585 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.746135056 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.896811166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.124418873 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.755984806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.740064322 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.150896973 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.75918575 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.739612194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.733208177 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.733114211 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.731006834 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.773024003 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.748254177 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.17965154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.255957196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.070725071 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.758569111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.74668527 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.732438902 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.051177871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.740503548 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.731735439 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.966858557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.261974066 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.746940782 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.739267193 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.238900412 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.748674479 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.750374299 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.740755015 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.979888447 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.749068027 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.775638847 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.73315706 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.739101201 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.736189872 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.750238252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.739630205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.732139622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.229671068 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.855165417 seconds)
  done (took 215.678657515 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.734173498 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.737578353 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.731980662 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.736543009 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.732366549 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.733743404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.731036817 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.730882645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.732755973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.731942622 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.73258195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.73188942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.733511513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.73935727 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.741382545 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.734086438 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.335250482 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.733284934 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.733342839 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.731525382 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.371580392 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.737940352 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.733448914 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.733794127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.734632301 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.735174562 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.737938646 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.737867433 seconds)
  done (took 163.47142321 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.733704808 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.846806646 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.751982775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.76257809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.741104077 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.73420524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.831783928 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.752222199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.740037394 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.734288405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.735167568 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.794050105 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.745501831 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.833398228 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.767063486 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.840890914 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.839659371 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.741738766 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.7346254 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.733609612 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.762663796 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.744171851 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795608705 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.85823496 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.752566932 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.848210238 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.754094045 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.735317581 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.735446897 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.848447143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.755365879 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.79545224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.764067297 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.753708197 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.854586267 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.850468234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.840586353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.841897979 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.742662095 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.735362207 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.73576071 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.73707432 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.848934237 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.754894305 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.737532469 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.853258704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.755148999 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.736972415 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.737188901 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.737082191 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.750155933 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.75338434 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.801125716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.864967908 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.770329602 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.759292797 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.836413534 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.861528857 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.73757724 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.834839998 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.744698711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.849760249 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.755687682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.738567454 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.738332604 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.741239836 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.765779899 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.84303849 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.841800565 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.744286092 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.835494702 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.772298496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.745360613 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.737549113 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.738220272 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.850966952 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.853596555 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.773596495 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.775556888 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.767405279 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.746727309 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.738200812 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.73887207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.755309931 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.744297555 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.853885303 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.858417766 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.745978696 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.738637027 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.740476675 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.740474531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.76290338 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.858336672 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.773074125 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.843891401 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.803945739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.809903155 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.752588083 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.752466148 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.743347389 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.800373895 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.752711803 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.750751509 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.036170552 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.79883492 seconds)
  done (took 188.691723134 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.112105161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.788389606 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.794679783 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.047056407 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.094416072 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.660323928 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.782843658 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.786025755 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.81457512 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.970551297 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.860845513 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.804544333 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.774644946 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.76127851 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.784532193 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.815230467 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839782907 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.121318485 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.007869489 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.926246196 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.778132677 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.090851859 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.094559564 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.357859481 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.835945035 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.192689536 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.344637433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.917271498 seconds)
  done (took 57.839525107 seconds)
done (took 770.493633734 seconds)
SAVING RESULT...
DONE!
