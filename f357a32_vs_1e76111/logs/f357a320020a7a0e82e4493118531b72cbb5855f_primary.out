cset: moving following pidspec: 26950
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.199298683 seconds)
loading group "string"... done (took 0.573213538 seconds)
loading group "linalg"... done (took 8.159580086 seconds)
loading group "parallel"... done (took 0.170165381 seconds)
loading group "find"... done (took 1.231636253 seconds)
loading group "tuple"... done (took 1.965775667 seconds)
loading group "dates"... done (took 1.32540334 seconds)
loading group "micro"... done (took 0.199217909 seconds)
loading group "io"... done (took 0.830595986 seconds)
loading group "scalar"... done (took 39.378932501 seconds)
loading group "sparse"... done (took 11.911043169 seconds)
loading group "broadcast"... done (took 0.980368846 seconds)
loading group "union"... done (took 13.781832246 seconds)
loading group "simd"... done (took 4.786858101 seconds)
loading group "random"... done (took 9.385516686 seconds)
loading group "problem"... done (took 1.606725502 seconds)
loading group "array"... done (took 21.380695052 seconds)
loading group "misc"... done (took 1.679976683 seconds)
loading group "sort"... done (took 3.345355551 seconds)
loading group "collection"... done (took 17.839817476 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51520567 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12427208 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130939405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.113624119 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143694642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111257611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119467701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.078453586 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876263307 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14495937 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108761221 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413326898 seconds)
done (took 5.261418909 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164898278 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083836013 seconds)
    (2/2) benchmarking "String"...
    done (took 0.073436088 seconds)
  done (took 1.203866956 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.058857266 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121647825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.060094844 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06074686 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.060495289 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.059978043 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.060246257 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.060484563 seconds)
  done (took 1.530929767 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.065916451 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062271151 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.05950566 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.061782478 seconds)
  done (took 1.297792801 seconds)
done (took 5.313449191 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741629768 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202971901 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179267496 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389226058 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125194742 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172672674 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646638839 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311473395 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180925905 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089462923 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104610181 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370765511 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116675691 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641137035 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.070839248 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088689769 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.133118839 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460474843 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.063972951 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081045173 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085803873 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1242664 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.073746646 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.071358081 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145451317 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.063828813 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125907114 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076782956 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.062114646 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.236766413 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.169533809 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658324653 seconds)
  done (took 10.150155854 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09457456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094246225 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.062423482 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118635779 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087494244 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.063289117 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069251771 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.061318076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082499687 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118797798 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.084491999 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101288134 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.059793447 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.062949584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.076676813 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191329157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.073831419 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07411104 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062132203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073828125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100814337 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074615463 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073313578 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073124582 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122196705 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.162903226 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.089898948 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.091328602 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.060495066 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074758869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.108565248 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120320998 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.059980222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.059710827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115295413 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.088374494 seconds)
  done (took 4.278204525 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.901444851 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143121714 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.083611176 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125951454 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.05939482 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106387116 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.059205776 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075750465 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232076583 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368118392 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.60028361 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141764064 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10954834 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097025983 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06440291 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066502319 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.060581753 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090329814 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20625579 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102097547 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.090905007 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075606506 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.063868178 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.066545938 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065226133 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.057971571 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.062179784 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082788488 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.058046853 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.069267339 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.325696996 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112133128 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06261721 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.776850678 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.160323353 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.060759418 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09853815 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154387739 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085418362 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133537606 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06101733 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.056658417 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15094598 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.057197439 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.061342848 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.057258893 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.059175922 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078603081 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.25031788 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113036365 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064174421 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.060694834 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163364136 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060767988 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070219137 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.233882055 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145382995 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.05898836 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248001261 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087857604 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.062757354 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059158971 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.058429918 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.168272344 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108703954 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.061675157 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.060344888 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.062458255 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.063206997 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358749379 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.060814481 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.235005801 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.061228034 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07037875 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.063353407 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.062674801 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072453554 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072269768 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086892102 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.061013275 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067344902 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.060771415 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.060001728 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.060863789 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087661652 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380422759 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.05993296 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068196313 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.058793189 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088739846 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092245568 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.060571362 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.059593261 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095663474 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064400982 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.059953573 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.061473346 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112112779 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.062852557 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.106183209 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.060275327 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1891211 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.090337806 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.063251546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094708267 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.069934313 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064268744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.45289217 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.059536281 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.057837584 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065333327 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.059551221 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.061337779 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06038141 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.071873296 seconds)
  done (took 21.04593733 seconds)
done (took 37.425357046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245612379 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077552597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077295847 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078215774 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077545434 seconds)
  done (took 1.689614126 seconds)
done (took 2.807228033 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119248759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095423588 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.058854816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090789706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0582618 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094858702 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094030529 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.070702659 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093269098 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.05818259 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090887908 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.058078876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.058166399 seconds)
  done (took 2.176280984 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.076230222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.077009645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063014934 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.07524665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.056280834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.075478568 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0742926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.081479825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.074634002 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066201793 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.056707855 seconds)
  done (took 1.88574512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.075473066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.077097166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063518622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.075316393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.05645652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.074944748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.074910297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.078750313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07539953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067138367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.056788666 seconds)
  done (took 1.881634565 seconds)
done (took 7.052437789 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.071906209 seconds)
  done (took 1.166314687 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.528246504 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.626413388 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.072083472 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.094725204 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18804373 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.102155228 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.231117932 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.076059375 seconds)
  done (took 8.185815676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100355038 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.064474108 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.062546997 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.063647858 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.062668673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063066596 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063083848 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064186855 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06401105 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.063982514 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.062837499 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.062361892 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063173613 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066733282 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.062702398 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.064168707 seconds)
  done (took 2.230631268 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090437308 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.088840048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.066912808 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068388778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067001832 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.065569033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068162382 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067462035 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.064763424 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066142746 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069323661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067397168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066485073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058021299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067601999 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070130107 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064839761 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067707593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068171538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069448473 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.06857652 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.057529224 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066444824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.067716291 seconds)
  done (took 2.846248842 seconds)
done (took 15.534814882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106077184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070926352 seconds)
  done (took 1.28100645 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.071734052 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07282349 seconds)
  done (took 1.260430468 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.070468717 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056020582 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077818452 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067498826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.056790351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056571935 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076168856 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.056527768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.056421438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.056476808 seconds)
  done (took 1.746256488 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058849419 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065734163 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062971031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.071826042 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063308768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057644589 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061798266 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.057953246 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066342755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05629481 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.061164779 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.076248692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061146678 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077759463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061599314 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061502722 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.063433219 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060509535 seconds)
  done (took 2.264391387 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.055779874 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.056968626 seconds)
  done (took 1.233698355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.059400357 seconds)
    (2/7) benchmarking "second"...
    done (took 0.056688311 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059322214 seconds)
    (4/7) benchmarking "year"...
    done (took 0.059203615 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.056537818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.055968991 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.056720876 seconds)
  done (took 1.520737905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380478881 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116947627 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312665493 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063698001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073231693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.232733517 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.05779652 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.062680983 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.062846663 seconds)
  done (took 2.520183126 seconds)
done (took 12.946771472 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.074698654 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.077539357 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09070176 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386460959 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.085617361 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061134917 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.10732814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1720761 seconds)
done (took 2.186633699 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211928931 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.836740316 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.469387435 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197234503 seconds)
  done (took 2.624833954 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32840116 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.071647286 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.071464523 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.060504176 seconds)
  done (took 1.662243048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.058638438 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065115544 seconds)
  done (took 1.250494781 seconds)
done (took 6.879099921 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.058175786 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083019124 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.057760001 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.057433166 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.057900817 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.057803357 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.058065863 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.058195472 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.057801073 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.057759251 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.057941732 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.057838892 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.057895616 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057593569 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058583818 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058401708 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.058324319 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058247116 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.058347814 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058316389 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.058010495 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.057930669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.058008106 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.058073588 seconds)
  done (took 2.57604966 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0746086 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.060846392 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.061883614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.061683241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062139865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.061672521 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.061954692 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.060349195 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062243549 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060136855 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06238103 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062390882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.059893848 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.062552897 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06030969 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.062570161 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062262279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060491093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060362527 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062469286 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062201604 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060208231 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.062348575 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061848442 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062504751 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062801765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.060111324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.060498556 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061824965 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062340658 seconds)
  done (took 2.999228468 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.058300758 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.053849562 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.055051097 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.063384121 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.054323069 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.055325613 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.054230395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.054843101 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.05543798 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.054456467 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.055591865 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.054886036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.054581088 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056119847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.055503588 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.058904896 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.072387317 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.054990722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.054501373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.055205159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.058768176 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.054581291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.054660665 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.054604713 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.054415039 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.054361372 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057410233 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0543284 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.055178971 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.054711859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.171747205 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.058911439 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.05444811 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.059496263 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.05902914 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.054454794 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.058297215 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.054384304 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.055405663 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.054221016 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.054323922 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.05429528 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.054514385 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.063291859 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.054472666 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.055525295 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.054383814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.055862504 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.054797342 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.05648282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.054160982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.054396115 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.056523039 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.055955778 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.059364405 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.054491842 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.055466978 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.054176669 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.055278564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.054157172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.054171076 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.054438206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.057864987 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.055149793 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.071784801 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.063635578 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.054340166 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.056070222 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.055240415 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.057758594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.056673059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.069792075 seconds)
  done (took 5.324302429 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077753211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081045352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059354156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.059165621 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.055009327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.054770712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063103582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.055062442 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059505583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073961708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05491848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.059648782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059524003 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.058936882 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.055554441 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.059311529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063611941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.055465346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.054830723 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.058868043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.055204966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062873037 seconds)
  done (took 2.49205266 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140760382 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060734081 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.096898585 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065315823 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063349509 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065606948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.060821971 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061063872 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06117072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061507903 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061350406 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060963942 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06348411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061466794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061340245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061508414 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060718161 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06149424 seconds)
  done (took 2.375554645 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.070954734 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.060177807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.081325658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060145502 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06021207 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060029345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064487508 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065464999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.060049769 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.060957406 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.065139048 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059996311 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.059906573 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060417312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060347708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.060267594 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060105928 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060105994 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064906193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064187369 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064068572 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065174303 seconds)
  done (took 2.53545 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069694448 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.05922538 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072932531 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061467953 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.055460567 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.054997969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06092738 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.059757802 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061314089 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.059636838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060020729 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.055490958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062409053 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.059839302 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062438826 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059756976 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.059134398 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060041445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059297429 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.055142835 seconds)
  done (took 2.358837614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076282733 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057999996 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058568904 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064352292 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058362283 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058416522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064868479 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058338405 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058076915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079261961 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058151429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058476935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064869829 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.062471743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.058492887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0652091 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064991587 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064692028 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060884902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058679308 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079508833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058316267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064572423 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058156193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058473962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058603904 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058261277 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.062374818 seconds)
  done (took 2.899661882 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.057973637 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.05744323 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.057808742 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.058016105 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.057658957 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.058162904 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.057769395 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.057879628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057721433 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.058146955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.05792891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.057714126 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057686935 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.057715518 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.057717546 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.057541716 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057964094 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.058278191 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058495756 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058462211 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.057882943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057679109 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.058025764 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.058039929 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.057973787 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.057522158 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.058500825 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.058250005 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.057782859 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.058399908 seconds)
  done (took 2.892616675 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.067996704 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066620039 seconds)
  done (took 1.288035771 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.056860117 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07053371 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.054241742 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064471717 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063588356 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.058368756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064666388 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064144707 seconds)
  done (took 1.646349481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078228565 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.068399639 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.057950972 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.068695342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.068353432 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.078361851 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112915037 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.057461323 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.067562561 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.058306049 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075406729 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.05962323 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.067614408 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062367029 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.067733581 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070692459 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.055365145 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.061701046 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058356655 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.055379603 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0574015 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070201278 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06629403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.055456167 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.062205781 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.080777021 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073047643 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.056561274 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.063848213 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0690632 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.066798986 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05396921 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.056724695 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.057116615 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.055021426 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.068101239 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075357634 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064132128 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.069391978 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.057376471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065414249 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.054658311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.065434987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.067779466 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072905772 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.056955404 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.057001887 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.054710198 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.058070624 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.063186625 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.054861315 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062019879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.054498639 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069029815 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.064877635 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072095397 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.055833274 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.062730001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.063343436 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.064078471 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.068126823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.063127794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066268205 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.056854856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072173142 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.066743478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066354618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.054896134 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.054093125 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.054997275 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07058714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085051588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.06640678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.057225413 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.057509815 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.055546759 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064222546 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.057930588 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066611808 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.068494246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.056509155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06159847 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06890496 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061446204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.063934473 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063185073 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.056337694 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.060429382 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.058437804 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076943263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.055834487 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05517848 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.058007249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.065285049 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.063932979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058857101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058188903 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068093147 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.053780522 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057160982 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.057467244 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.062909735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.072460685 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069431142 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.061097508 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.069742051 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06579982 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061245417 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.062758111 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05342921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.056182291 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.057848571 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.067183494 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05307538 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.062579681 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.059969467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.056255373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.069436927 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.053839032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.055372411 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067796015 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.066850787 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.054675968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.053219303 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.062523096 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.055424145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.05790336 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.069090096 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.05432762 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.053815915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.05388596 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.063328417 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.055058277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.062873044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.05896892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.062609953 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.177770849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.055819604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.061929886 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.071976653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060691053 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.063125743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069957397 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.063286649 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.056293066 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069272762 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.063926493 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.059387848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.06890443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.061434855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.055177187 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.059586024 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.063648148 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05570018 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.064430436 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.058944096 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.063166781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.056990604 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.055539034 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06258537 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.05744804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.059188413 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06162105 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.055565581 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.071804443 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.062787643 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.054505454 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.053959306 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.063803869 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.057933918 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.056443835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.058920264 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.063220994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.057017561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.054864155 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05605557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.062707583 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064212735 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059402043 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.057263178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.065815243 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.067720652 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.056178518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.063547881 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.056500788 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.058213955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057276858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.06478451 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.066898648 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06070423 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.063288211 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.054357305 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.065985208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068869742 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.059206979 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.054995065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.059072159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.060340812 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.068284117 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.060256965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.057254855 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.055313399 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.062492686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.059264003 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.063353329 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.056333235 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.059070065 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.062263861 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.055290372 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.062527896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.057207084 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.070933975 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.063974384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.054934791 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.059510385 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.05517152 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.067805154 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.055475221 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.05816566 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.05987703 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.05766397 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.055796889 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.063387732 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.054116984 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068949902 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069448803 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06231025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.059382671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.056472298 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.068699364 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062480939 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064589256 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064099683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.066568729 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072072163 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.059569562 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.063713018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.071630032 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.056710383 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.053916011 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071590606 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.055135265 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.055912482 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.055903634 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.05568979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064004947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063680094 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.064433109 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054198363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063227721 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.054849678 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.058830651 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.054928447 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.063965703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.062538386 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.059898495 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.067776279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.056253694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.055850114 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.063194859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.055138869 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.055858731 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.056251346 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.062141742 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.055758285 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.061614395 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.058355833 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.061383858 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.058245294 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.053824746 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.061484511 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.055457583 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.060726092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064421444 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.055031897 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.061182332 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.062285491 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.055707761 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.190511946 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06118179 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.059776593 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06448195 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063155107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06194159 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.063691038 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.055094544 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068427121 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.05634743 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069387478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.061651452 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.054552883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.061885837 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064230736 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.061542362 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.05725218 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.057018024 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.062063207 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.056842649 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.063304011 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069071003 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.058011254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.064890685 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065100437 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06230769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.063202076 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.061893418 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.062174108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.058854298 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.060816059 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.056799817 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.061897851 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.056616582 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.065060392 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.063835401 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.061353231 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062771985 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.056856489 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.062281715 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.057449614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.054575295 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.059241532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060296467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.056335757 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072029888 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.056861723 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.059885834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056186632 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.057817672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.05653024 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.054618613 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.063556963 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064243792 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.057405875 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.067754698 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.059530534 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.062905758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072335809 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.054266064 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.055229406 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.054886979 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.058159259 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069240164 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.057142449 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.070096568 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.061929016 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.059791039 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.054504048 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.057150704 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.055646093 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.054901901 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05521352 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065045421 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.058871969 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.055944234 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.057241969 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.063482122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.05785919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073081865 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.056082965 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.060980404 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.056877358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.054765908 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.059314524 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.059052865 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.063532689 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.057612911 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.058406863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.054423619 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.056587616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.060970361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.062525633 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.056479612 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.062405402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068715284 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.056421292 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.063924301 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.059115914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.054752312 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.063605526 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.056473067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.05642896 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059346295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064223314 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063881105 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.05738539 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.064411269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.058831665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.062713677 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056655082 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055078502 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.056399141 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.056338741 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.056340308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059137131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.05776178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069244042 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.054634982 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062269391 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06143049 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.060116961 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.063777651 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.056602445 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.061912093 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060412857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.057630038 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.061812509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.062622043 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.059221898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.063067594 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.056071592 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.060801606 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067844618 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.058022696 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.067145282 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.061365809 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.055672975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.061225086 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.057198983 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.055155434 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05558348 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.054634077 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068133186 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.188341393 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060009654 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060268226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05532241 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.061963976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.059368706 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070184959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.064207772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06395809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.055084965 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.054505454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.057531089 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.058244908 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.062464098 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06368706 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069693447 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.063401758 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.060612727 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.055997543 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.064996092 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069805266 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.064591329 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.058300285 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06436684 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.057485957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.063466855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.061137801 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.061300793 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057870134 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.064493083 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.062417607 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.05957737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.067034651 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.064909498 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.057486303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.062564492 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06259445 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.061502827 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.054949905 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.057589055 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.062869449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.065274587 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.063459525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05745074 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072509072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.058200968 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06182191 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.059507207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.056505917 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.065658493 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.055369621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.063714161 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.057760553 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.057740962 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.055292888 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.059780377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.058750787 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.063972235 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.059489109 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05532168 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072480342 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.064892562 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.062768608 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05607738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.05590352 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.055640168 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.055482575 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060122043 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.057916341 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.062798742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.071554475 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.059577815 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.059740426 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.055109621 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057414991 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064698903 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067647838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.054746602 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05527583 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.059471001 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.062958916 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068343684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.055861459 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.056873654 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064107983 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06353337 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055076965 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.059499183 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054358616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064586545 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07334261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.057079041 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.062601264 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.06656234 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069450547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.056957258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.054924927 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.057161838 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.062841925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062024675 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057361056 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057800599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076233483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064125946 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.059560222 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.055857402 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.063806332 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.059709219 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.070363223 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.057528383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.059822699 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068247322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.063018032 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064171177 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066926715 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066061601 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.062814695 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.062909098 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.055970926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062016609 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.055578862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.058954645 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.056844833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.056570499 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060054976 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06226302 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.058780739 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.070839337 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.069908262 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.058917614 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.053619765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.058467813 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.058670577 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.054602197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.056726944 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.054322765 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.054598254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.054118857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.055098069 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06147613 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.064256445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.060466965 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.055889939 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.055397425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.053185893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.19764748 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06419145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064124091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.054800994 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.058002802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.058082803 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.064953688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.059891735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.058455528 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.062909241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.062754743 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.062832455 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.055518802 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0684733 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056001868 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.062732845 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.059534376 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057001366 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.057647182 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.064913409 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.061268895 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.057988781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.063714729 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.063692544 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058330266 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.054793852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.055097751 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.065858963 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.054999883 seconds)
  done (took 38.082739312 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092852337 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.056090478 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.055317682 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.054991564 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065113396 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.056127882 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.055315085 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.056598786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05632645 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058616266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05542593 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.055447981 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063188458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070569373 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066156997 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060174598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.055732665 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.056846635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.055691176 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.056706641 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.063516432 seconds)
  done (took 2.517726331 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062688958 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070473028 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068145781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072376699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064559477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060555064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068185885 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060610588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068918425 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066348622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068733767 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060907589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066347869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066019564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065566545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061019299 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069044868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064493167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060716549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068324461 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061405988 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06821148 seconds)
  done (took 2.672329305 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.057248059 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.056258545 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.063380083 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.054652249 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.056061192 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.05465797 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.059375977 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.055175543 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.058906828 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.059021591 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.058841019 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.059162384 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.062972355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.055240648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.060472008 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.055293741 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102391713 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.059789016 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.056561353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.057595974 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.055252423 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.063759051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.054982669 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.055438681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.058620092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059400864 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.057080482 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.054984524 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.056393434 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.058676006 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.056574574 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.054826283 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063575757 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063095465 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.058992776 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.058669918 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.056273043 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.056423731 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05795762 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.055629986 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062797799 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.055318945 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.05684712 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063174661 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.055252309 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.054922804 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063102642 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.057033003 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.054693375 seconds)
  done (took 4.11527713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.06783506 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104248064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.060850376 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084300482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.069947402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06252756 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061400595 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085402486 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.056951409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.057662877 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071114372 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071934405 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058841849 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060539106 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063536466 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.058935542 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060083823 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.057832415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062266752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.058328024 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06217381 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.062907337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069548723 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070254119 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059673294 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058149646 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058172748 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.060025906 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.069831045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.062829702 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060518244 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061429431 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070547581 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.061933687 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058755503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.058694018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071470335 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.059557612 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.05852108 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057214217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.058664371 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060817108 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063631895 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071584547 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059327006 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064078228 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059353796 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.056807876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070809718 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059046561 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.063674923 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071320063 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060398894 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059366951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060694028 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.070478107 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.058927284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.057680475 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059003143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069946287 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.056956313 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059751494 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.086131879 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.05767103 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062355807 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071601589 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063349477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059448514 seconds)
  done (took 5.721770333 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065323485 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.085684494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072532994 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07196847 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066043104 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.06630438 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065987802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066392508 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066069196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070388399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066541684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105817103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.062420131 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.068114186 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066708488 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06629961 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066384412 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066189529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06638203 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066251614 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.06633567 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072324783 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066361808 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072891404 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069623756 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061731762 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066097302 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.065864631 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072421193 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066193829 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.069274897 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.066131643 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06652394 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07294423 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069109587 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.066120855 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.055958271 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065949846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.066571873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066085744 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062423889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072781946 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06589141 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.061848519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06611773 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066352182 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072498963 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.06949316 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.068154627 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069975334 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066672961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072505778 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065781837 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066152447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072467689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075304204 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072703628 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072735701 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066277182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072432361 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072993527 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075420405 seconds)
  done (took 5.547874059 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070578351 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063422145 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074568956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.055012727 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058125848 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065270872 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.055160893 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057061946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063598754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.063485561 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065538167 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065186805 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06788404 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065802664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065396452 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067617103 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065048705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065268295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063499914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065041378 seconds)
  done (took 2.559283835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.067158598 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072158078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.060534261 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064839246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.060530331 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065120159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.060453303 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060700809 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061156799 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061129634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066430897 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066616706 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061446287 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065608293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06681818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065598826 seconds)
  done (took 2.28857133 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076332333 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.063147116 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.070832397 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.056451563 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0604612 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.055796079 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.056929717 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.055179518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.055739612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.069735679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057007205 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067745992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.056640991 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.055702211 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.056390847 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.062360452 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.056128749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.056992997 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.056798157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.069957784 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.063412494 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.057931125 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.060491565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.056584344 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061902698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.064238009 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.058395132 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060160469 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.056789339 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.057270168 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062107601 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.063400583 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.056267455 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.057214132 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.055819856 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.056394363 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.056453828 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.05719159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062419469 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057187732 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.055462697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061552458 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057251112 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058226472 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.055975907 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.057133387 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.056053696 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06279929 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.057057937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062638674 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.057013994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.059292857 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.05716301 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.064050291 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.059400899 seconds)
  done (took 4.542017707 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070407133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061464409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.054935016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.054927561 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.060270839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.061516788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.060716001 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06085467 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061469989 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05509892 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061418326 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.060437074 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061606949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060891563 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061418905 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060811507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.055309503 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061217444 seconds)
  done (took 2.363621733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.065841209 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.05981168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.064483347 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059945264 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.060485998 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.059919545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.055649695 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.055514531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.055697486 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060542545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06033495 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060152896 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05553993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.059489521 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.060144431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060350953 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.059841229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.055713932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060202385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.055871583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.059673307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056133161 seconds)
  done (took 2.569992771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088770106 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.077105425 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122271885 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07273167 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.080037357 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.065183559 seconds)
  done (took 1.776398491 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084339147 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089152853 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060539374 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.060414289 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065808365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063206225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063851661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06392818 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068192199 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068682995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064198438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071007614 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068213157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070697075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066257028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066655396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063783941 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063829835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.060699154 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073915328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063931201 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068187289 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063888276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064054552 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063727277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070487935 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068376719 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068618469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063563214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068799707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066194911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06391526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068723507 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069046293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061058934 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068625823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064432675 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073628322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066637765 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070536029 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060605665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066862895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068520723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067966109 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06860385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064055565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067690414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063778436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0640054 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07894237 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066735631 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070126802 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066417793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068480165 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068455548 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075146421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069051113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070279282 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066691756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068760718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070209429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066451409 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070674993 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068834248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066178495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0702317 seconds)
  done (took 5.739603149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094934841 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060344817 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063887227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068737108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069984207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063809124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064082609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063713799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064066579 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.060882608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097559098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064212998 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070943613 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07053614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063915045 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063952398 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064024186 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071345223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.060967116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075222552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063784397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07039569 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070324339 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070313426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069613797 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066726759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064005488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063701696 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063999746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063920078 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06790445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063745747 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070051875 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060760062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070139955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06396264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063919237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06784001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06383399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066744582 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070499349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073871847 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063940207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064502961 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068920397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063913781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063945535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061203664 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064236557 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061553139 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068861765 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069069558 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068834687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070155834 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064239693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064382893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063880672 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064132223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064114839 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066268662 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070311378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063746527 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075308149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06385065 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064143089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070552694 seconds)
  done (took 5.723982779 seconds)
done (took 116.738818228 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201807914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178079219 seconds)
  done (took 1.639961512 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066086522 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095969422 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075356751 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125344058 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063926856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098096437 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096782138 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076525369 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.063974291 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063801531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063963054 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066379177 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128835481 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063982819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063783279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066468775 seconds)
  done (took 2.557109433 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096654429 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204918305 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10120042 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.061947379 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096322885 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.06973527 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.062097322 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074341209 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070088621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065126192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070154622 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067988275 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064791859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068158714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070049531 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069746766 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064754633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069713155 seconds)
  done (took 2.73010567 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103258815 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086241403 seconds)
  done (took 1.473486439 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166705149 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128679929 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.191021604 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330188136 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.143155049 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.415487931 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131616699 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131312364 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11094467 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.126812516 seconds)
  done (took 3.155179954 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094264163 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194137841 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287720074 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.110179405 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068950964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10397874 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.112280111 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074846581 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.073792781 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.073250019 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.073455999 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.071114678 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.090225125 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069539715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070292452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.070995906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.093445109 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069463319 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.069138262 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.069248633 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.093411209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062736668 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.069752319 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069508927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07138197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.071528011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.063911112 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062854591 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.069320275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.069147337 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07239061 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100906845 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.071647012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098405467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067097396 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098956245 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069290172 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.067480559 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069221056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.067615452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.070860074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.070905628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071265881 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.070826196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.063901169 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069059847 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064106961 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.062792056 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073411326 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0639601 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073018139 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.071676672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097842169 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.064100387 seconds)
  done (took 5.720883038 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100785044 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.099275188 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064633126 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104815301 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096448597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064127664 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09800991 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090991072 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100517542 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064385487 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062746592 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065074503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073215809 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07473636 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108022546 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099765327 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066942101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063933298 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099819997 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099466162 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063084862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09372338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091462298 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100049212 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062267951 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06431066 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062767981 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064900285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069458698 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071199776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063390881 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07270865 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076645582 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070648882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062136115 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062662551 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062881987 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072127286 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072287 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072070639 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070330084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062023365 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062559612 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064057748 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063313337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062107713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070947861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072259122 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071060731 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063193043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064514913 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06305546 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063927605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071768738 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070103872 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072780744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072375053 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063189097 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062836302 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065649994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073059896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072212992 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071749269 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064183174 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072346973 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062963251 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075593461 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076101486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063484324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06415772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.062793643 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063045506 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064048634 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070332299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070040337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064579783 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.062943568 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062771594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.071900944 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070301947 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062743364 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069504214 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.061822512 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062742055 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064159209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063943736 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069923751 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072191406 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06463377 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063045583 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063342283 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.062956324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.061927833 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069899941 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071720923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071415928 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070652863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063527414 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071001009 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069910343 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063840244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070827944 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062533963 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063972196 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063292763 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069817729 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068867768 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070390955 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062425353 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061560293 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068521259 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071164276 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.061702688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068367145 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070446392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.068716638 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.060986765 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.071518549 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062173027 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.069928363 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.061750718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204867068 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06389604 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071725622 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063827015 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.062884757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063361243 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071705786 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064417449 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063006277 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06396614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063092905 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07072771 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074448173 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064746676 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07058388 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.070953613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065240543 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07127803 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.062946677 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071398449 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06350039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064061503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.061859899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073443764 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063155337 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063250149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063386438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072266417 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063465362 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072608465 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069950934 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062143835 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074166834 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072720664 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0695573 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07269823 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06455081 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.062952058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063042094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06346624 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069767252 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07189441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064760521 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063082467 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070077448 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07274461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062359651 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070970192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070858263 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07122011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063409797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063375382 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07323646 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073364972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07072884 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070799762 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070994736 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063143888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070517888 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070649302 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062940552 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076412398 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063025609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074776187 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071144936 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069487414 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071273384 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072643689 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072126196 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072550102 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.092842028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062183372 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062588598 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071148548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062841542 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063186148 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070255238 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063921431 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064144348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07480728 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06317183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072743681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062276012 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.070849916 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062065233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063913254 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075161339 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062963514 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06409095 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070811778 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065384631 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069948371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072544402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070473922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062617423 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063963223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071693157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071401242 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062756262 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062800887 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064388162 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070442191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069394046 seconds)
  done (took 16.990263285 seconds)
done (took 35.563902371 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19528417 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.146173689 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.177879442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.105740622 seconds)
  done (took 2.003575053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.100422522 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.089923661 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.08102392 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.059558981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.087022289 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.05940939 seconds)
  done (took 1.79544491 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280143309 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195440086 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173577461 seconds)
  done (took 1.964711655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199409583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.179876258 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456898833 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291534908 seconds)
  done (took 2.534019461 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.133773657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075043909 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.057875729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075975211 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.117028073 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142757882 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086285326 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111078677 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.069041893 seconds)
  done (took 2.236784341 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.138519221 seconds)
done (took 12.012235961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.141359329 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094143951 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.119269975 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065986732 seconds)
    (5/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.258437957 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070565587 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.062160508 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067440716 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078714431 seconds)
    (10/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068766609 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215273101 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069165902 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087044614 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069825294 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109278258 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069753848 seconds)
    (17/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224805355 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200794363 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069100218 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068664429 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.067974283 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21793862 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.204323311 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086267942 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117531374 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071934572 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066195747 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067853784 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082917844 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190817945 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067953528 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.059725194 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08323842 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077867971 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189509845 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088841464 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06129209 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11684481 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.067824289 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112491318 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163253274 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.058446435 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.180792615 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.222891228 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131761246 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172176468 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20972027 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067807105 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068412301 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 0.127358244 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06392123 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.059915876 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.156917754 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068555996 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086825033 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164888678 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184225745 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199369694 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.060030399 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192154893 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086207026 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.070084199 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083301341 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131776512 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.058930417 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068093298 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158519982 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0742264 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175174023 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068226847 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.059396311 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189478048 seconds)
    (73/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08719299 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058430228 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129008006 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067732598 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.084477021 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067414519 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.078542939 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.083607325 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084941167 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.076247566 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152936659 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063624123 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073724415 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.079773165 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069593777 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.058823177 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095135957 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113140155 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.070269105 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204078363 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155461729 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.270403055 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.06960552 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.161151471 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060262042 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.081949899 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061032632 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.186983341 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066694619 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.058781279 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06777386 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.207309209 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062462397 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07605366 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061480616 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.060112993 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205039044 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066489321 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.066067794 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169836768 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195617528 seconds)
    (114/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061569541 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061510223 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067655271 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060863296 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.059241174 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06207202 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061196781 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.061872789 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127166084 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071271708 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.073929756 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068465957 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066432081 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068694708 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.059823195 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.067455176 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112732821 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066655775 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068251553 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063082465 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16514005 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.059702114 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161932474 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081918797 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068935184 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103927917 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121516253 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.128771306 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070647274 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.077246366 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187698564 seconds)
    (145/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133297513 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070430451 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.059872035 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060722039 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086158693 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063359828 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.065592737 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073808335 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.059590198 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.059620343 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.067844506 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.066251492 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064667458 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.067578128 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133966644 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175810668 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.060358327 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.058853086 seconds)
    (163/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089080837 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060976068 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.05856624 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137963153 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125214232 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067414435 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.062422957 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16414701 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.058736269 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.220640059 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.060911701 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.081669576 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060724658 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.059456241 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138730468 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.059617171 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077767227 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.060648634 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.059631276 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.059378418 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168196416 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.06764947 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118207017 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.129153937 seconds)
    (187/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.126299607 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120324289 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.060969974 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07333844 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174288237 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106888633 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061879983 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.060820631 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060687086 seconds)
    (196/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061052651 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122352388 seconds)
    (198/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061074816 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218419792 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129642047 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120781431 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067114487 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069363805 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159562398 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.338776567 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.058676907 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085284741 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083158676 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.058755757 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.072325532 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061574132 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.065719096 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.059048851 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059908997 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.058316978 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.219934381 seconds)
    (217/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071745136 seconds)
    (218/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192567679 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.062377753 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068264093 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129189388 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175731589 seconds)
    (223/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.06637851 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133850102 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060946361 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.068389914 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06108866 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.059770882 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.058945963 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.060162235 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.084073312 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061037929 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06779803 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066223328 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085103179 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063162318 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172303644 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.124896111 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07046408 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063936657 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061670849 seconds)
    (242/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071056592 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.071887652 seconds)
    (244/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.070681452 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062141063 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134420429 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071900492 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.063794693 seconds)
    (249/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.072763581 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.073421385 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.060016602 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06755503 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140751333 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.080520399 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.065938501 seconds)
    (256/309) benchmarking ("sort", Int8, false)...
    done (took 0.166106315 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060175938 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061176881 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122202842 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.061522519 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07103899 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.074821909 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060772697 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.062095629 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.073499557 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.058824046 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.060685633 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130418961 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.058910137 seconds)
    (270/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.058546876 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062359086 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.083985098 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.060997363 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120958372 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.081698691 seconds)
    (276/309) benchmarking ("sort", BigInt, false)...
    done (took 0.23899929 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.071495325 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.060107557 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.119921746 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071328975 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099664437 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060874761 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062228394 seconds)
    (284/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.065988224 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.072536982 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060728871 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.060716596 seconds)
    (288/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.073425627 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060935889 seconds)
    (290/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.072480949 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060505285 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.073435909 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061347993 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.062823244 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060770389 seconds)
    (296/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062522121 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070165284 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.063697778 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060831931 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.060428521 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.066460505 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.067594054 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061362778 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061068198 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125865714 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061401511 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059425257 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06047051 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061354446 seconds)
  done (took 30.917598108 seconds)
done (took 32.250710513 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079536674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090784351 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.06633626 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08565312 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.074293677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089886821 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.067359763 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073860798 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.074527709 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.073315853 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.072533762 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067272743 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070033182 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071027291 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.066978438 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090751341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.073560337 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.067733313 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.062442918 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.059320897 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.063008452 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.059752348 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.059531193 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067373465 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.071262151 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.066964811 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069104225 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069902994 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.059990643 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.060281374 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06457735 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.068673307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.059491148 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.072374205 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068315652 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.062394412 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071328423 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072117518 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.059015234 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.060036446 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.069616547 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.059964587 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.067838551 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.065872514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.064922975 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.05942307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.062313659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073518603 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090343299 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064110662 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.069552445 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.070833289 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.071630826 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.065191951 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.064649635 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.062891682 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.059341908 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090567811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.062792248 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06449824 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.069354162 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.06879672 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.059727484 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.062365218 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.062440189 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.070628578 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.072511928 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.059158907 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.069921889 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.066688926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.059528042 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.062341872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.064049026 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060280346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073391909 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07211885 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.058818473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.063974804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.067679915 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068008617 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.059536199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064266637 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.058795942 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.064116714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063821548 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066819205 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06462815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.066847157 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.05904765 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.062764635 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.066673953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.067549273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.05900615 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072587705 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.059458249 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.059769294 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.060420145 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.059538937 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.058841183 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.064784144 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.059110238 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063749097 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.068262949 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.058412017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.064255584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.072586584 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.05973515 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.066566266 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.059146645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.059030089 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072068792 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070008385 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.059803141 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063768761 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.058891885 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.058601174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.059140788 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.059225361 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.059298656 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.059179292 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06365613 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.059381925 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063661269 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.058846699 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072492908 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.05913888 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.063876042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064033694 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.059363465 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.065372467 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.059565775 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.059456862 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.058467262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073900145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063494702 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059237239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.058310321 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063150343 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.061364695 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058260103 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.061672415 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.064415242 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.063064739 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.058614535 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.058099421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070617647 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.062688783 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.062708766 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.058030488 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.058451555 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.057336713 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.058034968 seconds)
done (took 11.393763299 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06217854 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.110216828 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.08549014 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.086450228 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076247486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.060814341 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067723075 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086661879 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.063153883 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.089233412 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.081458431 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081304649 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.102631109 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.059193301 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.060173042 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.060942298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.058810578 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073362985 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.089198591 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081725014 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.0961729 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.059984168 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.078575546 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081073389 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076390686 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081593877 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.061178632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06100809 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.062488258 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082924909 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084915887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.059927561 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.060840324 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.084577426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077845599 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073065069 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.060578818 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068481739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.060799246 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.059670278 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.061532353 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.082526932 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068397339 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068584111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.060933628 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.061806761 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.060854972 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.07137504 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080557895 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067866846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074929372 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.082894162 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063769715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.060466423 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.05931792 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.070556665 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06026898 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.061205653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.060413432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.060281689 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.060319184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.062297932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067834056 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.068826532 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06478793 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069846814 seconds)
  done (took 6.087601346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.077139683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089367428 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.076259943 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077099107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.059286332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.060389951 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06029704 seconds)
  done (took 1.924993519 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.060313677 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080484453 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084130592 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083513067 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.076443271 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084677724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068288947 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.060779753 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088944238 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.059769174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079831223 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09082162 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.063834985 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071781854 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084925327 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.060576781 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.084773912 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.060389201 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.061436856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084632132 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065475311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087749217 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0720216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061095196 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.073224106 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.060845781 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092955382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068806187 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062040932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.061993955 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061841327 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.086558227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.072619093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072484916 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061809755 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075584399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.074221041 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064271938 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.071301012 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0693248 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.073585549 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.061742351 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.059469681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061737065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.063420568 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.072197278 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.059877907 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062151294 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.061510177 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079895375 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.059506248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.072617174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064148643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066367876 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066249517 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065875007 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069071883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062521243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080011927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062252701 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078301915 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077364952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.074066149 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077228087 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.060843201 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.073234427 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.074217602 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062042055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.062897863 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.062535759 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077334793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063948703 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.062819229 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.072285127 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.060364717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08469284 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084490338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06004069 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073860127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.062886472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.061815537 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072261319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084379215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066015134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061566589 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.064837194 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.062773416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064074975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.059627966 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.064805037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061879947 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066031958 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.061755339 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.064174571 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.063234171 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077603551 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06007723 seconds)
  done (took 8.164881428 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06321429 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.061826232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063324842 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.061869055 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.061587383 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.061585931 seconds)
  done (took 1.826300965 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084798732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.061619909 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.073680552 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.061174955 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096276888 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07626297 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.077040534 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070710526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074906926 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.073003907 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0768365 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.079692181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.080894153 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.063762872 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.076572541 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.062515571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.076692323 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065688802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.072763285 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063972864 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076519198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06352055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063840479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080793542 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06511614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.062853831 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.061437152 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073131312 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.072583856 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07146432 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063630187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.064931601 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.068851808 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070769284 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.076812138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.068968002 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064288658 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067808304 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064250428 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06501618 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.079551674 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06407089 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06470409 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067774967 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070936392 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068976741 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067761768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065934935 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.076537776 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067678819 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067720732 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.062768404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.064838512 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067650911 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.068821881 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071042967 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067636513 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.076757999 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063417453 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068935565 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.061545756 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.064633002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070340266 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.064653842 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068681401 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.067602756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069212719 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.063680421 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063680387 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.061599887 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067463627 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062111524 seconds)
  done (took 6.416591154 seconds)
done (took 25.871090722 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.561992273 seconds)
  done (took 1.970151744 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603545806 seconds)
  done (took 2.035903549 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.527889208 seconds)
  done (took 7.959237416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.347784705 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.445134281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.681686241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128813638 seconds)
  done (took 3.06478908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.689955817 seconds)
  done (took 2.131424655 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226472372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.218122181 seconds)
  done (took 1.896980823 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351682951 seconds)
  done (took 1.784195002 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.026284796 seconds)
  done (took 2.460668324 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.224625966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154386615 seconds)
  done (took 1.81863809 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.427448423 seconds)
  done (took 1.864380707 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.199371871 seconds)
  done (took 5.636388927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210998511 seconds)
  done (took 1.687865337 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227368345 seconds)
  done (took 1.666658758 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.709210237 seconds)
  done (took 3.15023149 seconds)
done (took 40.575685239 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076466611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078912006 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078636955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074897468 seconds)
  done (took 1.732371042 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.068287818 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.065000965 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.068532867 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.0640456 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.067829769 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.064508095 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066446261 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.066930701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.064315365 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.06460796 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.064824016 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.064410008 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.06696034 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.065796937 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063327807 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.067215895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.068025413 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.064410387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067163093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.064191988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06225979 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.066945321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.067317823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.063745542 seconds)
  done (took 3.019772447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.071909976 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.066535426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.069107486 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.065800421 seconds)
  done (took 1.722076674 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07031725 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.081434409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.079645796 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.070828321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.082372064 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.077735123 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.060838154 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.060628182 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.061902735 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.070699859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.059635271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.087741428 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.079626984 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.070398878 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.072878296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.057328117 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.05900447 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.078626817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.070985609 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.071150546 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.062142528 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.070560353 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.059994217 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.081322308 seconds)
  done (took 3.141185101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07915342 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.059711996 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087415458 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086386469 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087967918 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.060357272 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073621156 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088752723 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125204273 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.059868305 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.065905218 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.060090113 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100919163 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.059732891 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074463567 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099755774 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.102945743 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.063463898 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093473342 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060064619 seconds)
  done (took 3.042413882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078662067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.063649738 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064119739 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.059384104 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.071680273 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.067039081 seconds)
  done (took 1.861067889 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067566198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.061781239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06513003 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.059790015 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.065772646 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.059945621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062540801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.061592668 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.061618051 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.059982752 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.060152413 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.059898136 seconds)
  done (took 2.197737086 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.180054297 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.063428214 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06423563 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.059475523 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.064657754 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.059491899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076466175 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063150488 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079765783 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061166313 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.060956931 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.062761763 seconds)
  done (took 2.349597555 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172845356 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067320827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200280718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138020426 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091867782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096579112 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110138413 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095816021 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.116622739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092747688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138013192 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152402004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093119632 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108824934 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077300837 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.112253535 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133756228 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128662296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090197365 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138309649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117729234 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105856173 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12952369 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084775159 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096039577 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107547887 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.065593317 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070819392 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147589341 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110665354 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125969729 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095479633 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083335795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14747747 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152207295 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117966665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1349283 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074721733 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112213961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.117225822 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174598732 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076390053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128060568 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088730598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070153484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109775455 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099662854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.100627763 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09216582 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076595882 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115772396 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300569062 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.116940419 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077254642 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108633883 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095866506 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.099347464 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114808233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155844816 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136898707 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108386072 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.063075603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09708254 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133475652 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11942099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.094782729 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.103335268 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082235403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110051912 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132838468 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113380519 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118529631 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.106869178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080258371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104012416 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121364431 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114944151 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147728281 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104599126 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.064731738 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110512983 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088804373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072324115 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.135336992 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06734061 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14478504 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085511892 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114833793 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117281086 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092347722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091795705 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142315992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123492088 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090535977 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079114581 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090085786 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.103180547 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130183531 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077831766 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091627055 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101948367 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072032849 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118743856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.066004632 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100986204 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.087411732 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101054712 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105735446 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.069726272 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102183705 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084496548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.231502777 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111067067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136436969 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079168872 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072206116 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147237344 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107419294 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.094229566 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123018826 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132807069 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.111323354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088094027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13343779 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145518699 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076934636 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139170183 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094178889 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074600346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093466742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108372389 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096342652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105377946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073151113 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107904485 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138803955 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.066074535 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086923228 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110371263 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072688546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071897214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094144438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093231331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.083481991 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088413845 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.094741062 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123660061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104374879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094023513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108455688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088552201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151264931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07966669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.088598934 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090452274 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064470687 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.110203231 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137799903 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069945605 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136404037 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.107675174 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107308427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103584037 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074277656 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120193008 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070159238 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.063713208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124700703 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097203177 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090380411 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128766376 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103385645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.102100872 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100463311 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113436877 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108198383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.111543775 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090399124 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.075795238 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096912692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113448986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.063293892 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.075575299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071591131 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086320684 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081848441 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073734233 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113251463 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099627211 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092441251 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094014262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081795408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120766231 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068932163 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097229564 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.097288072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081255857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.123409147 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125118551 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104554133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082149552 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111947234 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0624599 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.063167043 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.076862552 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101348453 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072155715 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071595255 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094682686 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119720288 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099171789 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112580477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099103748 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091843086 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124161263 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.062075977 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.107386929 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117713181 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099604097 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.085194749 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.076710429 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.076943152 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118207475 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088909395 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142998544 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096354826 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100523331 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125907999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.083644516 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.067395653 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083463453 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105430231 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086536018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11493696 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082029935 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335424751 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099559199 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07252027 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086667722 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111559748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106799169 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122055984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.101490657 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114559464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070968779 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102538929 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106968454 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110605043 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081404681 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104747785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150480588 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08936759 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103542124 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130986996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071146998 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127602734 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154012502 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125534438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076538262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094892601 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10342013 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112130725 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104141079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122491143 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09525165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120272047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095830276 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.077165911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082481653 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084078021 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09042228 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10097035 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093076385 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102153712 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.083311856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110384423 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092047815 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095092345 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106300778 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.090828164 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087933415 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086666886 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151464408 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103316334 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14684551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.085533603 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.125367085 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136784795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066508397 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.069920924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071215783 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120698798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075214455 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113189097 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099271576 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106233956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105796417 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265842507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086231466 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063117685 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098732059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11895088 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104048195 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087537703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.093664175 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133965902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108890334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069744946 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095115887 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107246619 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089692535 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155112133 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.077351227 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095834463 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068551343 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070408732 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110965712 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134020134 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076938643 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.091004303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104320383 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099873565 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112341951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088007101 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098445201 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117443849 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132101743 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107386058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.081427704 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096456932 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114416022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133297592 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094774497 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.08727979 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157781836 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134623397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.137873079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081210688 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102976308 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103010948 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098533758 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121519608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075699542 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137026605 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07282175 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121495479 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091638223 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114889314 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099757414 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078360072 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129077381 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101886422 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073271696 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070827341 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100346404 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103465807 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093284024 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.065659189 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269918772 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.065772295 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118955838 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146332942 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072648908 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093209006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08769343 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073084029 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093651362 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091060131 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079031185 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.090061512 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145226922 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.078509404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129518198 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119565708 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096871483 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123391878 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089616161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.624812853 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074732655 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134376381 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104220407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155280503 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086864705 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106542393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099586955 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108927924 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127938295 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093759342 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.168997268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118057414 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105002907 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070501555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091828964 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092562113 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08041646 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093597699 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102962713 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103667972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.0861109 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104254764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109400612 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.074293032 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087165726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137654631 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103991263 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120910515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12270384 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075576339 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106409766 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121419097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071198053 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.106403916 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135206266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095267029 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09204171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076826108 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091376787 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30176538 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.065500668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141853681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105986096 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099075836 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102093343 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.097052077 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114255743 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094758971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106205747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078512463 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.096071203 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100026262 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075213633 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072697766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092841765 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098909455 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.087570329 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084098225 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.090201821 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132474365 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.063845113 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088124418 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106092912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129725868 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147252813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09758269 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074472535 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108465155 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107106149 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101120662 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107141485 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07412849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073982206 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074000206 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.092948137 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11170839 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101212667 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105126935 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100194905 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138087626 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.075592375 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.216371142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086688179 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094147836 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.081959983 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073547738 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086420052 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086486165 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095607427 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098062668 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1540419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.084932081 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.081867934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081920121 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.06659665 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074258231 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112346455 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097377694 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103201554 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093443436 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078250379 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094554841 seconds)
  done (took 51.910369042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115553492 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080580691 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.091350869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148549416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115758832 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22231695 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150196536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188830212 seconds)
  done (took 2.742381797 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06337077 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.07523979 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099246389 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078348154 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.060948575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063052524 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.207556332 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077559522 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061058335 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.084330195 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072713326 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063449998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43942423 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.060749948 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.061898619 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07227651 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.061861646 seconds)
  done (took 3.275638375 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367785514 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.681021832 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361818694 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070701091 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.500809466 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083511347 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.73053656 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14013209 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076420835 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.613172115 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364106269 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137439221 seconds)
  done (took 19.713728813 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075664879 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06995196 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08466854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084178532 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072308871 seconds)
  done (took 1.973566915 seconds)
done (took 100.144787324 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.075905424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.508419875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064381405 seconds)
  done (took 2.189927882 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085157746 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082992818 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08287813 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081339346 seconds)
  done (took 1.929379801 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.068398149 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.070975941 seconds)
  done (took 1.727807556 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229569964 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169314649 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088359275 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077924483 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075305261 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075388422 seconds)
  done (took 1.821570918 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071887741 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067804732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.066821236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070967347 seconds)
  done (took 1.864984995 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065623549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061739952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064001498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06632651 seconds)
  done (took 1.846407501 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07806105 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078074278 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073050153 seconds)
  done (took 1.818639004 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.086749513 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088556551 seconds)
  done (took 1.764908865 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075459828 seconds)
  done (took 1.665673067 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083972571 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09381798 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129914082 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109712698 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.122171591 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111358272 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077051433 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.081908005 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072457298 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07115738 seconds)
  done (took 2.544047711 seconds)
done (took 21.32019937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072475855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360042902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357772099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081263482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672413618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.351290255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965684792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087056239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106198442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063684338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08029873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646152125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956169231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319280235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94241038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318539855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645760155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.062633425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062839373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063603655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95084688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062558462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063485157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.062415164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645222223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368335191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064695063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317745791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.062676747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070768514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.350641743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06422422 seconds)
  done (took 15.868894165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0645771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115390158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070857368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078429717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069111194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064149563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066419322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063523106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116008012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063814699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081049781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062964351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067049335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064584692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083012948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06313995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.064253183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063058592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063290578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064123766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081301778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062674548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0638295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.062795725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.063726798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076348263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064705869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063223604 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063545476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070669639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.066319492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064820283 seconds)
  done (took 3.852664124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10768758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117925551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071727892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099575098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114226184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065711542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139044215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088562217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11832782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064261073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081282178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063876016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099573192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065406505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0847407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064378791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065388061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063737134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063600937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064747205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082812107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063729206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06477282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063939894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064675758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078954427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065583647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063954369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064000893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071355891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067384003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065640919 seconds)
  done (took 4.124985296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.064515985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.066943811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075446049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076117458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062193173 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064456315 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06573554 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062432505 seconds)
  done (took 2.143517354 seconds)
done (took 27.586381863 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073846388 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063283371 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066474046 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082457613 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069366328 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.074252081 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060655063 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07029271 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067565006 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067603751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069378493 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065590025 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066765262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061381925 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068335217 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.061909849 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076424518 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066482908 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.075085736 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076239451 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064435717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068182768 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070537232 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07526303 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.075191066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.074810968 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071431204 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067343087 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062813368 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065236644 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065890992 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.074172605 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075093606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.075225686 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062053958 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062467776 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0663526 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.062433718 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076420916 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071166294 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063756604 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071442482 seconds)
  done (took 4.484094239 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079882904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084495976 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077981596 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075171021 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.088870948 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079107952 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082527241 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073883532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074434414 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082675327 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070997809 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080243879 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075566514 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072489601 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074348766 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071361284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076247506 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07329411 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074176638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074366324 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082939941 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068951635 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081802097 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075391275 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071112624 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077207806 seconds)
  done (took 3.618545438 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.067751612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080558039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085727845 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131854176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10377107 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075715393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076929692 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086840223 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092119823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063520693 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067839991 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088127635 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088172557 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069209228 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.099591113 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079148497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079083594 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06548594 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069876668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092602472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08417192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08007923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089313563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080189283 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062727596 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0657084 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070471558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080186507 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069877892 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075165509 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067700091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067304911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065193808 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073979521 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067910542 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062549354 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088138762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075287422 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076499154 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.064327235 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067382046 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064665222 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089699094 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123479086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06340319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067338371 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073648878 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075608963 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064632432 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091372117 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075874795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063350885 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063987743 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064502209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064557571 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065370293 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065501088 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073482148 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06705075 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084966203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068705179 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081368189 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063816783 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073703849 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064869329 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065018063 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062883674 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092208289 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069631543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107877102 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064372322 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061703762 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074630695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073312918 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069136545 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063751202 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080493217 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075033508 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067799968 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073307892 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066140201 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066639934 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09363504 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063398191 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062006126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061383704 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066083119 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068621079 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064319658 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.074399406 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062605186 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066272507 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.075143429 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062567931 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063355869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066215604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06531335 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062101104 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073439419 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066637343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063827428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.072661097 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063265638 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065957752 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075672481 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.06942547 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061980134 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064611198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066228498 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063828918 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066386859 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066304462 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064787211 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069134245 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069564833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068388558 seconds)
  done (took 10.175108442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155853253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150108705 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065054935 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.136514505 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070122848 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078188762 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.138723438 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088088841 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.061759297 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064295909 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063063264 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.099895793 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.095889392 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106169555 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075335763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063527535 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086122953 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104013808 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141579073 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.135652372 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086173066 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069893581 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065858345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064745045 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064875486 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071496211 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078557308 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.070793274 seconds)
  done (took 4.204583242 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071403994 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086998016 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067084378 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.073637434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082710334 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063084178 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064789131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064605819 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077812877 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072224163 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063318926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068379821 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066980589 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065789608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.063812862 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069292956 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069898531 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062397865 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066746008 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068064544 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074402607 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088599236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.066682409 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063651989 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065853865 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062952233 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072104444 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075172488 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063382823 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.085444905 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.060772774 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067841779 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.076167427 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063957842 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062381667 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063876 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063157866 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063506233 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064502062 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061603619 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06167765 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067413684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062215584 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071302465 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076424839 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065369537 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065032123 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066067656 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.065732806 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060894282 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065808294 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065695441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066028784 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070543181 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06697213 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065683391 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.063884669 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091179247 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.068285736 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062920763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062388915 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061900818 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065254282 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072954512 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078783198 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065465761 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061668335 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06338265 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075770951 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075862107 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062483234 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.064433856 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060249486 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064476291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065241207 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065199038 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064173069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061291819 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062486312 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063508197 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064148551 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.062331965 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062661598 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065803388 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061108154 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061608196 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063236524 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064556385 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073873017 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062176807 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066754202 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.063951436 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061858931 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066130951 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0689813 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065962076 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076554125 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07402549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06306383 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061316588 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07669145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065656926 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062044149 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070096202 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067691094 seconds)
  done (took 8.714771102 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085745409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065102877 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080021807 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08624655 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07319338 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.06876288 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.070909095 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064013133 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.07652923 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062578365 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071649001 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062019011 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.071694225 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.070565328 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064700322 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07162874 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066354815 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080696889 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07768007 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062055311 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.069790566 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075607454 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075126987 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076969188 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076101716 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077661862 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074832501 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066278152 seconds)
  done (took 3.690216197 seconds)
done (took 36.487732001 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.703919742 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.853933038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.681547965 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.922478486 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.734983627 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.904284169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.883493217 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.676519022 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.881700256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.723196964 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.989817481 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.206891538 seconds)
done (took 64.919833904 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.746319035 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860382243 seconds)
    (2/2) benchmarking "String"...
    done (took 1.972760448 seconds)
  done (took 5.455688403 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.940788739 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.380941516 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.94769999 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.677959183 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.684561939 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.134384815 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.469554519 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.121413662 seconds)
  done (took 30.041917643 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.832135073 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.892112732 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380182627 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.382333622 seconds)
  done (took 15.151340791 seconds)
done (took 62.049246115 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.690405958 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690692333 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.726421505 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.677719508 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.760686937 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.693174514 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.775141533 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.76124354 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.679815987 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.682060913 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.6824112 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.161919615 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.6961559 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.717240525 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.68161627 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.683372734 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.733931458 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.262419697 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.832648525 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.697941972 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.698482875 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.686710467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.6838374 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.848614423 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.705832333 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.680506254 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.104709249 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.682108162 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.291005866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.685992578 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.714270113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.213555192 seconds)
  done (took 200.907229904 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.678359675 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.754494647 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.813729142 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.690790368 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.134140903 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.86880576 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.782221426 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.204028185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.683318108 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.685731467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.868940969 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.68071466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.882688749 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.627962744 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.716559555 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.678159989 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.882267768 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.893614106 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722396703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.830048097 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.705302984 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.747542234 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.698041532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.850023943 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.726601918 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.764823624 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.699777129 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.695334714 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.867572935 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.811163412 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.722105849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.688184886 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869500424 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.545860095 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.684629445 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.682946369 seconds)
  done (took 166.46263191 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.858162174 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.669019384 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.666151605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667212296 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.672717936 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.666845144 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797258347 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789788932 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342589939 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.152934943 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717716796 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.664525845 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.421400563 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.664424736 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731581329 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.675905797 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.663510086 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.663409317 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.677092334 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.663590345 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.689851875 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664621525 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787235334 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.675978506 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67103047 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.663827399 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.672124535 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.051624331 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.661852914 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.664374748 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.674115921 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.665847083 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.671087135 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.90545309 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.665474028 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664249401 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485448643 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.470670969 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747381107 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.666289468 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670337991 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.661595263 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.881314986 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.666047321 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664114219 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.664249129 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.663625523 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.66245706 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77569692 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.665670694 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789949899 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664707084 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141648617 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.663847991 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.661592943 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.042952183 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.24097135 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.661986194 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.664281224 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.663721612 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.659677393 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.66693194 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.66048573 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.992261297 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.729925792 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.663094617 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.661680796 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.666394877 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.66091889 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.893198236 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.661832304 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.689353485 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.673227224 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.780944951 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781948737 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663809628 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727118146 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752986572 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.662178523 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.661722785 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.659726606 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.661712718 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.741128696 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.662472736 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.74345383 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669515003 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.663161034 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712378972 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.729400062 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.660218522 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498685469 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.666222993 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.660206028 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902148191 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724899956 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.667415693 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.659172328 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.739323374 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785007742 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.390309505 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.663255089 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.946557322 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.732417096 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.656648829 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773257569 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.659594573 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736292992 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662465093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.657304481 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.656132747 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690245407 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.657497681 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.667849464 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.656332578 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.029619473 seconds)
  done (took 387.346906777 seconds)
done (took 758.249451482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.256608092 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.215944431 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.309446351 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.230264443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.202904855 seconds)
  done (took 12.814397842 seconds)
done (took 14.413224641 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.728723349 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.735306578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.670599068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.730939242 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.667013259 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.731113243 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.715880662 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.674272478 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.702321143 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.675371505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.703424436 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.673118075 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.658845622 seconds)
  done (took 23.664792697 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.889562438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901134431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.719289668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878719544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.695326341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.887186052 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81154484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796518922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79482214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.665822246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.664368605 seconds)
  done (took 21.303765762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.891614332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.912285087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727031696 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.887884128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.699128265 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.888742884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814142539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.800257661 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.798408798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.664820534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.662945913 seconds)
  done (took 21.345635054 seconds)
done (took 67.911396609 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.653281012 seconds)
  done (took 3.251409631 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.67510743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.828699569 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.654960451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.657142138 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.653537272 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.657600021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.657187259 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.653830602 seconds)
  done (took 15.035642687 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.656910913 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.655614983 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.655265957 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.655915619 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.657700111 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.656795137 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.658315195 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.656741216 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.656630455 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.656659688 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.656714598 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.656328218 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.656306178 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.654891907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.655666858 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.656296859 seconds)
  done (took 28.101228965 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.657374121 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.656652443 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.654789743 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.655183176 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.654490917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.656375449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.655577868 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.657712753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.655297452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.652923045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.655327563 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.655138116 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.655598712 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.655715042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.65588851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.656240728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.654416955 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.656046246 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.66117111 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.655899832 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.655227098 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.655647186 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.65463896 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.656487728 seconds)
  done (took 41.339862905 seconds)
done (took 89.327126965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.421070745 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.552956133 seconds)
  done (took 9.573058315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.662383396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.659792282 seconds)
  done (took 5.005496202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.661158621 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.6597642 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.659755354 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.659541652 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.659878512 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.660052151 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.66022752 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.659929839 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.660318588 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.660076978 seconds)
  done (took 18.202636904 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.659659989 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.660701707 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.661100814 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.662305626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.658598827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.658024335 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.659492891 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.659203856 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.659819877 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.660431914 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.658428991 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.659372185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.661476817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.660721431 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.659375864 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.658973059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.65999889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.660588753 seconds)
  done (took 31.479684055 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.65908977 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.659782352 seconds)
  done (took 4.918967777 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.662020064 seconds)
    (2/7) benchmarking "second"...
    done (took 1.661564607 seconds)
    (3/7) benchmarking "month"...
    done (took 1.658426288 seconds)
    (4/7) benchmarking "year"...
    done (took 1.658844761 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.659209138 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.659618186 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.661222282 seconds)
  done (took 13.221754973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.661451974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.81000552 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.874276312 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.585005329 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.6622882 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.662566833 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.007120396 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.662477577 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.672943718 seconds)
  done (took 19.199544639 seconds)
done (took 103.200037126 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.523265675 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.657113232 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.926242332 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.725941871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.723141859 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.995675472 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.675202745 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.268781441 seconds)
done (took 42.096765592 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.713430229 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.435296584 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.478401967 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.73855077 seconds)
  done (took 15.252880544 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.654883291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.985655257 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.681183284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.54258566 seconds)
  done (took 21.468103324 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.050446076 seconds)
    (2/2) benchmarking "read"...
    done (took 2.006810156 seconds)
  done (took 5.659788684 seconds)
done (took 50.69497826 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.65765451 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.658571311 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.656862254 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.657571786 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.658264925 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.656856994 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.658811243 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.658298156 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.657825301 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.656068019 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.656883166 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.657068737 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.658217299 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657164877 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.657482341 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656796817 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.655300795 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656950231 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.655375224 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655264617 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.658940991 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657062474 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.657361352 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.656380667 seconds)
  done (took 41.373384678 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.659476235 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.658189159 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.657609629 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.657113057 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.658428686 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.656779644 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.657872213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.658844872 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.658136952 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.657302085 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.658118829 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.658065726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.65820331 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.65910612 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656862504 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.657823313 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.658625839 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.660136264 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.658487187 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.659472569 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.65790804 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659278641 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.656908082 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.657430905 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.658767508 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.658761355 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.6586939 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.658909081 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.657770403 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.658184853 seconds)
  done (took 51.349257721 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.660176979 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.658802761 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.659973062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.660596619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.659543434 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.659480895 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.658725533 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.659039128 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.658172664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.659127569 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.659394051 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.660820916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.65969329 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.659453586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.660277632 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.659553746 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.659231247 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.659362529 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.660457045 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.658403725 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.659806863 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.658266616 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.659421153 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.660202318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.66088252 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.660524379 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.660010944 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.65904861 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.660103897 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.658613204 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.660640847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.6600534 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.659682967 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.65968316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.660115937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.660709979 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.661631528 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.659772799 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.660015854 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.660407313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.660680016 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.660801746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.661415577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.660928274 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.661791605 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.66017791 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.662289046 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.661806194 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.661676652 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.661880225 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.660671717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.660470296 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.661823746 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.66178809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.661692114 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.66172446 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.659137786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.660040395 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.659673916 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.662107191 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.661133085 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.66240253 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.661953264 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.661425152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.662618403 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.660680553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.66367605 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.66243567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.663004623 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.66086953 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.663235919 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.662179228 seconds)
  done (took 121.160777105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.661804202 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.663054201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.66326994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.662378234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.661589368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.662815212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.66262757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.662277091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661667524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.661053046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.661998291 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.663354799 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662280876 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.663772226 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662793186 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.662730291 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.663030086 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.663509879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.662433261 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.661700842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.661628411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.663621746 seconds)
  done (took 38.180993056 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.663477469 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.662819887 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.663756308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.661498004 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.663273477 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.663243701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.663086068 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.662904441 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664541193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663163406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661646834 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.663429136 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.665281817 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662838996 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.663659895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.664210584 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.664262462 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.664969815 seconds)
  done (took 31.548227385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.664296401 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.662674791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.66405119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.664667931 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.663656383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.666103765 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.665282416 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.66491148 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.66383634 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.664526414 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.665488532 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666203562 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.666153049 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66449134 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665209533 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.666952056 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.664864481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667722178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.665673968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.665583924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.665391037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.666055294 seconds)
  done (took 38.241783361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.665072141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.66543284 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.665470469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.664896837 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.665448099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.66524603 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.667028776 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.66587072 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.665524299 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.664160406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666806417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.665834987 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.667789347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.665925687 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.66567746 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.665391671 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.665458537 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.666012399 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.664864521 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.664234314 seconds)
  done (took 34.920294691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664185671 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.664707401 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.664333925 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.665550656 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.66303033 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.664864248 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.667476497 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.665755136 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664903936 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.667365994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.665201964 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.66492352 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.663832318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.665918053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665095591 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666864318 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665379505 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.664730011 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.667157733 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.666025566 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.665557294 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.666442936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666953573 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.666241217 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.664497648 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.665922943 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.666377448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.667240485 seconds)
  done (took 48.246270548 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.667079742 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.666077769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.66767089 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.667339623 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.668730009 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.666633227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.667663989 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.668038057 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.668313306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.667922495 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.668109659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.667405032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.667012577 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.667425321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.667790362 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.668276607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.668645158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.668603419 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.668262581 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668210365 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.668652485 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667622825 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.668518205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.667848323 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.668970742 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.669254547 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66891941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.669079924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668870712 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.668092582 seconds)
  done (took 51.651178421 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.689276431 seconds)
    (2/2) benchmarking "in"...
    done (took 1.688464654 seconds)
  done (took 4.988582683 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.669571914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.668487473 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.668296029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.667872609 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.669896417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.669418714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669373066 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669324755 seconds)
  done (took 14.962829696 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.66866824 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.668511202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.670254178 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.669655585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.667862823 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.668475915 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.675579749 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.668952086 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.670733135 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.671135093 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.673793786 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.674341069 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.672370527 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.670297876 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.670017722 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.672246804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.671274066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.668648515 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.668996964 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.670011634 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.669127263 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672079889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.672208933 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.669614135 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.669529332 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.67957118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.673906725 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.669404586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.670457244 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.673928994 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.67054923 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.670790384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.66823011 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.668968918 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.669811248 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.669220087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.677835474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672928497 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.67571121 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.66967362 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.671562204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.670600339 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.671995021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.672043046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672389043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.66861032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.670331278 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.670227098 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.670972018 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.673520011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.676269302 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.672207078 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.670507071 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.675469285 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.672127759 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678769167 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.670039684 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.672730554 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.677181521 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.680243592 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.68197421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.679233668 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.671315099 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.671406637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.679656749 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.692093556 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.678781039 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.672993181 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.671306209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.672690605 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.679643015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.683523056 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.680470972 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.670999613 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.669897025 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.672175534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.672693709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67324604 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.679856693 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.677134511 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.671065756 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670960156 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.680574095 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692039704 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.672686919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.671259399 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.669830176 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.672347271 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.672074831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.682725446 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.672555572 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.674935026 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.672986509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.674586264 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.674220184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.672860827 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.672077629 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.675047662 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.674154158 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.675159433 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.671756181 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.676406813 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.68025825 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.672781276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.671878883 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.680362632 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.675388087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.674847218 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.679303929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.674020605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.671996475 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.67459111 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.680055317 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.675385556 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.676990409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.680923366 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.673356538 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.67614981 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.672710165 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.674402615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.681425628 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.697463873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.676061669 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.676377259 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.676860733 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.684312525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.673452148 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.678453907 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.675622657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.67601042 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.675144682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.676376728 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.67334096 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.677092441 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.674332374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677635187 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.676755113 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.676013619 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.673400025 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.677646286 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.676940056 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.677933144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.677689912 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.680197256 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.674184805 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.677436405 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.681553783 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.676957867 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.677358959 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.677210312 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.676369527 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.676522039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.677105417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.676607234 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.675828685 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.674100463 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.674834561 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.675693124 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.676618194 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.678235371 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.676907828 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.676555164 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.680920753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.675183252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.681031383 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.679813206 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.678941339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.677029181 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.67800658 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.677117423 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.678748435 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.676820832 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.678893607 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.680139415 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.675179238 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.675645145 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.6776812 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.676093293 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.675114268 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.675042872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.680424777 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.684378045 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.676690675 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.685024946 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.677838477 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.677684752 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.678012828 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.676052125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.677546475 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.679309357 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.68077374 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.684473482 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.68931637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684426841 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.678936123 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.682169974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.679091702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.681641239 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.683333099 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.67672014 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.677909138 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.677758576 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.678824071 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.67707731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.680612755 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.677703763 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.678205658 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.679132277 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.677953767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.678001806 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.680513389 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.678752804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.680620803 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.681278839 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.680575592 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.677409465 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.679805268 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.678333073 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.679491926 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.679222475 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.678915499 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.678984203 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.685152641 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.67992705 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681636247 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.681788697 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.680189216 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.677973459 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.680963332 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.682070898 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.680245755 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.686293508 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.68042357 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.680928556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.68714825 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.680946125 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.680429629 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.682912677 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.680517235 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.681881239 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.68566149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.688579688 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.682106857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.680875209 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.681066447 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681850732 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.680993024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.684961856 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.68053864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.68005632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.681951643 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.682019178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.681929156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.681811482 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.682042256 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.682161214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.683866824 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.681744108 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.683377233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.683035787 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.680336569 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.680014575 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.680742497 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.684078426 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.686352989 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.68784484 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.682056357 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.682472227 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.6819909 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.684085352 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.683213861 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.678877021 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.681806123 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.693090302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.687958182 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.686791129 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.68341746 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.681637914 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.68748003 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.683084811 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.685081586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.682388787 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.68334529 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.683240546 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.682310857 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.683981826 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683433569 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.684273935 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.685038264 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.683396159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.685945583 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.682566304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.681524603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.679350681 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.681291502 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.683502165 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.683380478 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.683946069 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.685381356 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.684746571 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.682458095 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.682934457 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.689692209 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.684241603 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.683536538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.684209594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.685227687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.683031698 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.68439196 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.681342125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.684615269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.689451652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.686481264 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.692939527 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.685985188 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.692183689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.683922247 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.686842964 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.689868524 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.684842753 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.683742857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.684901209 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.683295144 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.690391162 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.68294743 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.683930275 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.686666174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.682694451 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.682154672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.685513506 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.682979455 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.684877399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.682643365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.692531353 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.68579614 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.688490077 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.686936428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.68610505 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.684255053 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.685072689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.68421544 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.687724709 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.682353081 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.686286582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.684051133 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.685981441 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.685823663 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.684880004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.686402759 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.68551716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.686316783 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.692176955 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.685607774 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.688195454 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.686451767 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.693947892 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.684417389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.69350242 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.685368207 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.687244718 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.683911182 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.687491734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.687822486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.686130465 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.688152178 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.684867083 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.68789258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.690399351 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.685865158 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.688653666 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.688118452 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.685775056 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.687138792 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696132683 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.705139994 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.68905185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.690022242 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.685517852 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.687052074 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.690682442 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.687193371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.685462708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.689628002 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.697199967 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.695271658 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.68795483 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.686962871 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.688593 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.685790929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.687627725 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.68882704 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.685868241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.689238284 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.687495575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.686020916 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.690333839 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.689691049 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.689864425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.690302571 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.688466571 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.699230519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.685755486 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.688776922 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.687009827 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.689915293 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.688667012 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.688971593 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.686399872 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690296813 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688375074 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.687528353 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.692976944 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.694168772 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.691287059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.690058406 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.68650791 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.690474033 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.688675682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.687175268 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.687489387 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.688419602 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.690521464 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.687998269 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.691033769 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.688541542 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.689891725 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.689774272 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688824131 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.691916397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.695095039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.689127873 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.690240148 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.690735845 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.690212453 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.689706759 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.691292285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.696875628 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.692542527 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.699259729 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.697591037 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.691404854 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.69020938 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.694629697 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.698378339 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.691196974 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.690643894 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.687546007 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.691764435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.690520598 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.692826046 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.687523558 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.697595219 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.691832903 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.689324543 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.697990495 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.694356344 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.690116372 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.691257708 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.695094129 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.690324601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.691142452 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.692622441 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.69151077 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.696238642 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.692368808 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689800624 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.691096747 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.690625715 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.691201368 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692785921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691928698 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.693409915 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.691742814 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.692822608 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.688742839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.691417268 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.692024744 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.691406629 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.691485101 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.693621448 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.697503849 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.692106931 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.694715334 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.692850903 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.693749715 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.69056103 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.693477698 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.692711043 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.693559262 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.692424616 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.691478814 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.692570965 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.693390763 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.692929844 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.693342628 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.696021728 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.690653171 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694998884 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.70122656 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.699688752 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.692067759 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.691332805 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.692726974 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.695957747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.691388507 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.692257378 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.695250961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.695074039 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.692744642 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69292857 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.694805878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.695089038 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.70933235 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.69453648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.69407118 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.693139713 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.698429588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.693634163 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.693539684 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.692657534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.695508122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.695795127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.698216674 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.693449387 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.700905292 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694710277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.694970682 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.697387656 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.696530825 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.700600467 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.696875426 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.693801428 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.691781074 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.697452042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.708859392 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694820739 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.701652387 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721419443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.696729374 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.695212267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.693032591 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.694970012 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.692380219 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.696679616 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.693965073 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.696744948 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.696284257 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.69369958 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.695846185 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.699842658 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.698218039 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.696029142 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.696403028 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.696494837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.696593575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.695977446 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.694566019 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.696195504 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.693877955 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.693217193 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.694475701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.696320506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.70816286 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.704845882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.695249833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.695686594 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.696722415 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.700131762 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.696897412 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703468816 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.703014265 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.693536606 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.696107265 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.696673095 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.694930786 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.69716119 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.697805453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.697079136 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.696171811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.698525638 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.708023293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70209413 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.701596407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.697353261 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695950349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.697192619 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700117179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695876934 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695425899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.698594606 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.698106317 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.698962279 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.697285294 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.697620797 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.701602917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.70479862 seconds)
  done (took 1005.75534023 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69771424 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697939962 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698356755 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.698448001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698389278 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699411256 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699048599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.699061274 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.697884665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698857109 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.698829426 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699666082 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699754613 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.69964627 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697069807 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699873235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700543947 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699315433 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698473903 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698263209 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.696964608 seconds)
  done (took 37.311755507 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.699175076 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.699138733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698429734 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.698012258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698393894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.699194836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.698594667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699689075 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.699056101 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698750468 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.698931244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700542815 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.699866249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.699364025 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699876307 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699800861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.698860523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700634259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.699671715 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.701382636 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700170331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.698983645 seconds)
  done (took 39.025077109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.698317793 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.699236082 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.70035769 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.700025583 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.700188481 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.700141223 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.699565437 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.700539558 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.701386336 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.700737943 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.700276905 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.700139723 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.705315241 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.706724278 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.701975247 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.699214659 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.848960505 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.698811421 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.699702529 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.698752554 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.701650494 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.707231783 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.700878436 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.699992314 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.700452957 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.69920908 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.702869746 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.702203991 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.700329083 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.702961083 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.702991065 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.700705155 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.701164611 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.702882519 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.701550427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.701368097 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.705467948 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.701197359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.700981297 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.70225207 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.709879789 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.721376502 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.700844392 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.707540806 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.70148957 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.702434752 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.70390104 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.707835681 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.702134991 seconds)
  done (took 85.197528792 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.70230616 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.702914466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.702511305 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703110201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.703038418 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.736043857 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.702609103 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702729417 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.702775184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.702549411 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.702205912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.70355097 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.702871605 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.704043521 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.703544646 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.703613204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.702011731 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.70407976 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.703372021 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.703422566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.702739867 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.703591706 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.702848422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.703548624 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.703183845 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.702374726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.703203932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.703399811 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.703190056 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.704345876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.703274813 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.70525897 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.703567913 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.70583095 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.704333346 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.703721641 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.705279503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.704657263 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703026084 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.704283479 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.704419403 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.705618243 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.703541486 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.705243453 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.704283118 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.703923058 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.704879144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.70433776 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.702957456 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.705100559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.704995878 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.705381844 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.704818989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.704945892 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.70517364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.705497036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.703926112 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.705169339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.705491581 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.706220623 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.704364403 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.705504547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.705864192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.704236596 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.705957729 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.706288491 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.705767274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.705591182 seconds)
  done (took 117.553892667 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.703266659 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.703484732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704145293 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703709086 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.70458164 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.703143353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.706143691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.704573867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.704520508 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.703784359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704950491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.706295033 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.704887883 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.707569965 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.703130211 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.705827839 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.704469803 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.705654828 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.704539253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703271558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.70599189 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.704986675 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.707194798 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.705080158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.705764615 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.704633221 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.704945103 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.706613645 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705388606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.705881172 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.706462898 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.705656988 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.704362382 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.705009389 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.706119982 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.706082049 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705858408 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7063172 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.706222161 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.706142277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.705996425 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.705661004 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.706472966 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.704425314 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.706792954 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.706367021 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.70639702 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.705660763 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.707071794 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.706454302 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.705976328 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705107491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706367756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.705854737 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.706673979 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.709127614 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706622769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706671905 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706287411 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.707434826 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706776344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.708306853 seconds)
  done (took 107.396721067 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708149059 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.708845232 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.706869951 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.709538163 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.709033726 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707480959 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.708810831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.70769498 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709792483 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.708460913 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709358145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709533788 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709434095 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709425121 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710794848 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710163924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710277686 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708089442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709869937 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710058094 seconds)
  done (took 35.830548904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.708546713 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710126061 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.70954517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710114779 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.708003271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.710389188 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.710702791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710633308 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709121967 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708864185 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.710516223 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711184107 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710300656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709940149 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.709572988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.709220424 seconds)
  done (took 29.007768888 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.711166692 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.710287657 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.707844172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.70799457 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.709798433 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.710247491 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.710299826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.712626043 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.711197077 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.711649457 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.709809527 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.709235698 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.711351831 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.70843987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.711140275 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.709901022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.71095767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.711830528 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.711076452 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.708059362 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.711248361 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.71180437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.711732364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.71325569 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.711456484 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.710844795 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.710185115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.711945074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.710768658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.713081655 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.711401028 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.712443236 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.712110112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.710160101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.709727259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.712811289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.712268252 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.711657604 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.7120882 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.712884248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.712490131 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.711256806 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.712947373 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.71154397 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.712956302 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.713218335 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.71312464 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.713939157 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.711551113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.712724455 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.713819357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.711229224 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.713319785 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.713451695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.71121824 seconds)
  done (took 95.780850124 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714192886 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.713541298 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.713995201 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.712806865 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.712169376 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.711003541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.71297526 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.71214959 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713541179 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.713025366 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712952313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.712634298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713211564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712788554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713223191 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713600076 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.713495712 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.712702978 seconds)
  done (took 32.488074501 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714167124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715133027 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.7138204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712848266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.714981622 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.713550432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714565362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.714592167 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713210389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712190345 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714574448 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.714378105 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714337871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.713865222 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713590006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713095186 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.714285078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714199266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715726555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714412715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713808369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715560026 seconds)
  done (took 39.364935724 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.71285718 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.713691901 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.727278782 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.729723677 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.732518604 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.743281359 seconds)
  done (took 12.014007356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714548013 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715131208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716169788 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715895972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715270255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71669093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716994774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715801772 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715785815 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716356008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716489502 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717294572 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714327547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715998088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715969237 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71670314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716778455 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716185507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715968298 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717249274 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717018218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717562617 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717005268 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717840446 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718032173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717502247 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717267287 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717855021 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717216597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718499008 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717029687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716730422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717242827 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717420979 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716396628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716567856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717619049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717979353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717422488 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718128538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717382342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717519539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71671616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715591304 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7187806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716478706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718721175 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716921217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718371856 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718382839 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717080443 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717293548 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717607411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718383886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719377514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718777563 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720124554 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719531251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717734875 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720091188 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719626857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719369248 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718201999 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719284766 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718474382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719709211 seconds)
  done (took 115.003641083 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717848848 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718512173 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718559659 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718080821 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716860474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718548772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719412642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717963115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719117633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719775131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719427916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719640858 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719130856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718897568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719805689 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717726579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719258262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719128756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718703592 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718669222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718440134 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719849388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718257571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71934325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71918726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719520291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720960049 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71863447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71930185 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719218127 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718563391 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720507479 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719321741 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.719178629 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720474261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721639263 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719433753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721168089 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719664683 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719048181 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72022895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719968657 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72058671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7220262 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720963646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720407545 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721068717 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720900469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720578225 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722953784 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720877181 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721957521 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720355609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722677141 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721900113 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722236203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720730876 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722177779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721556752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721422787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722607189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721500258 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720843996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721162704 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72205039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720438801 seconds)
  done (took 115.180737073 seconds)
done (took 2345.137894593 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.743127776 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.832892917 seconds)
  done (took 15.237318052 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.883180391 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.835810194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.720959633 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.731965098 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.721672669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.720591091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.723039314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.722240631 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.721512739 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.721705187 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.723044227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.909283811 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.730942334 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.72239119 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.723855257 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.813862882 seconds)
  done (took 49.792692044 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.7284563 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.729345148 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.739931742 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.730890437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.729321548 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.743368945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.757800474 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.732941733 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.763845998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.740095747 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.794484035 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.734020647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.725977039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.778659215 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.739827042 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.741086771 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.820844301 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.80224661 seconds)
  done (took 33.197094641 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.802245961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.743454609 seconds)
  done (took 10.216125211 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.730187297 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.773252388 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.797742623 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.723525024 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.734451011 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.731858805 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.755891933 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.746414615 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.739494696 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.75937075 seconds)
  done (took 69.158110885 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.733947977 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.731552894 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.730857282 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.726995743 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.724550468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.7279728 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.727247562 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.723160464 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.386283721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.764505807 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.737914352 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.733631803 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.726983953 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.727675988 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.72828206 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.751198921 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.837662265 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.72738335 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.728358926 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.733285399 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.72818258 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.802106512 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.740714328 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.730791965 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.758312198 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.38129652 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.739186064 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.734824745 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.837853709 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.728316956 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.726932171 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.938730186 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.73250898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.1900599 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.009775839 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.73394884 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.742757358 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.734826685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.728638271 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.86282387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.729169775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.733776744 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.686628193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.986651265 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.830601055 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.775682153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.027223127 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.74439708 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.72950577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.760881446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.730432313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.729808293 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.746194739 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.248343272 seconds)
  done (took 125.119512694 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.729043017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.074428372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893389713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.728169291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009839023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932112411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.728080388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.773669242 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.730263735 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955336795 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978533069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830744343 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729920875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.727917304 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.727808398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.728017344 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.880751483 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.795964525 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.730559477 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.728417128 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754867374 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966650978 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.84790174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.728963627 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.754276969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936580187 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.846850938 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.827931403 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.524771603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.729150203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789740329 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.730862898 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.72962866 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.728783963 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.882750554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.819730781 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810578829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.729881522 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.728985625 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.729432478 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.384402654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926045358 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822152184 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.856899763 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97939773 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932131927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.506577875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.728518939 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.461887967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.892943168 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.95521678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955236483 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.846120986 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.731424716 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.071857792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.728910238 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729865663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976641735 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94870965 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.824928768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.732620961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.731067636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729765408 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.96623041 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.732242778 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.823861908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.732075659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.731964465 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824758245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826634513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.959110758 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941636916 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759836123 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.066191457 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.228926877 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973062914 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793689782 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978101201 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.73132512 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730672685 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806751253 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572457554 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.981396409 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970043788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973425615 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764250038 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.444452956 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.731273325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.954894113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948956932 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.987978152 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97479686 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.96352737 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.053970321 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.729990751 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.731155626 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.958664059 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.855069894 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.733219092 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.072937413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959703254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.270588298 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.757955493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0351427 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860894881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.734015616 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.358199306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.734075322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960834298 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.77021464 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.733189235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732937846 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949385327 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.718713998 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733608428 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.385996233 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791833583 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.735032093 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961762228 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.735828504 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000044956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733672969 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962228098 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.166412257 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761999153 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.905212357 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.978729968 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.735324508 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.971114249 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974069704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.845103005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.95106855 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.441091955 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.735121106 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018158152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.73499465 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.732123041 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.901690652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.734804178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.874356167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.736256503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.024230707 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752780828 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963032567 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73782519 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986603559 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.765075721 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.782846697 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736613053 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863316775 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.735564452 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.555921599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890365091 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735854903 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.73371106 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.280244442 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.735926824 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.887010181 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.959209721 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752740085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805565003 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.395313666 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.734373881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814859406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.755734611 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.122622437 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.736291931 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.985073828 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.738526477 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.735170108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.734539529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.968470478 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.916916538 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737620015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.736001217 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.637500582 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.734844903 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.735918016 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.915002177 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.118501315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.735723724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934686419 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.739451506 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.861038374 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.737967342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.813760677 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067652079 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.735240403 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.736011055 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.737256168 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.736598084 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.737485514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943097762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.759527505 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.241368319 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.871899366 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005609163 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.043521766 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974277494 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.777390791 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.739552917 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.992796601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.738266313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.798938588 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.738177636 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754074775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959488886 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.740193118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943596939 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003224136 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.579062871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.783410393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.739136377 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736059674 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.736636836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.87970016 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81683464 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.737812225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.737741042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849862023 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854860906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944627597 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.737881197 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.816818724 seconds)
  done (took 871.453888661 seconds)
done (took 1175.838251603 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.738367799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.744019908 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.742470141 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.741352675 seconds)
  done (took 28.645763181 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.741510953 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.737996832 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.742220287 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.739018426 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.740255965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.73977728 seconds)
  done (took 12.121099708 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.750769739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.741410435 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.739287791 seconds)
  done (took 20.911595005 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.81108206 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.119120558 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.872835201 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.155457443 seconds)
  done (took 9.638480121 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.740961769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.741125219 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.740182529 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.739572124 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.74157591 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.740345809 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.743055797 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.741633375 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.741208668 seconds)
  done (took 17.350950339 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.883942309 seconds)
done (took 94.231043941 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.889902862 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.688794521 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.642729211 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.811391643 seconds)
    (5/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.06956731 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.745609901 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.96080186 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.995289133 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.980009885 seconds)
    (10/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.743368495 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.082473247 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.745236871 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.479691332 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.761743869 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.751962489 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.752515323 seconds)
    (17/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.126127537 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.933846503 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.746704044 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.200507307 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.776587867 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.742424257 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.909229666 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.409278948 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.752848347 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.132352358 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.835380396 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.74405693 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.636577231 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.863867078 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.746111359 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.13473696 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.710479541 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.837327903 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.115426998 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.416579411 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.938247388 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.871504268 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.914056412 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.868983434 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.974915459 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.851570135 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.820440506 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.0340548 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.746611327 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.843375413 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.0768511 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.962886032 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.843123508 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 5.463096046 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.807152527 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.912266003 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.958927973 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.76512097 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131636618 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.923612208 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.060529758 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.089680284 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.378612726 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.490797832 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.746350468 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.104914114 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.841028625 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.884770499 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.894367739 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.763776655 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.841531136 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.006251641 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.747765899 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.745104253 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.134845026 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.056046359 seconds)
    (73/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.77493372 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.833934845 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.769065611 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.879548704 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.510068397 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.897351677 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.708150409 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.064627168 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.079754627 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.748173452 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.834709685 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.827561867 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.021869826 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.628346907 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.76762473 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.09110494 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.234259776 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.751712296 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.379869295 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.01643278 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.859168959 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.836150326 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.773952117 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846601615 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.061853628 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.745449358 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.870390654 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.751459692 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.976687176 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.830474415 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.053085633 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.751680159 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.214154692 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.156465217 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.061543464 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.751665565 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.844644559 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.553960881 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.766105167 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.933640675 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.917964761 seconds)
    (114/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.080525288 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.97248848 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.765100329 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.891693637 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.931322908 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.193680844 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.981327078 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.537977268 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.78913197 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.944132319 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.983752443 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.776196414 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.951532687 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.839009767 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.749771994 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.093854425 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.761282098 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.923627954 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.779494355 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.817871276 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.756132381 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556208977 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.986890601 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.772652099 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.786750811 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.881910633 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.8733257 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.458617781 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.023988221 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.021810704 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.232951189 seconds)
    (145/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.918814996 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.069146039 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.150252525 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.862885566 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.763432244 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.762610226 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.775699529 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.952102848 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.02674947 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.388084255 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.783647962 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.776550831 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.854649204 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.780730917 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.758164934 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.760995766 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.762939959 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.960946863 seconds)
    (163/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.807759556 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.068401872 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.784118411 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.288886333 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.83603255 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.205367359 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.845213404 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.948826425 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.848293369 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.761762113 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.942210568 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.705715063 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.218273413 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.146900908 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.759289073 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099634384 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.763236225 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.94097605 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.091256371 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.989598681 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.762515311 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.785576466 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.896359911 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.757938875 seconds)
    (187/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.968167674 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.844697964 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.125181763 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.970517637 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.986815442 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.893952443 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.761511905 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.467973134 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.03832433 seconds)
    (196/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.958819035 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.87103588 seconds)
    (198/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.061554417 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.768367892 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.843711104 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.874169625 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.919172114 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.88898239 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.001187601 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.872246541 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.108716293 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.782742818 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.245480692 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.169069782 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.765679947 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.910598535 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.974075792 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.763375719 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.967945791 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.099921385 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.781614019 seconds)
    (217/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.763181884 seconds)
    (218/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.161982201 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.995170892 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.83360943 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.783778823 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.763977132 seconds)
    (223/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.767311052 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.93167784 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.145316411 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.791984257 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087826574 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.174916197 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.857350256 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.918218669 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.555854375 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.87594724 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.925696441 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999701802 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.380511473 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.002799242 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.862555761 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.051427544 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.089296166 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.168837584 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.276727385 seconds)
    (242/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.97099282 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.446777889 seconds)
    (244/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.494646821 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.763359679 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.859073512 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.444295848 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.85214499 seconds)
    (249/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.905882484 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.769941451 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.774005606 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.837896659 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.762584213 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.91026485 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.78355256 seconds)
    (256/309) benchmarking ("sort", Int8, false)...
    done (took 4.654547055 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.766335912 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.986526337 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.893290721 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.957932575 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.769783163 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.614226546 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.018409112 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.909398807 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.022595174 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.867942028 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.814679097 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.316908528 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.774458945 seconds)
    (270/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.86460152 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.897249105 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.526238487 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.924412825 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.902953107 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.674019082 seconds)
    (276/309) benchmarking ("sort", BigInt, false)...
    done (took 6.766261543 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.230980829 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.900784024 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.865237325 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.084859666 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.755784525 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.088406151 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.77856721 seconds)
    (284/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.879829848 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.900796136 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.97057476 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.768782842 seconds)
    (288/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.116862396 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.152135602 seconds)
    (290/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.669761821 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.889299082 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.018624591 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.009479058 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.833600212 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.946614173 seconds)
    (296/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.130962542 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.412161435 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.932740827 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.231468856 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.771817852 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.929481645 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.807480265 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.996410039 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848807511 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.896557676 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.173958152 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.984205618 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.769982501 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153846187 seconds)
  done (took 972.179753789 seconds)
done (took 973.924724316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.793735819 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786674764 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.766930486 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.790009047 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.881412518 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.818960931 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.782667726 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.772991829 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.819526925 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.819384845 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.767594025 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.815967187 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.769831747 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.769910715 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.770220835 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.785265252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.081963275 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.801456506 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.788852917 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.78285877 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.78867041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.768783251 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.819087505 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.817682178 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.773778986 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.775664544 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.773790268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.789775049 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.883199937 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.77342708 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.7762428 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.783048074 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.082208946 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.800856182 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.768329707 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.791289269 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.784740603 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.783175689 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.774552247 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.803381203 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.170102643 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.813342356 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.772110087 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.771148655 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.770169542 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.779042773 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.771656594 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.779688547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788161966 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788679705 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.164231376 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830861779 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.774448949 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.772022101 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.785669731 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.771499523 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.775570418 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788953049 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.791742844 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789798873 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.066472673 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.809364479 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.774957809 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.789045881 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781826905 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.201313931 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811979509 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.780093942 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.171224708 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823377113 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.201054262 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.824616324 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.774660604 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.788436525 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.805309072 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.084560471 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.801866399 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.772125742 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.782120405 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.771823802 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.786318046 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787635203 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777633806 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.774756141 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789783431 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.824270486 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.785811722 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.775538513 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.785427582 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.792994707 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.784100696 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.785955569 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.776130602 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.772610686 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.78541863 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.776680785 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.777700481 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.777031181 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.778869191 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.787374678 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.170802039 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834417746 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.771311864 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.771124577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.773275833 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.78907018 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.171316619 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.817113422 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.798213003 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.825211541 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.775568265 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.069989324 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.809030307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791369309 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.786165668 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.777304479 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.7724115 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.069965587 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.200666361 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.83045845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.773907219 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.772889186 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792787378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.778156048 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.771980121 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.086237611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.81027103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791780871 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.898831668 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.789635772 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.808457722 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.774151984 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.779692053 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.827739058 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793213102 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.809318443 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.779238304 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792700616 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.792935242 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.773645302 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787669983 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.78889471 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.77576685 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.784672648 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.774202496 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.828808549 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791978424 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791695351 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.797526366 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.899862901 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.773382281 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.070011986 seconds)
done (took 279.407601249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.852798761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.771650075 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.935503436 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.77645316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.868603387 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.848676362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.775849122 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.776408786 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.776127709 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261920325 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.776342918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.783486223 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.773092066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.776975307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.849483921 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.776760541 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.777701812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213820116 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.775522651 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.858536361 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775292848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.77771084 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.776298162 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.277998921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.775768017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.773961238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.855418335 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.777269077 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217429207 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.774475849 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.777514278 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.221402818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.854480065 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.804096726 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.784729878 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.785541855 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.863117024 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.785766994 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.841879852 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.846899811 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.922918208 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.808021404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.774405119 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.774922399 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.782163133 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.776900172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.77780838 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.810851833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.779604125 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.783451364 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212085169 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.786968311 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783049253 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.779986538 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.778269892 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.804015866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.77784004 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.778684719 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.860415169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.778857495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.845602897 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.266037128 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268178686 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.780362878 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.777114903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.778959505 seconds)
  done (took 179.114547655 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.843918533 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.851739558 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.84334216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.78487816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.828836677 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.844971895 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.786287127 seconds)
  done (took 14.49966734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785521794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.779597332 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83640439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.836217321 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.777667173 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.935658933 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.780230682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.790058019 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.784592308 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.805400281 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.779756652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.779544882 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.78711694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.777519548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.839162584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.790016845 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894160649 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.780776392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.779406466 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.926758592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785619234 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.787086313 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.804836485 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.790671629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780116122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.785877078 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.359189729 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.779407928 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.781167797 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.78090385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781782927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.821004964 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.782422588 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.777370966 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782211562 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895554997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.780147868 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78181433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780764003 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.77826777 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.782519246 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.780953249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.781815149 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.781548421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.780697025 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.803208403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.78199701 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.782133217 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.78124661 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781089145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.805850052 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.782726428 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.782696167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.787614171 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.822750399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.789040407 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.782416981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.782211157 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.782448148 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781392775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.929491303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.83802578 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.782016424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83938602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782456255 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.782856424 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.781971926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.782183135 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870012932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781222689 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840611825 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.78161353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.941670926 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.804341281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.783144401 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.784397823 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.784972442 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.779863157 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.781323663 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789701959 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.784235892 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.784864575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.789366655 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788866346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784353885 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895271131 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922132707 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.784937025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783710813 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.789940651 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.783556813 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.825108273 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.784571467 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.784345081 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.845607239 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898184852 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.810447386 seconds)
  done (took 197.177871081 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.791414203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.789172476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.78479716 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.798343971 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.783411708 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783179701 seconds)
  done (took 12.449726876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.786448086 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.78751924 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.784334651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.784003908 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.783141915 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.782507198 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.787701821 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.783681857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.786759943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.784190927 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.782194336 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.785437428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.783896583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.783171719 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.783858549 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.785655628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.785842255 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78613095 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.785272911 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783643223 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033877738 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784007834 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784695197 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.788199113 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.787700652 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.785003193 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.796916424 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.785812956 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.787000128 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.793401983 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.78837482 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.784672498 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.788247367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.792927257 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.790882681 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.787380322 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.790030569 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785681859 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78715732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.786938901 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.786633581 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784400093 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.785737927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.785117208 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.787904787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.792019446 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.789702261 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.799130909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.786658883 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.785400006 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.786658132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.786298047 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.784667082 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.784543936 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.789113246 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791332811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.791747499 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.788408208 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.786910517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.78915553 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.791350429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.786137571 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788196324 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.79235884 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.793972967 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.787561355 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788990674 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.792267998 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785971026 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.78602296 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.78741029 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.78815072 seconds)
  done (took 131.658973378 seconds)
done (took 536.633280872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.867344887 seconds)
  done (took 8.59109227 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.987439305 seconds)
  done (took 8.733705879 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.304749007 seconds)
  done (took 10.028977396 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.810946851 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.85418407 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.790559805 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.793950727 seconds)
  done (took 28.999784981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.006040464 seconds)
  done (took 8.729755448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.812544374 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.787983481 seconds)
  done (took 15.387630154 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.83587113 seconds)
  done (took 8.562787112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.233447446 seconds)
  done (took 8.968869084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.812043363 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.78958314 seconds)
  done (took 15.35128132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.791946578 seconds)
  done (took 8.518805362 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.014306534 seconds)
  done (took 9.834922891 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.81460428 seconds)
  done (took 8.611443561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.872918083 seconds)
  done (took 8.603311988 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.842954951 seconds)
  done (took 8.573633677 seconds)
done (took 159.222820804 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.786557417 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.787562386 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.78801617 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.790501681 seconds)
  done (took 28.879216905 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.822377956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.822755759 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.822863964 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.832891681 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.825661542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.822419578 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.814333888 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.814674435 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.833385289 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.825472561 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.82389757 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.825276005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.822576473 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.815487021 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.825905307 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.824110549 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.834211065 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.825038111 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.815103841 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.825512886 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.79050388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.835030415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.827418518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.792297456 seconds)
  done (took 45.444821807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.980674738 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.860215624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.944062351 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.841025491 seconds)
  done (took 9.352214921 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.84150779 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.843820837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.854351219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.892937866 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.918336592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.85369577 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.815519773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.810595936 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.797716219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.844300756 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.919658733 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.837863994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.930594108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.791772273 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.97793304 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.791829816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.790720629 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.842953993 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.894458554 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.910910326 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.791758701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.841925479 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.847370439 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.83977977 seconds)
  done (took 46.20969317 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.793423341 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.801031918 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.797640902 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.793595502 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.793497858 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.793225854 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.798339254 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.793991188 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.815507246 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.794784513 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.792981024 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.794067814 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.799835603 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.793721078 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.794010318 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.805951578 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.806635819 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.794141635 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.797710279 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.801588822 seconds)
  done (took 37.683226902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.790342351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.636667662 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135861473 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.04248971 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.787878361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.794226817 seconds)
  done (took 30.92141576 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.805280445 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.798153305 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.791267868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.849350919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.935977087 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.80003771 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.791428585 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.801930141 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839857627 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.859687674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.810606654 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.821250442 seconds)
  done (took 23.639714366 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.793743048 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.790808762 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.793422435 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.804360423 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.80204342 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.80232269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.799225738 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.789567043 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.805451962 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.813126538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.802404372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.803782514 seconds)
  done (took 43.339657587 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871395897 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66847997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249188532 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256567515 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31902891 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997233513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.791489354 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894578329 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.795728579 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065279055 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.142870445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977249437 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035529509 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45651772 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889712354 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.266668312 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07817084 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005961024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819351102 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401213242 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893228429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260860269 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.513956666 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89576466 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997333627 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.829708468 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.052231158 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.741914504 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849790281 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798418731 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800355772 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794647064 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066108881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920807906 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869609553 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79802215 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.221226366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.503369789 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.805193122 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.457630026 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.268545375 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.89499882 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798312548 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795508706 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722904398 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227996825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988188897 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.798287172 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.495079689 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795423545 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801802837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869377474 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.797592955 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.604229508 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485651298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.066102967 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.797315931 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799646571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346507115 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799030305 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356784031 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832670507 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.882574199 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402920278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240964437 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.94836515 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.797586049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799107138 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724321082 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.455034891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901854474 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933723888 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.813666558 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437966442 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086051566 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.186965102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829314694 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069578736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57522954 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832675657 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014091312 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747912292 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724720492 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.646351125 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725190707 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014320072 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828743293 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.417634929 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829571796 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879197021 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80522469 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814920257 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799817078 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01327438 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.693652097 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799681147 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.046614127 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031601339 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815912651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.883776573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725930906 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.800193246 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043086059 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.002028121 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.95580314 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375060103 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882057508 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.732882637 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.918591636 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.492861288 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910443093 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.063262478 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854782098 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774305868 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90908697 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.755368794 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040972913 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765691811 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.005121057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.131740562 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018046303 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.131685719 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043092315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862843968 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804917607 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.801622279 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.463674827 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.70048395 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.015933737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.811818378 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.208050085 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912420365 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.799904519 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736562981 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.432328371 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110260954 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.858195471 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013492808 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751324206 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181069591 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728503493 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938442528 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.801096694 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.013780272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.441697745 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.8771287 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049187666 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963978881 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.074560159 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913868166 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816172978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877826985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81873519 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.159278631 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151583719 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.803547724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.801845617 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461243186 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848200174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810531987 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.803816587 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3343305 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064705017 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821924834 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.800817459 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67648122 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.812046772 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862159783 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802586243 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803229097 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317265469 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309327678 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.806343427 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.465347172 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015579562 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802257463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.449028479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970097381 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.816541389 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065660087 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86522327 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.729845527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.503424474 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.502722262 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801623286 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727872092 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.801169238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804070915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805558242 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.98700709 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070279953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848423349 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.447343752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901005888 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810169174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.807329948 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807113485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.292656276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803235145 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328764969 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918224649 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932570402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.81428958 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729919944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.806743205 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806171362 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.802538811 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.75219506 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855342972 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.40633795 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997094354 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053059355 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802626258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815524676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.46673075 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.912969064 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.822478422 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054558065 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342045995 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.905923556 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87477499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.812479808 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.47240223 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495625944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354899729 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094103197 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114322753 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143691862 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.218596349 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125913081 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914767596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030519863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.327296332 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860815821 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915591278 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74066617 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819240251 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.447309341 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151262457 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815878278 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022760447 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084460235 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.11196269 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920898534 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01005145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835592479 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484425527 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831104626 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.103957926 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823043142 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.189800802 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995590355 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887128034 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054900404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866134757 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.805179745 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170808138 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872622719 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.507623415 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160085505 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.240140996 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.229976881 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010015403 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.807458227 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.246079117 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153239087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.02822702 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.926224382 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736280182 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.813146537 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812004722 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.820661517 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.781182014 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.644184256 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.052841614 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813640248 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035324231 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.982929762 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167284413 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.709937074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.809697119 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807871437 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053587793 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.582490466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968779375 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.162779243 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372412543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815339587 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.734446525 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733892354 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.507615909 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.814696244 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.772262034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016948372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.906441593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495259572 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221209542 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116576255 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052443474 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.819993398 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068672228 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084289665 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807970849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831245076 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.907515058 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038218843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.487419984 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.026138784 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036570603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349209558 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028907464 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26765619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.780115942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.809769268 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024616652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.028378864 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.121925609 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975811086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.522409477 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.819662053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165524719 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870973716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.12772565 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979896915 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.896524915 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81812792 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890346202 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815986015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.818932154 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.818067884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852009894 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132915361 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91235315 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.82448922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887963737 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804146715 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.372513466 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.822528703 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072166591 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158925571 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135174409 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873349357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.812887928 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815453383 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740678646 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944541745 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252449262 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085057489 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934258679 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.945138142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833887209 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.06557141 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091208292 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120475478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087046839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.716860128 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477399225 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987152944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.030719745 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818824422 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.016910582 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025844354 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119709655 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371794008 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.973105536 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000523438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084783807 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173191211 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814644448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394036586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.821967814 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234197089 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.846463587 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132454712 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053827868 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818098261 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943268429 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819255275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.011486176 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.266390652 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429964112 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155600889 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664359441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820224095 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08206282 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131952398 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116003639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89608106 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821716855 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.518815559 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948090682 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.668859409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.032090601 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.817520659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01914397 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.526715883 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821425922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081294833 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116952064 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.815459 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.681867069 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819229834 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.819682922 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029521139 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028957652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057002935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819034126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.823855792 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.62237541 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084070381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871467748 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740824558 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.815524982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866564168 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043267123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832337593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327463935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.513834808 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086371769 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.716868844 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829123882 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310294696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179510521 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133434238 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331455636 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029961217 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361714237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.771608246 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183455023 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.81202259 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.237479301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184307342 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.810107515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345557667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914589291 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.070604792 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134527432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.815291283 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570777849 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.845639845 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03506727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186646999 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749733711 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824386613 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.885003886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.818763766 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.801252561 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82686562 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.68977655 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251564205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.654632019 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377203658 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.822854139 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.921777794 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.158220387 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367403778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927332337 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840053718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82245527 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.526548615 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.111264454 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065962596 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347051747 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.916166858 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.82548934 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822550687 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742212968 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004034399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.00825494 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09917271 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.20816394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.929820672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825469287 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.030804746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026117973 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.156985716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93780574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994904987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934865227 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763023586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529410198 seconds)
  done (took 1636.903380888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837029745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.838873248 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.832280471 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.868043576 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.854674178 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903516774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.861670572 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.843128239 seconds)
  done (took 56.599286016 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.819721721 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.834286628 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.823489261 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.820567322 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.822165991 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.820031993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.977439183 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.832138652 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.824054542 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.824822177 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.820903946 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.820565762 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103171697 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.840151371 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.82078034 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.824121245 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.823541606 seconds)
  done (took 73.219001066 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.8203661 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.294243378 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.881041427 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.825756174 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.885776173 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.825166712 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.965466475 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.863809693 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.82671857 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.889253893 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.124708712 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.832622058 seconds)
  done (took 91.794653278 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.82913234 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.821534491 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.821775633 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.822700048 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.822755306 seconds)
  done (took 10.883725661 seconds)
done (took 2136.603742531 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.055355382 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.013966699 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072715679 seconds)
  done (took 5.846519487 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.962971407 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.014743002 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.126604109 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.133263321 seconds)
  done (took 9.997344473 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.131052754 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.192398989 seconds)
  done (took 6.078866825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.140236303 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.849965814 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.203016979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.824688698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.825763782 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.825543235 seconds)
  done (took 22.238643779 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.821225495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.820764895 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.822530539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.820114108 seconds)
  done (took 9.040472536 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.81747713 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.519192429 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.818856881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.826646911 seconds)
  done (took 20.735692 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.962885781 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.934572771 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.959965497 seconds)
  done (took 7.609161214 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.95637125 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.729689116 seconds)
  done (took 6.436004185 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.949498642 seconds)
  done (took 3.698708601 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.841580157 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.084132206 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.375076086 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366733823 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.541057463 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.631795054 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.097440099 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.03080416 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.250086476 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.257588324 seconds)
  done (took 24.225391471 seconds)
done (took 130.913553673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.137804276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82826939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.014484678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.147358138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.04540258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.009216387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012072962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.132675196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.820493107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.811724447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.147831504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.036729946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956958682 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810319558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967052196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.80937757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.019729374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.14101021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.823653102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.038365106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.021377265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.784994623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.976723042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.798827317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.015386666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941067627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.320955076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.799279465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.956513452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.33228516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.937369476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.169948066 seconds)
  done (took 165.513853307 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.777753681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.775658069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.774392423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.77153255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.390976953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.776013634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.769249551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.768237841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.216751946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.168531269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.765727038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.364552841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.763419929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.762307207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.758854634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.76019732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.331354541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.755722071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.75778147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.752386697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.7522106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.173084994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.752441857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.205484474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.31476406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.746588955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.745495765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.744919589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.741775208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.204454275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.74136197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.735369463 seconds)
  done (took 206.536820053 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.688096907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.736704005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.732022689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.732906714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.733525843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.732021434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.731842721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.728829919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446661353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.435491713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.722794349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.723578991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.724064442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.720421618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.724063232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719209352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.724314084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.727154822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.732022013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.734030928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.73931376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.345935644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.72053316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319102947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.723991287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.727227285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.719747339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.732139833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.733840038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.736798058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.740942467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.719808554 seconds)
  done (took 215.592448254 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.966647465 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.722874607 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.723889672 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.64230773 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.72393696 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.72355679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.702702386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.969165443 seconds)
  done (took 17.856640139 seconds)
done (took 607.25500851 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.071829305 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.910144729 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.898695443 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.747350178 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.970578372 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.786074285 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.743236673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.805319918 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.550972232 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.814896969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.418420176 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.762838657 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.521291525 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.770777531 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.866123571 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.803851585 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.295622066 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.392476362 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.918891828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.806680524 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.9248383 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.641684124 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.824124246 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.585703156 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.544937906 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.684100313 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.736178293 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.302304382 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.758124608 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.901540758 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.374703881 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.986530112 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.753000764 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.739418068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.799724805 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.776199594 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.928473895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.751609391 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.871218455 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.435349232 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.79127321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.458034876 seconds)
  done (took 96.087187662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.733071101 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.728647878 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.730047272 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.729232398 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.739768565 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.730932683 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.730668074 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.730137928 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.730077317 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.731018833 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.727766214 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.738551136 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.731022784 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.740182512 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.731376663 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.731762946 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.731585055 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.740094433 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.733277859 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.731878371 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.72999976 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.731554346 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.725529005 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.733768576 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.730752516 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.735030495 seconds)
  done (took 46.713705868 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.726360714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.882470801 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.96293859 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.743762657 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.725093879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.727987182 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.744697873 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.732754019 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.728320686 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.725508089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.818747683 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.731920571 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.745677674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.963733041 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.740955939 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.726033616 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.726622178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.724308754 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.888784303 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.744043756 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.746558014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.732366469 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.745286311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.741863923 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.72635463 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.725633875 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.729843427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.22239419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.736345007 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.819389848 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.770048126 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.74967953 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.168502856 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.97696564 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.779879722 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.735824201 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.7278689 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.823348629 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.731397446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.728202232 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.747895079 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.731885887 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.968574482 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.253719408 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.742292039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.728865705 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.22984971 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.833955543 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.769183136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.738657816 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971037826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.743913835 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.730697093 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.727648326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.763616895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736582214 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.726895395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.086731055 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.741630875 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.748932528 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.734862635 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.729604049 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.894359179 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.736764102 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.882398695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.738355463 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.738003618 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.728951698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.971350983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.745251202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.269862328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.744037195 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.731644688 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.824975147 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.890621715 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.258220308 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.743706663 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.898954083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.190776935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.755082006 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.738571121 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.212995498 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.758509425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.736956371 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.73421748 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.732863147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.733784682 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.775282277 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.749877137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.185123764 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.272956932 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.104138632 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.759703716 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.740979104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.733306003 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.088643898 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.741740193 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.731011412 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.962678573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.279869195 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.743938903 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.739913568 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.253549684 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.746085634 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.753528865 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.738018591 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.976100558 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.747074163 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.775965252 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.734433368 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.732868126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.728283734 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.745143055 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.732525913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.725642048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.243273429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.839669591 seconds)
  done (took 215.955287658 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.727459171 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.72614522 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.718297822 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.720649804 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.715701367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.717740866 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.719214894 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.716828696 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.718158691 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.718837602 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.716597022 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.7181517 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.718922343 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.723274387 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.728718949 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.721857746 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.319048712 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.716391172 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.720269721 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.716466331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.355690448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.721105478 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.719534295 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.719339931 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.716878902 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.71746402 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.719660729 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.7244333 seconds)
  done (took 163.061506956 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.717294666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.830595294 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.732452151 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.746691857 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.728299897 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.718292962 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.815488159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.733748429 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.720604247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.718112393 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.717370912 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.777756133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.730170014 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.814007957 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.743232536 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.822549747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.818411151 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.720974722 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.715449176 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.715950199 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.744320176 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.723778846 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.775528731 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.838656631 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.731596893 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.826283852 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.731244189 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.71751868 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.713967593 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.827051549 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.733859881 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.777018452 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.746515984 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.732487606 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.831049955 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.828403162 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.820924754 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.82011254 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.719279442 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.71702406 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.716893486 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.715108522 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.826360388 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.732141453 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.715672833 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.831540069 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.733794129 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.717519973 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.718015305 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.717019913 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.728451297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.731902475 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.782245797 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.846824611 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.750527877 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.741697267 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.81417844 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.839222067 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.718059283 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.813930905 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.724468584 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.830922743 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.73584725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.722615481 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.714637245 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.716173745 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.743924893 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.821814755 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.816851524 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.719396065 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.806968838 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.744465263 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.718191139 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.712337636 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.710132343 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.823570843 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.82020088 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.743388876 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.742465345 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.736527479 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.716841411 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.707175439 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.707999045 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.72392237 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.711458556 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.820517208 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.820558917 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.710877999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.708845864 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.706929582 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.707150303 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.728737442 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.827092896 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.740879258 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.814838896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.774504818 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.780529567 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.719247178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.720268577 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.711661519 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.770133716 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.722493609 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.721642463 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.993114101 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.767491994 seconds)
  done (took 186.183301611 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.093872056 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.753439043 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.765748076 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.025863936 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.056234506 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.609912194 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.751139436 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.75745474 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.789953749 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.982213337 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.830906916 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.797855008 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.741035616 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.729087387 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.753289279 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.790563861 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778312061 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.105742077 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.960480391 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.92030218 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.740529675 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.05736882 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.066891559 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.342676037 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.802844625 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.137277789 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.321192415 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.914209734 seconds)
  done (took 57.029026142 seconds)
done (took 766.691760919 seconds)
SAVING RESULT...
DONE!
