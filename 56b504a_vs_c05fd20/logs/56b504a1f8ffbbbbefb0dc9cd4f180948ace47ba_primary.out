cset: moving following pidspec: 8338
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364944497 seconds)
loading group "string"... done (took 0.504007481 seconds)
loading group "linalg"... done (took 8.460976031 seconds)
loading group "parallel"... done (took 0.182460659 seconds)
loading group "find"... done (took 1.375106615 seconds)
loading group "tuple"... done (took 1.950445423 seconds)
loading group "dates"... done (took 1.342082408 seconds)
loading group "micro"... done (took 0.212739675 seconds)
loading group "io"... done (took 0.549945926 seconds)
loading group "scalar"... done (took 42.169073033 seconds)
loading group "sparse"... done (took 13.028910867 seconds)
loading group "broadcast"... done (took 1.119043515 seconds)
loading group "union"... done (took 14.547636873 seconds)
loading group "simd"... done (took 5.010935317 seconds)
loading group "random"... done (took 10.146180137 seconds)
loading group "problem"... done (took 2.097609055 seconds)
loading group "array"... done (took 23.402980533 seconds)
loading group "misc"... done (took 1.088410169 seconds)
loading group "sort"... done (took 3.531501017 seconds)
loading group "collection"... done (took 20.778532294 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.476556273 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226567614 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258132402 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149160131 seconds)
  done (took 1.993211357 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.16257575 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.070120996 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.087773673 seconds)
  done (took 1.040110556 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336006775 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251740936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.222894946 seconds)
  done (took 1.492367863 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.234943666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250909535 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.303024108 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.359371059 seconds)
  done (took 1.924198637 seconds)
done (took 7.139006089 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.756705135 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.901868437 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.510618891 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.112361117 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149797631 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125428764 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.279539093 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159019409 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116434671 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086943949 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17596269 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.377312866 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.466010375 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945757368 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.080039273 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115766609 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078314691 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.735901433 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07555877 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110936603 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509139893 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.102559265 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098296993 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139240827 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.199486013 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11312345 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168800836 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.088405013 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.729741771 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100836866 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180054373 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.080129669 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166895254 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.188401553 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076171628 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107689855 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.717115295 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185053782 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104438802 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09287785 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.724442273 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078710133 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192624238 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099217514 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.084119579 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180738535 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118679849 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.103576375 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08461219 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09197396 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168458011 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.501125114 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106228118 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141223875 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092728901 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.744641407 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089780579 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155595773 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125239049 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106703087 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.075661101 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088900786 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.183071547 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092177462 seconds)
  done (took 19.661846591 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117383502 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121442863 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075880431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15234013 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138057636 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079433732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098038414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076569336 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120526666 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178073212 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114433988 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138938226 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094849269 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.096302214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116163832 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247281821 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102036248 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118079818 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080670894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103628107 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120773301 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11247899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090787347 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.1096111 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168178491 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205366736 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108208542 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123196095 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078032747 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11032555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140218417 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156361808 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075776918 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076565749 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175960708 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121932546 seconds)
  done (took 5.051013565 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.183803686 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097955713 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169041166 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161058644 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142664212 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152804863 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109315503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255412585 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.129030313 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161707245 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126829807 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115389766 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07710767 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093967957 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078044605 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695268067 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163092698 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152111991 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095063342 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095264508 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080012455 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.142393615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079931135 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093440033 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078616906 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130760564 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.684124151 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139964247 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096334378 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.177815204 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11736057 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078753372 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129784022 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196300329 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112884338 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132342811 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094257979 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073779615 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179469112 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080619823 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094200641 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100464801 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131871996 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132210309 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09129956 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07821285 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207065611 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093540465 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091451744 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.074716664 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183879629 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076546414 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077690006 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331347206 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113248921 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075764414 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090605868 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28102747 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127249964 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093153007 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077526689 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076884194 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096943389 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.733078544 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076198616 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.136185308 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095015782 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086998277 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095285182 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076666177 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099841456 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081239388 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11260019 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075339318 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095416777 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074440467 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091446748 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078084337 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112629319 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082276221 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093942819 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144969541 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07613759 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113780082 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122828206 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079711964 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075444183 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129674011 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096425127 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075599525 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131630926 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07673678 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112473558 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103037198 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09311983 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138171077 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077451034 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206349879 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074617547 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072953087 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124805908 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074250529 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099217421 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1277661 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106813579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078942633 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100894193 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077855397 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074193801 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162356196 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077373356 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095840323 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077734673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108648705 seconds)
  done (took 23.466540772 seconds)
done (took 48.867512932 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403289081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.493056666 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.040358253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14256269 seconds)
  done (took 2.805801603 seconds)
done (took 3.546294712 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083713222 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086089806 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103348963 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083248567 seconds)
  done (took 1.085581934 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122180639 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.098966794 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0872471 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.097644409 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.088185982 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100612825 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081182537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.142482652 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078459969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098263142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079983976 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097386532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.084756321 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100449049 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078100319 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100961597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.087536566 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098053375 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.085814918 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09758128 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.077616559 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080760606 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099961455 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078155682 seconds)
  done (took 3.017986851 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096924504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078251791 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097752402 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077411769 seconds)
  done (took 1.090003464 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083567271 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090382972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106211938 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082643133 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.108050074 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088511094 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094073444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07565093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094806461 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083520376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091822714 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099760413 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108466549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083536251 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101376831 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076676345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074197385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107209744 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083206115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101449011 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07795762 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10145846 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076129422 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110781634 seconds)
  done (took 2.942604639 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.154196184 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103203726 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095730785 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096340141 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.117736291 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130710938 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.112875307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098005191 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.115836834 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.087674686 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093577299 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123210051 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.104058596 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.072127925 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.090160223 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.073804984 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.088693171 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10561215 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.076036355 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105345514 seconds)
  done (took 2.788605117 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095861038 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106739929 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074230427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.076453328 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10219609 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081789755 seconds)
  done (took 1.281647005 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07611711 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074211475 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092308734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073867131 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078755608 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092445523 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073039694 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09109799 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074249053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073968675 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091637 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073206696 seconds)
  done (took 1.712704951 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.368720812 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095224039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092713978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073242844 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.081469323 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091739967 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087646647 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091995013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.103085418 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.094255404 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07301581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075162063 seconds)
  done (took 2.113996881 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194930974 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094581151 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225833966 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311401728 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133436018 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139522723 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245858732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141020857 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.159145025 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114716843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168735689 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133437949 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111505369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152593518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118478258 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131045549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147846121 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189659977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106872169 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195308294 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12077399 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141959456 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153748755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12827526 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113735081 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115812658 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097491582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103682271 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146939649 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126074722 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167020249 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108295005 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117163564 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171922157 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198381887 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154770155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268163027 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111054617 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130507565 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142060057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218619977 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099261739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185251281 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113247636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10832391 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156530076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133302174 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156887807 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.090497249 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117235001 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15606559 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152100615 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.154588155 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113519119 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26727016 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126348852 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104231844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156977243 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281539108 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182299076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12463775 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096393013 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159190642 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157719212 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154666743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.121021405 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.141864412 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085039016 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147542447 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168765107 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150384224 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138883506 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181640813 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093775954 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140248595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144014674 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128720348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153970185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135293153 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080537325 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125399661 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113688624 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087942247 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176812444 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081616336 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177127086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112899689 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.154237561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178080267 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134425232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136182192 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139613512 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140102542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105622375 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093519873 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104050595 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126990917 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132339433 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090758354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13307283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119430592 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087391506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127886705 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100109773 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117102877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104894918 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139184856 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141800096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083650023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140166501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125570273 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107876804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142673309 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158127311 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110596236 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107717291 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169046428 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115877555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110933784 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149873586 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160584264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131972521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094098152 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140820699 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165880477 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118070826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161546844 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117797154 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091260267 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118708451 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134343797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132525935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126558785 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107130069 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.129016271 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164533579 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082894984 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113822062 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148456967 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085184064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106305195 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118728007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09360499 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112475594 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097070825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.113734996 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132252807 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135471881 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127450526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11225816 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119029753 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164404031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109926878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126005689 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105755761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096937393 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.154190678 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160220285 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087248956 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169733709 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.145470171 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187327872 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140563487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089585495 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152394164 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105463803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077581157 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139739132 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137448341 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137344057 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157346833 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167786568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.142776017 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129041203 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124686295 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138508745 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121261131 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132281835 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114673835 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137217284 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115703723 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099147714 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08247275 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105070191 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117378021 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09047175 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109164495 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156967626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140182882 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162032457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140277181 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099755699 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156151866 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103915111 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140241055 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147666062 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116138889 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158467175 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15554673 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123762107 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120023953 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147636775 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096198548 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082851729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.110593725 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14085997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091436901 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109855915 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100420536 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155821988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147679977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126004689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192950607 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122069171 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164356796 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098986187 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14101742 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12457351 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135824545 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.144534063 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093848551 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12659084 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1521386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118066647 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164719721 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13790873 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14409415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172470739 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125805404 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089455424 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12539572 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139919051 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097627337 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184810601 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122505883 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09341081 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127896557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103640681 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08412781 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14692095 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121393971 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15298402 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123345598 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143130214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083587716 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120259074 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135810786 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121422007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.073826796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142302135 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159980401 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12039961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135704955 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147112615 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087441719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.275595079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162856486 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159198526 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113285552 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118752819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118108158 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135638906 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1384181 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153757304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123653401 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154315827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114420367 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113575411 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11287327 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103638415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125840451 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.116936009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089925217 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.129275021 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113406148 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151389267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100744559 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135192484 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140416973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125634659 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100344241 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119688504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174260473 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136808171 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152733788 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106115824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140774541 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191107634 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083098851 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104660091 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086298822 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153286382 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089825753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13496258 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.160268586 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191073906 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136837895 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139937487 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095607765 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076342838 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135153532 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126176587 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172829064 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120203434 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113270972 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160769931 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099752998 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107430681 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138529784 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253915675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102672467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148016362 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091264037 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245422555 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084180891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107926894 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136022197 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145450387 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.095506342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14240012 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144397424 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101739558 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136072571 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115115782 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162636121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180006422 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144569899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147825298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.108995439 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114314868 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138351774 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150878742 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122168781 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113275551 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120435923 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156813951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162291934 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111272317 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140088069 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13852839 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116690878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164625601 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091281917 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173461666 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108624834 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141814526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097916293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101706126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133069201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.159702067 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110836902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128121042 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134619032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110009356 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086878229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127921162 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135229158 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117744814 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083761339 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146976023 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099717015 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118900667 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155962048 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108000473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110852346 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122320259 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114601173 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119655366 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102358731 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113291272 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.115053505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15499439 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108548954 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151433365 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15091227 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138064762 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136188072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100965705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643160561 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105260949 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135854383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123124785 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158953511 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125253217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143384865 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136380611 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108272246 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142085834 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12597418 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.198042772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140631567 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.135154581 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089158919 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122108938 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100303321 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109030255 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12729392 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138652637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097882705 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.114110747 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.13329893 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101869816 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110276914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09565531 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158541436 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123446185 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15124771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155426337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113894341 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143446728 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147297781 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087934006 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.136698809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146947047 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11801637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10702337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109992916 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111517354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135598793 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100265015 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137182427 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137957927 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117737338 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140138347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111276186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135974273 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10002383 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137457958 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107936052 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.129858582 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113710097 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10934007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085527432 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132204565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130089127 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127195917 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083978126 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.116185183 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152579313 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099637193 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089609096 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269364123 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114143273 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168255606 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12032608 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11214787 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10087252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124216642 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.129442505 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135662122 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087376907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109149875 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088588353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135998786 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10098551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13191992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161583243 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13384468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174018526 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114469936 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222410331 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116156976 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131873912 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.080386792 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108078435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100081514 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111357001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121068377 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165063949 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157356356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103276218 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111287039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084828881 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101356767 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09074687 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137925685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131322189 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137944946 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099164681 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093228139 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120740167 seconds)
  done (took 64.103127999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150008242 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130030524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.139703808 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.303006359 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217633339 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239247642 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.19929206 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219705091 seconds)
  done (took 2.426012055 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.166382078 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.114580097 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.111404736 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.075504795 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131789475 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.301555259 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.109659091 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.075837629 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.123046666 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.111428033 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.094932421 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.480271291 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.075109888 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.097541791 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.090162526 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.07754751 seconds)
  done (took 3.063278413 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.767765391 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.402213423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.232504726 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.156172499 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.142647707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.080142498 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.582426779 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079827767 seconds)
  done (took 10.272960091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.108274248 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.103063222 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.138834724 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137470672 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104873993 seconds)
  done (took 1.431659739 seconds)
done (took 98.071283062 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.088441318 seconds)
  done (took 0.914468874 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385119481 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063811021 seconds)
  done (took 1.31195483 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.091325664 seconds)
  done (took 0.929280469 seconds)
done (took 3.988424348 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.138549192 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098744296 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.104803291 seconds)
    (4/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.17935266 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.240646058 seconds)
    (6/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.222519676 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104007516 seconds)
    (8/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.263125341 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119418812 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.146585482 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.191508108 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.112661232 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.166845721 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.084679931 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.219818155 seconds)
    (16/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.248562342 seconds)
    (17/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.206703186 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210586963 seconds)
    (19/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.1014106 seconds)
    (20/286) benchmarking ("sort", Float32, false)...
    done (took 0.140062189 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110729053 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082840974 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167206793 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.098579196 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137726835 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.217137983 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196826928 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.084281215 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112330842 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088681766 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.192510991 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182092787 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.086561142 seconds)
    (34/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187037144 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.125066393 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.157073484 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.074306457 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127096938 seconds)
    (39/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.084289969 seconds)
    (40/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.187479714 seconds)
    (41/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.103356818 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.254485497 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123347479 seconds)
    (44/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.179541601 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.083186969 seconds)
    (46/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.11215113 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221851182 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099480232 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064562165 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165000757 seconds)
    (51/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18221274 seconds)
    (52/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.098645569 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10213339 seconds)
    (54/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075285272 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096188098 seconds)
    (56/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082699389 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126968901 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.182084866 seconds)
    (59/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.127935551 seconds)
    (60/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099174203 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077005104 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.151011417 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.092195029 seconds)
    (64/286) benchmarking ("sort", Float32, true)...
    done (took 0.22448558 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.195358267 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086642902 seconds)
    (67/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.102215256 seconds)
    (68/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11919981 seconds)
    (69/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.085092124 seconds)
    (70/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145857889 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111454642 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091588715 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.097892828 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064239147 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.2295085 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214269976 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081935522 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106805477 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088151199 seconds)
    (80/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119054796 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107208936 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182956645 seconds)
    (83/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.12348884 seconds)
    (84/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.083042884 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18595978 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184312442 seconds)
    (87/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167455261 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076896367 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189570746 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179428561 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.106614593 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109810742 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07613223 seconds)
    (94/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107833595 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064772116 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067592528 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10475566 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.072950107 seconds)
    (99/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063619495 seconds)
    (100/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087268585 seconds)
    (101/286) benchmarking ("sort", Int8, true)...
    done (took 0.216616632 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.152935642 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167928011 seconds)
    (104/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067296474 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142202151 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085476261 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161188568 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.107858151 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067358981 seconds)
    (110/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.105946636 seconds)
    (111/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086820766 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.171238127 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.086223049 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104233248 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.083701081 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168473481 seconds)
    (117/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142734262 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082968715 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083400139 seconds)
    (120/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170954829 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.106180836 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.087871473 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.124352263 seconds)
    (124/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157247619 seconds)
    (125/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.140653962 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06769936 seconds)
    (127/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.096251512 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07715129 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078485491 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085491346 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076134538 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.104496587 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067146278 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.063837124 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.179543258 seconds)
    (136/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104739039 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.102353124 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065285819 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.129424261 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.086754593 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.089169329 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086505758 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099974627 seconds)
    (144/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075257166 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.087439063 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098282355 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076944213 seconds)
    (148/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098716129 seconds)
    (149/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064993952 seconds)
    (150/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.086022236 seconds)
    (151/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099650661 seconds)
    (152/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.185549506 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067711018 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067092489 seconds)
    (155/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.126821513 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.072946691 seconds)
    (157/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10374693 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086290335 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06518408 seconds)
    (160/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.087879873 seconds)
    (161/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.085189333 seconds)
    (162/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.12369389 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076725375 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170075805 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.083044315 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178857259 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065940781 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099569078 seconds)
    (169/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.081191059 seconds)
    (170/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098751148 seconds)
    (171/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078030255 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.182055822 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.087794542 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.149144998 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.077821693 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.096773192 seconds)
    (177/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.088070208 seconds)
    (178/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230623379 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077075607 seconds)
    (180/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172188309 seconds)
    (181/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.087889759 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.194837667 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.098276765 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091958764 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.096785651 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.091860966 seconds)
    (187/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099899561 seconds)
    (188/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067242775 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083283308 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.087192246 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.065220925 seconds)
    (192/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078473728 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108740058 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099852275 seconds)
    (195/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.087388647 seconds)
    (196/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.126296042 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087607003 seconds)
    (198/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066070075 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100495533 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087249685 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075984644 seconds)
    (202/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089955802 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.126863996 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096875588 seconds)
    (205/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.064449564 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.076715639 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0893309 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.106366057 seconds)
    (209/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.088015602 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 0.139635338 seconds)
    (211/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089824195 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075824117 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102148611 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.064230152 seconds)
    (215/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078399887 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100940975 seconds)
    (217/286) benchmarking ("sort", Int8, false)...
    done (took 0.180452747 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076540615 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100704401 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076186332 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066716835 seconds)
    (222/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089974411 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068505489 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099090691 seconds)
    (225/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.084335767 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066636349 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103119565 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077016909 seconds)
    (229/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.096881514 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068904465 seconds)
    (231/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.116054792 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099635629 seconds)
    (233/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065224054 seconds)
    (234/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.128465765 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154528143 seconds)
    (236/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065010066 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077082703 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092183713 seconds)
    (239/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064709404 seconds)
    (240/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065224131 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105824272 seconds)
    (242/286) benchmarking ("sort", BigInt, false)...
    done (took 0.215745119 seconds)
    (243/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.106038973 seconds)
    (244/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105900771 seconds)
    (245/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078232752 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.108178497 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066000546 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167500467 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082762746 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088956812 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076818438 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065449195 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09892245 seconds)
    (254/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.128672823 seconds)
    (255/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088100538 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076707792 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098606286 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.083023619 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065937611 seconds)
    (260/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.137597258 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.103516425 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.107451506 seconds)
    (263/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.073301815 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09848919 seconds)
    (265/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.073784918 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.075019447 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.114460144 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075304118 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100886454 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.080441481 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.177536996 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069837888 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120838392 seconds)
    (274/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.073974551 seconds)
    (275/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.065736248 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 0.225911966 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09990609 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067882626 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075394677 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101902264 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075268228 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.088610301 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.079873318 seconds)
    (284/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076838519 seconds)
    (285/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097969898 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.079296571 seconds)
  done (took 33.270858985 seconds)
done (took 34.103835668 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.113057279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134805578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.092222506 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163716861 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079192229 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135944958 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.111393092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115717952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.078443002 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.078065924 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100672635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081570017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165552153 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.078868624 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101373391 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.081563927 seconds)
  done (took 2.621521067 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.173880746 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204345071 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.119991506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.076528539 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106850489 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078441391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099245186 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0839187 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.080681981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100801924 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078909237 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101578683 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.078261571 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07938696 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102543199 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079983236 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100043265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078824385 seconds)
  done (took 2.703505963 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105704494 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151128823 seconds)
  done (took 1.136626927 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113016162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171081182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284476535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148799946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119124638 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093551934 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151752037 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122253427 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199089138 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126957906 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124984862 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085065516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136002386 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.089447537 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109660906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.085665739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135055141 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08598753 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109120757 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.086211705 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132993727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.078857119 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112185954 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.085530303 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18160569 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123064842 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101110885 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.077934853 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.086296675 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108833512 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084634719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113989517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124952419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.145148919 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.091326065 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168994757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.085931379 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106896561 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.086973645 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.105808352 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.089876941 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112523173 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093150669 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10792695 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.078827384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108123578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.077784775 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078895927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109188781 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.086861702 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110085514 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.085817983 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167184728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08736166 seconds)
  done (took 7.052992047 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801786691 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149054388 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083908964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885018435 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135696248 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121148001 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777824715 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130709294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227759051 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.818121721 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098115092 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119538687 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225548399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246255991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.120120711 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333414338 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675868567 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121289406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110600613 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145803371 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113060634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134641433 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102345234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450182164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107712505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083837695 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111132491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093817326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152725969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106189214 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086578188 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195933904 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260016755 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17672863 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107155297 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082646491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103797189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16203114 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238251665 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210733713 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170948237 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079358109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105139003 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093921125 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125295552 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079682659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178996624 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167373433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166472588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108679831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094015787 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113739738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094590278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155217074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103448917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.339718695 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314401886 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105480204 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090917018 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122325726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258604066 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083804398 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222523709 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129845315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186632007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104124637 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76351196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160763093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104988516 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091100471 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112181241 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087787978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114884086 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162705554 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384080629 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096264678 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108907472 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082121709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223536112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08399483 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104533644 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155592056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084933705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11319435 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097676464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117777568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164270176 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.241942427 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120299056 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09097883 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111445864 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117031784 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.084832602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206657919 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215446503 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152405898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20443864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116422857 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158723252 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160030211 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115838122 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165057165 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089039624 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12114791 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117225337 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187919665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135758204 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106510033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087562441 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112739047 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139333423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086430876 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112438253 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163587765 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480774978 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160157411 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103167275 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088660598 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114300223 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154876247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089633902 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26013175 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091193269 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183387479 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090424991 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103028768 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090802813 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.155913938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118127504 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11375893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094897241 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114713136 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245711873 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214585775 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096921893 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238132381 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.151396106 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113892432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167523043 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114008856 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.160973862 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091912897 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115312814 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106996782 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752418473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119169183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090001582 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111138657 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190828791 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083032841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107497845 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08306644 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08010453 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797829649 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086306333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10450719 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086994745 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113824935 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090069802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112092422 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087570315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177545205 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204120952 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11697525 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088874683 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10561688 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154921167 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105832309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084478195 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083545297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106407535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092050247 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.361632307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085279024 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161989853 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174625143 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193064867 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584309914 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083446192 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106105401 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20266763 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105644022 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30122396 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091141976 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223216266 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158348104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080554424 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334771437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159377382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192019474 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109211852 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16639896 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.079992102 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112738949 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155511456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08205097 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112375737 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152358744 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120063968 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095974695 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.146849631 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083308818 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242144694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082492645 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163006487 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108007387 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093660698 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306690337 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082308661 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124060334 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155158661 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110459644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083943418 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.687655512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106835105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092830655 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113334145 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218039722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157916427 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113184041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090153371 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116804524 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156294941 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204768543 seconds)
  done (took 42.701142877 seconds)
done (took 57.095251841 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091912146 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141179803 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.087897602 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116561851 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.091319365 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11506731 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.086466108 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09057956 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.113910473 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.093095247 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.113412758 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068265352 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112576989 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.088557398 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.111804299 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109776469 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114030317 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.085276704 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08242818 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.100321961 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081604902 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.101070767 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.079263541 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068941132 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.111888964 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08655331 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.107552455 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.08914923 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.101170837 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.078934886 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077850199 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.108929397 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.077510413 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115034096 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.084766676 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.104576631 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.090033448 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.087947677 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.10243548 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.077786339 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.109153445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07839703 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.085452119 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.109204904 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080278044 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100177985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081565105 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115287045 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10926323 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083012366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.109788469 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.088842856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.112028131 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.083778316 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10064962 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081601435 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077436613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133154282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081009684 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105936216 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.085815196 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.10868585 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07694796 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.105378483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0815903 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.088652745 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113997584 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077200538 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111125548 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.083233893 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.100498396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.08292923 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077802945 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.101592893 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.088460845 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.112331677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.076925444 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079876002 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.108947043 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.08294253 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.100257271 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.081329159 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.079867078 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.102682199 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.080714565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.092223304 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077688548 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.083984976 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.101022804 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081749201 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.107931799 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.084914428 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08056605 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.112249781 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078133808 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.100162492 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.078566916 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.078791213 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102591018 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076968161 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10196713 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081344416 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.086779128 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.102420302 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079565302 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114110026 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.078768366 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.084664309 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.099877028 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.076801471 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.117185307 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.087960605 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.101713742 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083389554 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.077416144 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.103136636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.077307883 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101973086 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.078584931 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.079490847 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103432274 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.077801781 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081231576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.10329239 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.092526817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.102334474 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07823991 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10485943 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.078498599 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.084535919 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102402335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.078595326 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.080308384 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102329106 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081332587 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.101718551 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080051588 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081568848 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.104872769 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.079827872 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105348769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.082187524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.103418893 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078470115 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.077996582 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.096990804 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084149687 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081022716 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.102735264 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.078602777 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.102513171 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.078232652 seconds)
done (took 15.004381806 seconds)
RUNNING BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.968163164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.965192867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.95442131 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.966406399 seconds)
  done (took 24.76057398 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.973983423 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.972084699 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.973701101 seconds)
  done (took 3.825646369 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.40855701 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.968182778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.970595547 seconds)
  done (took 18.25336902 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.146258716 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.003172658 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.232489528 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.651191753 seconds)
  done (took 7.940430332 seconds)
done (took 55.688918682 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 5.981800536 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 6.142422335 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.095568557 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 5.992518994 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 5.966379981 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 5.966383569 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 5.97639532 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 5.994772849 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 4.584075932 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 5.974940565 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.916408002 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 6.123891674 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 5.995303301 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 6.628803921 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 5.967970818 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 5.969512281 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 5.96706011 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.32603476 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 5.968841865 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 5.996953905 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.953342834 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 5.953168641 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 5.976856664 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 5.981539311 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 6.06143245 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.977978354 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 6.027002535 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 5.975923995 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 6.176921982 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.984839642 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 5.958745114 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 5.969422642 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 6.046493998 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 5.972611549 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.079466417 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.996462732 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.098330965 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 6.06283422 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.960561192 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 5.97616766 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.093993663 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.324122004 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 5.977489597 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 5.976946785 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 5.972954384 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 5.975210326 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 5.95945108 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.658873256 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.972405104 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 4.431151905 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.975880068 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 6.67298801 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 5.977905986 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 5.989709424 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 5.970707464 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 6.316260151 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 5.995309752 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.031170953 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 5.999041349 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 5.971121264 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 5.968761987 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 5.983511601 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 5.998056705 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 5.969545966 seconds)
  done (took 365.795765101 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.970447238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.017072739 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.146155227 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.009534184 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.503904584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.170916901 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.117040097 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.579031185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.987022563 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.982572741 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.222680654 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.973664995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.289940776 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.949316847 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.988223062 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.082836685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.276136731 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.313552099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.997910679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.132209154 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.985841635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.133732558 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.048338577 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.205065583 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.016186178 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.985785297 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.987392257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.993482037 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.16582332 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.210452805 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.993245338 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.00846252 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.494756077 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.826601527 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.990357391 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.003157261 seconds)
  done (took 141.668229127 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.971176529 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.970723642 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.971831541 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.998592237 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.972247028 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.455482041 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.456095223 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740338401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.423335148 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.126490093 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.218122054 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.975373695 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.061191565 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.984689453 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.973308516 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.988269544 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.998911239 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.976510761 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.973496362 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.455997695 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.989269942 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.973512676 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.132261251 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.986122683 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.999069643 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.365363685 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.444656977 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.973549857 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.999012727 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.294765918 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.013274504 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.973486322 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.289210531 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.50817667 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.0858793 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.974702817 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.00091842 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.974795723 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.246776669 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.974933113 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.97479237 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.97670301 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.579990244 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.97874911 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.458429438 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.977963847 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.897306315 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.977072179 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.975006661 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.044439563 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.597182929 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.978434404 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.974113358 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.976881361 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.974301114 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.975180232 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.001099125 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.98907424 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.066069628 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.975894121 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.977778624 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.002339301 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.975637054 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.018773088 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.976435894 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.034211206 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.036243748 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.095954412 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.460760438 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.979884268 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.06801122 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.091242982 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.975629931 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.975343926 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.977225771 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.975395183 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.081127168 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.976165004 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.343356416 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136115936 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.990104612 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.163419259 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.07248278 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.976792035 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.294267422 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.980274676 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.977237962 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.723829604 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.07203622 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.976876513 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.97621432 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.976553548 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.343349821 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.976414544 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.461622316 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.196897884 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.980838023 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.16624986 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.981495927 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.976337269 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.355504227 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.977534255 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.463920059 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596661093 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.982285778 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.086635477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138555275 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.991911237 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.977535915 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.169851111 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.981848941 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.033508784 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.980672783 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.369795725 seconds)
  done (took 338.685238586 seconds)
done (took 847.053356206 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.008042453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.05963375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.98007241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.988326029 seconds)
  done (took 24.952394124 seconds)
done (took 25.869260104 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.97974245 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.98301417 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.981219261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.981973153 seconds)
  done (took 24.842946465 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.01973943 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.019990069 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.021565926 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.032477598 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.02297804 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.020397484 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.012847556 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.01217638 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.031865147 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.02406249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.02292707 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.022928433 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.02167662 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.012986109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.023444619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.02339899 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.033454552 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.022895522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.013680828 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.025367541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.989339223 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.033256577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.024856858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.989083357 seconds)
  done (took 25.395566909 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.485994005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.061541607 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.143568854 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.043469496 seconds)
  done (took 5.652829984 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.041429391 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.041248568 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.055317706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.094857494 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.118668694 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.052279997 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.017171532 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.010369408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.997661057 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.042748295 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.117842978 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.057743275 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.14526865 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.989016106 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.175548559 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.989393124 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.989882694 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.040595367 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.093345826 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.107658666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.98890416 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.041233916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.050451233 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.057980181 seconds)
  done (took 26.236075862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.98974783 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.007640361 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.987955201 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.987226037 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.996874256 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.988280251 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.989542694 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.98966633 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.989050555 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.995755157 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.988012242 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.001875993 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.988572576 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.989515399 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.995514849 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.991360358 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.996131486 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.990130673 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.990199637 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.996233045 seconds)
  done (took 20.770145357 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.984071748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.837027945 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.334550698 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.242412953 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.983239856 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.984181826 seconds)
  done (took 25.2865948 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.045587688 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.1691285 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.990728613 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.278765391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.358155613 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.993691583 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.992570504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.201884498 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.453088611 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.42504166 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.042185292 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.05146037 seconds)
  done (took 14.924711058 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.985092558 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.985804867 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.991575323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.000188714 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.035721513 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.995567981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.998608592 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.986599294 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.036381741 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.041335327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.995713942 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.038047561 seconds)
  done (took 33.014631816 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.074042314 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038622128 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.852824657 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.005829707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.727368829 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.197861725 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.05181795 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658319331 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.992218399 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260624059 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995066788 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.080744917 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.244602223 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986698674 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.992480823 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.899333844 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.217977431 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425279227 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991073223 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784048723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016859895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.996606227 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.836226644 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.188839667 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.204979009 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971979044 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.250284489 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.765022545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.219032909 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.006328273 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.999274849 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988670507 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262603173 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597116995 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.10564235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.170637399 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992332986 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.539006825 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.989936281 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.633950151 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996213108 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.994791984 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.000364552 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989521047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.924089509 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989074666 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659535098 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.995700522 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.701596564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.98933564 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.199662565 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.090522986 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.993544726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.565139593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.090168198 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998029984 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.993845212 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.083938619 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563262023 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999505722 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.005448222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.927415761 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.003096603 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.640127109 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58457448 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.000057595 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.994293952 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.994965241 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925270972 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.632019118 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.010464438 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180871644 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.01689426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723656582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720705682 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.993163939 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.926500724 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487453302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004615139 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.929883167 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.220841487 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.770399738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931220275 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.578841665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.926146984 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638782497 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.006268875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.358525077 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.018367018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650980066 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.192252363 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016693252 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.017002836 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.217601723 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.877833279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993895051 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.004291733 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163519794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.015124844 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668369272 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944470489 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.996791587 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.250592768 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.20461963 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.994148653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.910518188 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445691067 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018241941 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.011865196 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.994554983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.182088031 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.546658659 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.013275381 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935068402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016743048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.772195937 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679479812 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000221921 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.001071877 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.994693757 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.233109535 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.732698786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897689061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.062252147 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.999847774 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.99472135 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.676758806 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849727979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.876493633 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.168633678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025864634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.006094171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.996233268 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954970951 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.99977072 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997647258 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.777889849 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.220275906 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.995788498 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27544558 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930014277 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196427629 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075139573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.22039928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.01789751 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.001932893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.258712644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005309001 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.999330002 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.008698726 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.015615692 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.099471768 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.017685574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.99855203 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.258244671 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.000375732 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.00032821 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.678696359 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778216466 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998086197 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.001651599 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001341171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546220311 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027951588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.997630679 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892284596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.009163849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.064342777 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.003029546 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.182219532 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.927417864 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006397689 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.00450152 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.996002385 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225269541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.008323061 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.675450668 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.082520437 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.443070483 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569426739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.014982674 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.932460896 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.710133649 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.691455637 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998431611 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.196997073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.998382123 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.181876239 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.017656917 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.005115531 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555951224 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004042703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.681268023 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.012329477 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.013839372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.005270101 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000187657 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.924596894 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045027826 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.016184569 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.014148552 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.143583744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.013876965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.934723297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.516931833 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.005739398 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.001139159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.778168184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.035714399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.691770418 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778901152 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.261370712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.003968975 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.209722203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.755519171 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.033422988 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.99988673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.000698334 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025271865 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.022495331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.010424254 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.012389991 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.682122827 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.523205012 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575009713 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70565156 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499757249 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158726633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.012694082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.906112434 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708008619 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957653463 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.66123158 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.210517499 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699693989 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978841466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44927183 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.036995352 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659618479 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.212046253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.23621053 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15322877 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.008496498 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.220525904 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.219470352 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.037482171 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.006332491 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935339074 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.527281391 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558266988 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.032822659 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.083948715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671882917 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.023682366 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.786793958 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.032062463 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619433112 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365897428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.571322236 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.3974546 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.013644976 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.017214007 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87978283 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.01380059 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.532924645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585000663 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.013664836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.458128854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964645471 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.191285671 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.01974976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.008234974 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.277968749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.571479959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.279802681 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.214613387 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944493093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.01465556 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506178287 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.868393866 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.010928389 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005496176 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695699925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.015873392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.246345391 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.010343377 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.954451282 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017710548 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.940246028 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939981872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.698979342 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.005281241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030761541 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438836238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.012576889 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008937805 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008083714 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858755238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.264819777 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.019730695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553947197 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.233192521 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.01923466 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.029470069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.009684156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.013150334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.998648626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.899193923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.242347661 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.06884482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.231851371 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.877678957 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.916802173 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.076589484 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.219319645 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.901108244 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.012896429 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.226908141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.722341662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.023305709 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69435396 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.03276189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.007543499 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091744924 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.006304661 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.030441196 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.077625562 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.194612636 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.023082155 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.019285401 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369145541 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028901128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028051099 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.021823656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.102283467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.005449288 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.965645562 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.78564998 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563616638 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761758354 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56966188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2315529 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.015633472 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01010322 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943154026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.16172002 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.538117641 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282894731 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18214306 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.025733403 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.032673361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.017113943 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02443102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225910835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283819618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886029724 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018812404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.67741665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.892787218 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.02163968 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.221150339 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449864472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509706371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397425287 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.018181852 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700767533 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287989039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102966586 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010213144 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605779363 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.023269598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.629886289 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.020505505 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009879599 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.163117741 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.223275964 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635153225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.04274675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.159598993 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.785338034 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719857862 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276047164 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404740263 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.201338086 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571842577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675799609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280495126 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.082502617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.199928908 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.890572815 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.158959521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.637429233 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.931873189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.012768481 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860954812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.722269354 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.022935289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575196095 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281857276 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.016636091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.640773433 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05500513 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.022493751 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.237410962 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66768142 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.242255963 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.024660341 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.021440548 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.588114967 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569746493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.236280229 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955037427 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.017265811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.226970367 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.254394027 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.040072801 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.466937487 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.726105619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51271059 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.989191284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.03610709 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.014562696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701552946 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57486323 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.987399593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455087949 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.676223453 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.014719856 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293239613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.019314775 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.015085955 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294571201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.019485132 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.016440108 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.208969957 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.574980438 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689277176 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.025381938 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.913042264 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.955027814 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.244636749 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.064225716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950896232 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.024544923 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.395976977 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.037561964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187245374 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.027414552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.655343956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034324495 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.775596164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388445413 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.022652316 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.012960187 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.013542796 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.029082422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.117767575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540578508 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037105692 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.688663592 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.347902273 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275247383 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.016965074 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.007153167 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.020723804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018218513 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.741200391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994146766 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.017605355 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531037195 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.018598817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.033809995 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.020514716 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.234553438 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228899446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.026109366 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.209499642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02829634 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.037405362 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.924437624 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855314438 seconds)
  done (took 1484.228830101 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.041905679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.027262271 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.027305451 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.053412085 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.06593371 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.063927393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.081427134 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.023333589 seconds)
  done (took 49.338171999 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 6.020000008 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.027552701 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 6.019450508 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.032098668 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 6.02478736 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.443716036 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 6.037254013 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.031353996 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.028137741 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 6.024775905 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 6.020981307 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.613752176 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.030374402 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 6.017567829 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 6.019967523 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.028000457 seconds)
  done (took 58.376207357 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.435163942 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.1030186 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.642915791 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.065671037 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.04569971 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.028937721 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.355798414 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.03554 seconds)
  done (took 53.665880875 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.028461392 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.029164525 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.0290351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.028791222 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.029822774 seconds)
  done (took 6.097623287 seconds)
done (took 1828.747349603 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.005250133 seconds)
  done (took 6.957433317 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.61885624 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.570206836 seconds)
  done (took 4.14265285 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.32218479 seconds)
  done (took 2.276120319 seconds)
done (took 14.328558359 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.029157243 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.028237436 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.019703829 seconds)
    (4/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.02210476 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.477065305 seconds)
    (6/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.010429144 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.254386906 seconds)
    (8/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.006137353 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.262750384 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.148130437 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.706143709 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.05984901 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.407447855 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.06013105 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.054772798 seconds)
    (16/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.509405732 seconds)
    (17/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.026604116 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.00669775 seconds)
    (19/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.036050455 seconds)
    (20/286) benchmarking ("sort", Float32, false)...
    done (took 4.970964125 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.144533558 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.250692648 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.074754037 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.156449988 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.875626384 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.026711874 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.006587501 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.050414617 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.02053714 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.048500655 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004937373 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.117456512 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.144874104 seconds)
    (34/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.006985059 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.070295203 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.03123835 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.140982172 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.035848709 seconds)
    (39/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.069462742 seconds)
    (40/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.964586355 seconds)
    (41/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.053405149 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415202981 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.471460699 seconds)
    (44/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.143732472 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.136656587 seconds)
    (46/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.0456682 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.225375349 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.295059182 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.547976286 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.013353636 seconds)
    (51/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.045736896 seconds)
    (52/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.240467665 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.03835012 seconds)
    (54/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.23838491 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.079774339 seconds)
    (56/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.049280362 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.617922687 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.039293886 seconds)
    (59/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.16471409 seconds)
    (60/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.030773126 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.034823939 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.547735535 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.275675614 seconds)
    (64/286) benchmarking ("sort", Float32, true)...
    done (took 6.027662143 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.514775081 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.141201959 seconds)
    (67/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.087252294 seconds)
    (68/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.918939644 seconds)
    (69/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.549208208 seconds)
    (70/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.819044929 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.718163251 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.15616967 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.160014506 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.806490121 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.52426855 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.014524501 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.426572314 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.412847408 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.04148831 seconds)
    (80/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.523738491 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.024790548 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.011957284 seconds)
    (83/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.059771399 seconds)
    (84/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.148635127 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.509281002 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.157777277 seconds)
    (87/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.01160402 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.035901091 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.896191637 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.954569739 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.121618862 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.136260464 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.617146708 seconds)
    (94/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.024250461 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.701567777 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.028960349 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.223102883 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.410020767 seconds)
    (99/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.969114252 seconds)
    (100/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.032026659 seconds)
    (101/286) benchmarking ("sort", Int8, true)...
    done (took 6.029882379 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.151444308 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.027565554 seconds)
    (104/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.022285559 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.012235411 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.129744585 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.012388754 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.112876041 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.011737079 seconds)
    (110/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.052936302 seconds)
    (111/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.152267323 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.536203395 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.054953496 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.781307978 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.284368939 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.665488209 seconds)
    (117/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.021924358 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.709055532 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.28785125 seconds)
    (120/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.012259004 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.150207424 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.027868541 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.278286413 seconds)
    (124/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.961031543 seconds)
    (125/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.380758876 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.018119504 seconds)
    (127/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.020030122 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407639497 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.126806358 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.275270126 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.738330051 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.059200893 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.013482015 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.194558493 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.142173643 seconds)
    (136/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.052377392 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.053713788 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.015967973 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.871397464 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.06664185 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.04957387 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.089122521 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.124914817 seconds)
    (144/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.110056205 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.053271594 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.853033356 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.360104669 seconds)
    (148/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.156311348 seconds)
    (149/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.482996653 seconds)
    (150/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.138268349 seconds)
    (151/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.092652465 seconds)
    (152/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431994839 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.019157825 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.02005762 seconds)
    (155/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.075873648 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.303892663 seconds)
    (157/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.070324334 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.027312158 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.335861262 seconds)
    (160/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.020969334 seconds)
    (161/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.043222235 seconds)
    (162/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.288444108 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.746841157 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.289587378 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.059043321 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.014921121 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.034075626 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.047745735 seconds)
    (169/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.094243491 seconds)
    (170/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.114448968 seconds)
    (171/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.073499928 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.023846855 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.073275452 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.203464203 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.035610912 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.261625659 seconds)
    (177/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.162799955 seconds)
    (178/286) benchmarking ("sort", BigInt, true)...
    done (took 6.031540745 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.029974539 seconds)
    (180/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.018223689 seconds)
    (181/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.564552618 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.064309978 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.106415027 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.721448323 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.194382828 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.009503744 seconds)
    (187/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.114433702 seconds)
    (188/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.01654003 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.868259239 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.017465965 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.585669531 seconds)
    (192/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.059150842 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.107801366 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.250255522 seconds)
    (195/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.749431473 seconds)
    (196/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.372369248 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.633803765 seconds)
    (198/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.318109361 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.035849692 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.850107484 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.119192918 seconds)
    (202/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.450057318 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.396497791 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.060287163 seconds)
    (205/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.366720924 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.552126415 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.018181897 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.13106423 seconds)
    (209/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.01857339 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 5.252661919 seconds)
    (211/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.580633803 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.0786272 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.032537433 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.276102089 seconds)
    (215/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.118963219 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.058467044 seconds)
    (217/286) benchmarking ("sort", Int8, false)...
    done (took 4.088201368 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.373396584 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.136582903 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.227294734 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.038223937 seconds)
    (222/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.01997934 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.036827194 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.867587186 seconds)
    (225/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.059326597 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.019802368 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.069199477 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.563580588 seconds)
    (229/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.019848215 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.095241463 seconds)
    (231/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.212853644 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.809021115 seconds)
    (233/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.462267201 seconds)
    (234/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.873614899 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.039938674 seconds)
    (236/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.811151128 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.235226906 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.039699596 seconds)
    (239/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.927271858 seconds)
    (240/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.51274219 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.065813345 seconds)
    (242/286) benchmarking ("sort", BigInt, false)...
    done (took 6.033859143 seconds)
    (243/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 4.693391984 seconds)
    (244/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.116968335 seconds)
    (245/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.134510397 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.416423412 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.020196494 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.061871424 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.699443267 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.182835503 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.706539148 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.358584891 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.83057025 seconds)
    (254/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.155159104 seconds)
    (255/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.304247708 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.45115193 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.035248177 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.078128843 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.947428816 seconds)
    (260/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.212943267 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.410163901 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.124376928 seconds)
    (263/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.366751148 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.865109947 seconds)
    (265/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.367782593 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.123676223 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.025674477 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.148806259 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.433559829 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.074382274 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.059600254 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.049788128 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.730700012 seconds)
    (274/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.746646975 seconds)
    (275/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.240374266 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 6.037404155 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.55648942 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.336102988 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.092448191 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.074193699 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.060919497 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.02278196 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.105979205 seconds)
    (284/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.05019282 seconds)
    (285/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.156324681 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.053613812 seconds)
  done (took 843.882306062 seconds)
done (took 844.837133038 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.207350742 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.160974712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.041188808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.095322102 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.04280093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.064714295 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.055204332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.042341127 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.043935754 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.041864595 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.041779911 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.257984767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.03885636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.043455197 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.043157882 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.139967367 seconds)
  done (took 38.334179361 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.068500183 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.053600655 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.150386449 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.069589913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.068655918 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.21534771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.103350317 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.053010541 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.202027846 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.0902839 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.529153471 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.075417886 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.048911856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.043179134 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.064005233 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.220670517 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.27630482 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.529543213 seconds)
  done (took 24.835172617 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.448016699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.060382741 seconds)
  done (took 8.481314793 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.066040532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.049200197 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.049825515 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.046350118 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.040455235 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.040667012 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.048376289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.043587069 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.229534894 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.166385279 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.05619853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.059797409 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.067849051 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.051123942 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.04638198 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.084957107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.21930989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.047931516 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.045580871 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.055059393 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.049188484 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.134311983 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.08742317 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.051379748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.162313635 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.235576988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.057060729 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.057082694 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.185602719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.048303545 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.049625507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.049804621 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.05112029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.973031622 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.48799676 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.047873928 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.072431953 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.059446445 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.047704527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.199491308 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.05156793 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.057201337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.051870552 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.466318911 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.18283713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.163322084 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.212531314 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.056203772 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.052418792 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.108623851 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.052447481 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.0533278 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.095657798 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.796158931 seconds)
  done (took 95.005381203 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.102431996 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.689068185 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.221352287 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.065340499 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.121410999 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070416363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.058169666 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.299568806 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.063281924 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.045049697 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.37665534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.569912701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.066965668 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.069182392 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.692387862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.112461712 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.044878582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.174484729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.059312025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.050846227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571397417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.051284482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.051502705 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.103039843 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.082278213 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.511271371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.305072005 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.942420986 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.071091704 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.045766813 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.533169361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.068577893 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.127177975 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.048445527 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.294622108 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.389407723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.352585198 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.051529456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.058520029 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.051616214 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.074180686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.510547227 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.368086668 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.045751908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.051962667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.516071067 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.046238167 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.056791408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.049103141 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.291889673 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.322015719 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.046229131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.319854331 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.055476544 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.050341707 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.100134714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.077247546 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.51197286 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.04662057 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.567441361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.097582006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.048458539 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.048234247 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.048195475 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.057579355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.374876243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.368745711 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.050837215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.374545988 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.522941203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.062500247 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.602618793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.957744024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.069874345 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.108511772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.047320592 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.008246936 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.524170838 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.069334613 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.048230254 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.356905251 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.047352735 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.361867501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.069511254 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.056021058 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604736556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.064972992 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.12212822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.0494341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.054561793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.098884544 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.055820513 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.328000084 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.098396918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.050197988 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.050025171 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.095804198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.049696187 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.071093435 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.054677258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.597935788 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.075954643 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.019015219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.071778103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.064758205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.05360999 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.05168885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.050514048 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.311515036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.919587754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.062401417 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.052984181 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.050535713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.061685755 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.105666546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.055432885 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.329575099 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.049995638 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.057391175 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.059649475 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111379115 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.113208089 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.051105947 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.052179898 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.928991936 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.35098849 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.066878586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.074113084 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.051598897 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.050857243 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.251441153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.075729225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.116063299 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.051905881 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78071173 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.110647863 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.055294818 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.993933464 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.061633836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.920135925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.080892507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.052686439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.332855901 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.316382985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.220402625 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.056355168 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.06698219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781428588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.080687459 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.228897896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.067886957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.206690559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.297891472 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380160643 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.05288113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.696107024 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.054558497 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.306557842 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.051846794 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.350951204 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.564195845 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.073711762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.057099672 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781791353 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.750409556 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.822718478 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.058373348 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.369354178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.072256575 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.049508397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.054226263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.053839668 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931464333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.057477642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.058711779 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.054562086 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.054397682 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.12201396 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.243305772 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.069263251 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.063131998 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.532236733 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.097513131 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.056050657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.081899044 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.055696167 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.462310745 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.150088498 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.053631564 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.098422266 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.054894858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.058143109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.60314333 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.018612096 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.056199306 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.244715558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.706658915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.076560289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.054902434 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.068907838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.677007587 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.55448275 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.091493887 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.343421535 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.062617494 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.091269443 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.1610467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082923286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.549285761 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.057680522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.055686101 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.681359405 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.07536359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.134076235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.056291033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.057412357 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613389989 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.074918677 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.06084113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.210467204 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.073651836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347921809 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.058671495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.088377696 seconds)
  done (took 1057.194740296 seconds)
done (took 1224.824880838 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.090564263 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.085335026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.068220161 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.08863342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.179464427 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.244379844 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.079035682 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.071272241 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.11666622 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.117750684 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.067226934 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.24341203 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.070302409 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.068129452 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.06890117 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.084373933 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.058477347 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.076247364 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.085577253 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.078573652 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.08548523 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.067449198 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.119227519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.244145957 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.073094006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.072115636 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.073266657 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.088062035 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.1818309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.072632793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.072135249 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.08115081 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.061704719 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.073200833 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.065709625 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.08925745 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.080749483 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.080753387 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.0737359 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.101977849 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.389129991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.06976953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.071753701 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.071912389 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.071380525 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.076224112 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.072312712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.076745114 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.084442743 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.086354991 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.376326847 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.08597754 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.073892279 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.072534699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.083525744 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.07141696 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.075258547 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.08877027 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.091103097 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.088842731 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.054259495 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.082766984 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.074310134 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.088357543 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.079519013 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.415235201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.067959847 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.076551857 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.409161623 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.080797903 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.414071311 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.080494191 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.074224509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.087332805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.102352236 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.068515713 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.074490213 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.072863518 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.080419904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.070461725 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.083260161 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.087188162 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.079115078 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.073664155 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.088585025 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.248747845 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.084779621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.074240875 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.083236798 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.091984468 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.080129697 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.084364592 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.077318972 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.070052238 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.084465818 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.077195377 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.075961608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.075973886 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.078435666 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.084953604 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.395739931 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.094263035 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.07117355 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.07095501 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.074246436 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.087586162 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.39247769 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.075174887 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.097016338 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.122770788 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.078048584 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.061697452 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.084777276 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.094111203 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.083622382 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.079121446 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.070214296 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.06033867 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.388803012 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.090128205 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.078759818 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.073837263 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.094267327 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.078451801 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.073277743 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.072334966 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.082548054 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.090663982 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.196446639 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.086551107 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.106544566 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.074359462 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.080617429 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.106214759 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.093854056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.108137093 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.080159394 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.094730988 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.092718273 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.073575638 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.088441719 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.087379421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.078116748 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.083605105 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.071797504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.106525116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.090211148 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.092283621 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.100103206 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.198111617 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.076125162 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.064154446 seconds)
done (took 184.960053276 seconds)
SAVING RESULT...
DONE!
