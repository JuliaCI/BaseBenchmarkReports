cset: moving following pidspec: 11959
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.39004947 seconds)
loading group "string"... done (took 0.506103979 seconds)
loading group "linalg"... done (took 8.66440903 seconds)
loading group "parallel"... done (took 0.186944761 seconds)
loading group "find"... done (took 1.319470228 seconds)
loading group "tuple"... done (took 2.038095007 seconds)
loading group "dates"... done (took 1.377149878 seconds)
loading group "micro"... done (took 0.216840419 seconds)
loading group "io"... done (took 0.557624345 seconds)
loading group "scalar"... done (took 43.158615712 seconds)
loading group "sparse"... done (took 13.252796919 seconds)
loading group "broadcast"... done (took 1.130085198 seconds)
loading group "union"... done (took 14.873266137 seconds)
loading group "simd"... done (took 5.006487283 seconds)
loading group "random"... done (took 10.059571247 seconds)
loading group "problem"... done (took 2.079402078 seconds)
loading group "array"... done (took 23.808570936 seconds)
loading group "misc"... done (took 1.09501733 seconds)
loading group "sort"... done (took 3.568808128 seconds)
loading group "collection"... done (took 21.571806618 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.480646896 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226209712 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259799499 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149832596 seconds)
  done (took 2.004275144 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.164458702 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.071094298 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.088121501 seconds)
  done (took 1.043671852 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335954423 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253485074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225358446 seconds)
  done (took 1.496170713 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.240233534 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254724679 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.311710622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.362796231 seconds)
  done (took 1.946235278 seconds)
done (took 7.18285649 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.474908339 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.828459972 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.482871621 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.115133041 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152786657 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125760561 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.286318722 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156217447 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.115414567 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.078794267 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169672029 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.349465997 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474581361 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.921983112 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.083477151 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116059216 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08228357 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692620733 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078607101 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111384653 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510744465 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.103148008 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097712497 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139816103 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.200454182 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11617877 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165490983 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08536746 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685646584 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099595419 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176055422 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.079837496 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165892998 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.189994003 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076185569 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10676421 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67344585 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185974567 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104905804 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098648819 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680830585 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077449783 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189865921 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097865135 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.080970401 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.176375961 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103943363 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092258495 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083009736 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09210244 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156886851 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446376545 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109437015 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.137527501 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090369655 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692134633 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090799715 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15040155 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128145051 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104626558 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.076742173 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085425324 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17113749 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088926892 seconds)
  done (took 18.887944392 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118391621 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123128933 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075999872 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153185426 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135326409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079185338 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097454201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075795787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121442435 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179955962 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11969073 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139309958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089699794 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095793128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114735257 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245676613 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102041435 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117472009 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082233817 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101407299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118204388 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110675994 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088934043 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105669518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165448999 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202683604 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105984814 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12197433 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076888108 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108496506 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139826202 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156187614 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074661325 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075587926 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175150835 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119632381 seconds)
  done (took 5.018103668 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185159841 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098931451 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169448185 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162572585 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142704968 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1531666 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109309066 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253800629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186536992 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16094395 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125736661 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11368018 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076800049 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093024131 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077231675 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695238342 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16318627 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151412617 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095951647 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096226411 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079818288 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384272687 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081919219 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073365869 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096344018 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06810622 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158731557 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096339321 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.185041957 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096943426 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099026734 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130052967 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18947797 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109189906 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13000872 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094894571 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074056682 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178622357 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081584198 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.125886504 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093866622 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101761143 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132423948 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132554676 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074427663 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092492267 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204326568 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090785635 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090589949 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12073395 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.997944941 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17610215 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088473598 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073186779 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325403133 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111771108 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076643328 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073211538 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280505864 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110033226 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093373584 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07590046 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094532726 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077722274 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388497198 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09297718 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.749716228 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079800926 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085344735 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093579641 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092422425 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083620089 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081874885 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112048277 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074618262 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095253487 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074508046 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09219464 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077236174 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112131358 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081265331 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093673923 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144809544 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089332071 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095791608 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12262872 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07887755 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091693015 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125024812 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078729382 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075781353 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133123545 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076129874 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091460437 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111557103 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077241736 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138258923 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09225963 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165015502 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075346184 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120077356 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0807769 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125533473 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108305373 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077245667 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099552693 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072577413 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090993227 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074343837 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144868665 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091049427 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07778007 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075915986 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10782405 seconds)
  done (took 22.249618021 seconds)
done (took 46.846340447 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399995409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48946974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.04199872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142583066 seconds)
  done (took 2.799323452 seconds)
done (took 3.539278469 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083962771 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086965048 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103874196 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084539585 seconds)
  done (took 1.087482383 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123811961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.099052444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.088082597 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.098221017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.088032169 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099196524 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081767125 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.143965894 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079670756 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098844192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079684437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096366824 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083480875 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099259143 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077329702 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0996385 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.087621252 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09628678 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.086521631 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097707743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078588595 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08128985 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101318326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079117237 seconds)
  done (took 3.018786019 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098658888 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077921344 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098008385 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077646421 seconds)
  done (took 1.093438669 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086833548 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089977477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108337324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084949044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.108523411 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090468515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094261715 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076227593 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095347735 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08473368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091305102 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098840246 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108845264 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084602496 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102688746 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.078126769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076141449 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107980887 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083393056 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101783579 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077669083 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101087177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075247218 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108497614 seconds)
  done (took 2.958355925 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.155094074 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103009939 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09697893 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096552522 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.117726765 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130237495 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.112380184 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.099136093 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116618088 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.088652575 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094254291 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.124909527 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106131211 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.072678933 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089141156 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.073118507 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.084472236 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.102281931 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.075410865 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102851445 seconds)
  done (took 2.781356972 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095396409 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106018879 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073146961 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.076745146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101122196 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.080522969 seconds)
  done (took 1.27541101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07715022 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075001092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091902008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074531279 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078227637 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092842234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073323476 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091112744 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075199254 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074036074 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092328081 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07349707 seconds)
  done (took 1.714171174 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.367928778 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094560978 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093611406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074210606 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.082030948 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092562768 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.088367503 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093066598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.103606067 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095081519 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074448625 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076109406 seconds)
  done (took 2.119805574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197694364 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095922382 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226908482 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311460425 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134427529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140617777 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244857697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141959676 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.158809655 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115319843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169075199 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134806262 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112706472 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155947795 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117387677 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14913259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149534676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173928333 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108211104 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197269325 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138801254 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125794835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155578346 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12984131 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116094214 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13526205 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.081244299 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105631769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148988133 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144340749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149856424 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109415447 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116952881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173386359 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201378474 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156629191 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268943113 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111770858 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.129934641 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143547527 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222386832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099802325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186616916 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113441589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10731946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156883907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134019889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157320304 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.090719381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117838011 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155919151 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152799975 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.155357578 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11425106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268330799 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128108457 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104682453 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276587189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178598127 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164971639 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126768084 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096747098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159832055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157871644 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15503946 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.121317175 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.143372756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084533945 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148919112 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171489446 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152344389 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138538676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180281895 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094697456 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139886127 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144629258 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12885535 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154293689 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136575379 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080530907 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125986582 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114546706 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089500294 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.182927712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082161515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176528104 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11388657 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.155270432 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178250442 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134246976 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13691414 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139804684 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140832153 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105988387 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094989769 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104798269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128940512 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132522654 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091493462 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132518563 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119924723 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087421812 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128912995 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100148932 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119759728 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105466247 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139814324 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140254827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084760388 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14092702 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125762279 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10955619 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143640885 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159880401 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110363421 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109135237 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169953256 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115723787 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112538425 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150659012 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160220417 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133134043 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095854981 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143792975 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167528912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119184998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166798769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1185707 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092530988 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117072915 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136753062 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132851174 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128248518 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107810282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.129196971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166270294 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083698583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114708597 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149860743 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086720097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107079913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120610085 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0944794 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113982449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098772111 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.114495836 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132238516 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13678018 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128551607 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113568084 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119223786 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165211481 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111755642 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126935831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106851894 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096761272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.155212197 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162722358 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088479369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189335175 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125502748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188585369 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141185687 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090366297 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153331449 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105897526 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078710533 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140503839 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138840949 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138100203 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158938684 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168598205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.145222249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128831058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123823367 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139485052 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122886624 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131775063 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114634395 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137142897 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115966384 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098962244 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.083016619 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105184397 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119711978 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090914214 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109143313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157085227 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141031314 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1626333 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139131073 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100088643 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157776696 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104191263 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141906202 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148759319 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115782441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159292784 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156299701 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124605214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120194635 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150808632 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09584964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082782558 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.110396855 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140825237 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091812196 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110872855 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101068792 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157687837 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148338111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126736511 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193211794 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123389281 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167202688 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098132523 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14503847 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124862878 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134204986 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.144219923 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094845654 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126725325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153299626 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119525626 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165542034 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138114176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144787478 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173424423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126371214 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089550267 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126230432 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142041874 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098409239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142519954 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123375501 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094485202 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128214692 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104535058 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084574457 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147397161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121320815 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153094225 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123761239 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144875285 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085564548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120354742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138959696 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122699331 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.074446361 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141848888 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159983397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121406134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134731801 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147659153 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089404749 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.275720508 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164093953 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158219284 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113854033 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119533072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118379694 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135158443 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138932592 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153952761 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124840643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154793775 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11565369 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113170057 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112517916 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104098708 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126422042 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.117150474 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090439332 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.12961673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113410657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153458388 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10050866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135025528 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141518289 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126197347 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.10120506 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120564602 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179755749 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135827504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153847236 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106905393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141005962 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190543066 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083502234 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087482863 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105105699 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153545729 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090501047 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135736026 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.159777696 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190302289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136383721 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140590994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097866062 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076874503 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135636912 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126387329 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173249973 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120790246 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1130068 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161508916 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101388933 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107638931 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138376262 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252398891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102954259 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148564795 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.090657387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245757566 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085375053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108847933 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135684865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145805995 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.096182522 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.141403378 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143633789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102429243 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136690369 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114540636 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162734672 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181574001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145828561 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147648822 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.109425478 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114681237 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139410237 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151352543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122240231 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113205114 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121598899 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16002153 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163056095 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111252253 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140105268 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139787414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117095115 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164489002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092882777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173173745 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108457965 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142309952 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098490078 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101532852 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134224029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.160604638 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111363811 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12867504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137166509 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111214384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085106901 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129515199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134767334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118332326 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.084559146 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146786179 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100536086 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120988234 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155730733 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109057168 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111445553 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12264494 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115817971 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119949656 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104913912 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113935528 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.115579227 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156363614 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108319174 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150725626 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152357045 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140107915 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136851711 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102612035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644553074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105805961 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138008181 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124088601 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159844386 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12539098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143344971 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140292851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107558578 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143307378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128451411 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205462272 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141131784 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.134224312 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090156838 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122546422 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099755182 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109520207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127119207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13870947 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098954485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.114867965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.133569326 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103290182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110577179 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096274822 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158816156 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123563039 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150891171 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155046941 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115151253 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143383861 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146219607 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08854373 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.13741215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147910096 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118741147 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108046705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110165108 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111475355 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139757199 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101599211 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137516722 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135981109 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119479073 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140685081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111463627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136738335 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101223421 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138031404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108118828 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.131318577 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114320076 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108889082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.086408663 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131232659 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130853748 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126659815 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084544894 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.117752681 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155060211 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10020406 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091300642 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269483334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114893137 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165925007 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120251293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111797302 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101547639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124555434 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.129756505 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135761036 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.089179721 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109556411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089119815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.134912972 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10147101 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13164574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161914261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133956314 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176166673 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113260381 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253235456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096452093 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131633713 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.080907235 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10825367 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120700922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091948546 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121371417 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166415875 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157404788 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124476111 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092523106 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107831933 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08252275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111258665 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118474353 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130358818 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136289312 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120790946 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.072742701 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122048363 seconds)
  done (took 64.409694017 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123384596 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107723362 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124700059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.288768055 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14557963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229576094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.186201249 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214419126 seconds)
  done (took 2.247098791 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.167100696 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.115679731 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.112140945 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.076721019 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132739609 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.300412619 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.110352558 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.075779118 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.124554675 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.112179225 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.095358188 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.477336287 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.07554284 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.096668835 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.089168387 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.076436342 seconds)
  done (took 3.057905614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.693616979 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.393185432 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.094415292 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.152946821 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141530972 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.080615075 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.564388435 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081059054 seconds)
  done (took 10.028428194 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.108015065 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.103592368 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137993426 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138269637 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104887023 seconds)
  done (took 1.42867603 seconds)
done (took 97.961072867 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.090980749 seconds)
  done (took 0.91307675 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386324041 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064701014 seconds)
  done (took 1.312617655 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088991023 seconds)
  done (took 0.925450315 seconds)
done (took 3.982791535 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.238523705 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.141768105 seconds)
    (3/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.108955185 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.279501018 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096446456 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109097983 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.091689081 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.084660794 seconds)
    (9/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.127224917 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.208822898 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.223943556 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.112243413 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189335366 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191234707 seconds)
    (15/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.1524 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117597064 seconds)
    (17/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08841686 seconds)
    (18/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.084418061 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.190383748 seconds)
    (20/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.158786076 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125085855 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07724792 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223062915 seconds)
    (24/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112752008 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.220738132 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082605496 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.107719152 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103346838 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192699173 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234731736 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.147099866 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.236910146 seconds)
    (33/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200331154 seconds)
    (34/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230384494 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146711504 seconds)
    (36/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.203856066 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196804853 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151075393 seconds)
    (39/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082660094 seconds)
    (40/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.151074046 seconds)
    (41/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109891916 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.104665239 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12854888 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105740918 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085734523 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.107115289 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158422856 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.115228119 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.156131746 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095109895 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078823767 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108986519 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076152404 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086238895 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.111456047 seconds)
    (56/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.082872429 seconds)
    (57/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.230573981 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214863959 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123770495 seconds)
    (60/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.150891077 seconds)
    (61/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.161977534 seconds)
    (62/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084730993 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077497657 seconds)
    (64/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086038458 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099510886 seconds)
    (66/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089331407 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.102318532 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.077067028 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104579192 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.101150439 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.194012025 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.180386561 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.195162011 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.148609148 seconds)
    (75/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169374392 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.084558179 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.148113389 seconds)
    (78/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168443314 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064599157 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110491593 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.104604213 seconds)
    (82/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.105695146 seconds)
    (83/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086529802 seconds)
    (84/286) benchmarking ("sort", Float64, true)...
    done (took 0.22713978 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184709708 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084515803 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109121962 seconds)
    (88/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.103946162 seconds)
    (89/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207240823 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065050814 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.102235431 seconds)
    (92/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.063891216 seconds)
    (93/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178936523 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067142343 seconds)
    (95/286) benchmarking ("sort", Bool, false)...
    done (took 0.172186973 seconds)
    (96/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.107454112 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076599902 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 0.216428723 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127944536 seconds)
    (100/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084396354 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110904945 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.083058497 seconds)
    (103/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120519136 seconds)
    (104/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168957928 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.092814091 seconds)
    (106/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.083455461 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091341554 seconds)
    (108/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.105968678 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096806101 seconds)
    (110/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066887384 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108394817 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103283868 seconds)
    (113/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.10555989 seconds)
    (114/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066741585 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.076465504 seconds)
    (116/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.101675453 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077812554 seconds)
    (118/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.104620532 seconds)
    (119/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.084940582 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067324206 seconds)
    (121/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084482964 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.083721845 seconds)
    (123/286) benchmarking ("sort", Int8, true)...
    done (took 0.214855409 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096881741 seconds)
    (125/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087156587 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092989262 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104043735 seconds)
    (128/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066659966 seconds)
    (129/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106664196 seconds)
    (130/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149446997 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177612603 seconds)
    (132/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106066957 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106592216 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099002607 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.083499324 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088068964 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098629171 seconds)
    (138/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.095041735 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.178296387 seconds)
    (140/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.24141595 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07747761 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088933652 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.118563856 seconds)
    (144/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.146203857 seconds)
    (145/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076087353 seconds)
    (146/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100221968 seconds)
    (147/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.102855143 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.123514213 seconds)
    (149/286) benchmarking ("sort", Float32, true)...
    done (took 0.226805956 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067496961 seconds)
    (151/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.104244683 seconds)
    (152/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078283314 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087517699 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101492604 seconds)
    (155/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.088024344 seconds)
    (156/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.095373778 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.172261377 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106271765 seconds)
    (159/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076378132 seconds)
    (160/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100565357 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066430944 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079950943 seconds)
    (163/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.093566843 seconds)
    (164/286) benchmarking ("sort", Bool, true)...
    done (took 0.215606716 seconds)
    (165/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.117262764 seconds)
    (166/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097198185 seconds)
    (167/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07565789 seconds)
    (168/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.080795282 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.086121477 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068157732 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097896823 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.080061844 seconds)
    (173/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.187434471 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078609425 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100361159 seconds)
    (176/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.065031746 seconds)
    (177/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085050261 seconds)
    (178/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109020181 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.152648399 seconds)
    (180/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069409218 seconds)
    (181/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066429372 seconds)
    (182/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.139204604 seconds)
    (183/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078135789 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108107193 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082230006 seconds)
    (186/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172330117 seconds)
    (187/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.064887158 seconds)
    (188/286) benchmarking ("sort", Int8, false)...
    done (took 0.180586913 seconds)
    (189/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064649187 seconds)
    (190/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097175551 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.132967205 seconds)
    (192/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168694082 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098105177 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067878292 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068033565 seconds)
    (196/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.096217058 seconds)
    (197/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077290971 seconds)
    (198/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169628812 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078833648 seconds)
    (200/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.147635751 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085504785 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 0.162101222 seconds)
    (203/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.157429489 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098023524 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.064826872 seconds)
    (206/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.087026766 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.104574022 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100945071 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076645688 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.077652996 seconds)
    (211/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143673117 seconds)
    (212/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.142919071 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075930586 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078218473 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090927505 seconds)
    (216/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0673449 seconds)
    (217/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086036598 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08033027 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079170729 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.168979091 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070340052 seconds)
    (222/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087719587 seconds)
    (223/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076844636 seconds)
    (224/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.107896927 seconds)
    (225/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.073041618 seconds)
    (226/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068460752 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100636316 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065595854 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101965925 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075847238 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.103394621 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090271572 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077283869 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.104521314 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068452918 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077202055 seconds)
    (237/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090523295 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.160145825 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076512173 seconds)
    (240/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067293486 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.108318927 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066608281 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.114094592 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06828444 seconds)
    (245/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079389685 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.12284366 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07858248 seconds)
    (248/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112176806 seconds)
    (249/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.065416616 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099177675 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066308543 seconds)
    (252/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.102951253 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.086909388 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066694852 seconds)
    (255/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.087023483 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.077882392 seconds)
    (257/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066712678 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089173483 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.085124297 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06863787 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.097324525 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174202226 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075753761 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067476996 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 0.165034995 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163665758 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097881813 seconds)
    (268/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10096121 seconds)
    (269/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.074378046 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.122530208 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.102856655 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076115082 seconds)
    (273/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100105589 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077614473 seconds)
    (275/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.086384456 seconds)
    (276/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.074775371 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079013524 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125430557 seconds)
    (279/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065820604 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098069963 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065288103 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071740395 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100350595 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065940885 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08751984 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096150324 seconds)
  done (took 33.355509078 seconds)
done (took 34.188702944 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.113665186 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134702879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.092919551 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163864804 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079460086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136319406 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.111583431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115400725 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07953635 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079817372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101192416 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081275174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166386587 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079750721 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100854979 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.080883188 seconds)
  done (took 2.622811806 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175637238 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.205848737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120129565 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078262412 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105676528 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079082814 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099530756 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084621442 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079915164 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100107628 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079194446 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100375119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.078684093 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07966001 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101285567 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078848743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099664973 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079648867 seconds)
  done (took 2.702031201 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107725853 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.137070666 seconds)
  done (took 1.121793159 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115394447 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171100059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287119194 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.151181603 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118503696 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096732768 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152977785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12234972 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200677589 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125220855 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124297065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086148773 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133893427 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.089777964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10952719 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.085876061 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137262548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087578966 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109974724 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.087545701 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132928601 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079952576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11129022 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087237758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183515229 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123549951 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101605912 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.078676153 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087684241 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109432313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.085294631 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114183295 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124327912 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.145138508 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.091852159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166324892 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.087332007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106630468 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088167697 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106386181 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090188992 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112625709 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093655463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108248228 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079255018 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107592481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.078900618 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07925299 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109637399 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088190746 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109334694 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086715986 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165369976 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088340186 seconds)
  done (took 7.074261493 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.811565826 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147264088 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084667039 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885919451 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134745373 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121331938 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778081998 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129979764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226896304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809709081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099367051 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119328332 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222169783 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.228784894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930557871 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307377864 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.683652626 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122121106 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111893433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146381494 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11391517 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132345802 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102506274 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421820092 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.106682561 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083730654 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111512293 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094394504 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152691032 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106707355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087355126 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191506062 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240408407 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177055757 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107840978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082943141 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105182203 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160221959 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238175319 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210265727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170638078 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080765311 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105038067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094663624 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124562708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080774509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177696797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166596526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165183709 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108703176 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095230716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114676138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093460289 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155210077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102531478 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316108864 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284647808 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105617512 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092212287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122533578 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256674049 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084143397 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220814736 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130389261 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18741726 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104822818 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750948544 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15813548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105979098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092061189 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11225965 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089262151 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11515474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159394966 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401070957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096160652 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109575868 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083148813 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223105893 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084467537 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105005021 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159926227 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085635535 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112569807 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097162559 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117070652 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16188487 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.224710895 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118379202 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091088513 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110694952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118097253 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.08565615 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.205139865 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213798491 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151985418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205422304 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117827826 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15683473 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159181619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116285209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163097781 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090513781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122068784 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11699154 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188033536 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136337121 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106426137 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0887307 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112551964 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137965918 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087050452 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112488916 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161690685 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.452844229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158296502 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103383304 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087904955 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113477424 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15571382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090721809 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255191924 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092339287 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182169874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090415188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102838628 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091725354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1554835 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118120525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113677694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095531292 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114058145 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.226508127 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211286511 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09782608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237057596 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.152253303 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113611078 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164588373 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113439428 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162618241 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093306076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116395862 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107082364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744374593 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117628619 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091077958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110895968 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180364519 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086642473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105660242 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083962001 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080891323 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7703733 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086406879 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10365851 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084871509 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114424125 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091754249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112447218 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087942837 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17569144 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202875763 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116262132 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09038021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106173713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154950576 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107154584 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085593366 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084149709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.343253011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091902928 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110001206 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085166439 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163324832 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173567489 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193247063 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.585137248 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084088606 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106371487 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200472595 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105468624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282204549 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091628433 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220918325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157693849 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081602124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301495727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159579109 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18065305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107733463 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.162981796 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081095495 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111420164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15604982 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083748226 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112370091 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151332171 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119710458 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095644149 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965137394 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083334273 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241391258 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082356657 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.160388191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107331691 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094431455 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286404896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083125247 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12295472 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155702239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109173795 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084336262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847044774 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105394129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.093442778 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115430536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21440314 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157999308 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111879386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091962163 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116536837 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155204574 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201703473 seconds)
  done (took 42.113589506 seconds)
done (took 56.509485852 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09363934 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14074133 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.088336694 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117136213 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.092212491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1146243 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08684009 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091255288 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.114379212 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09433314 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.113090845 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068549502 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11343594 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090598002 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.111262661 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110233845 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113819484 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.085566267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082146741 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.100062493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082127694 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.100738343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.080023061 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068967518 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.112283199 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086508799 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.107405423 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.089864158 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.101238716 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.079056689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078214206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.107797243 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.078221845 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115825587 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.085107947 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.104504445 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.090176353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089042353 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.102518561 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.078091355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.108774445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.079001739 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.085479315 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.108478216 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079810582 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099115147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081607547 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.114344406 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110582359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084001498 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.108849442 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.089523084 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.110760174 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.085146665 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.100577128 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082005888 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078422683 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132389713 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081812657 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108325564 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.086431347 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.109107621 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077578062 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.104368749 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.083270453 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.090012503 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.112001486 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077828599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111387735 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.084205023 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.100249461 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.083016302 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078969049 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.101177445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.089115217 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.113005784 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.077749805 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.081465895 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.108373497 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.083934593 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.100816251 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.081314649 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.080666053 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.103653995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081234917 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091181485 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078140468 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.085611847 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.100587785 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082693947 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.10820665 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.085909664 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.080967203 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.112862668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078475711 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.101033488 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.079363367 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.080761734 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.103365818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078495493 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.101665162 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082317056 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.087965549 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.102754354 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.081343948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113865776 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.078967069 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.085369045 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.101421679 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.078065061 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.118574826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.089281384 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10166789 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084759609 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07855537 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.104078442 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.078368496 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1020477 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.079285004 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.079755803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104023666 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.079249155 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082517129 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.102990087 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093522563 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.101722661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081446586 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104268714 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.079190695 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.085237422 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102806178 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.079222692 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081319166 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10019728 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082137196 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.101804355 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081286476 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082209812 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.105334183 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081388716 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105369685 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.083579372 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10356184 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07892101 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0784678 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.09591108 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084920527 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082161376 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.103067714 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.079287487 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.103373348 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.078668514 seconds)
done (took 15.069694881 seconds)
RUNNING BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.968604981 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.961017806 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.948613707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.965305946 seconds)
  done (took 24.745628284 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.970109295 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.969085812 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.969744392 seconds)
  done (took 3.81088416 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.206394712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.963183995 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.965255696 seconds)
  done (took 18.037001559 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.131935641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.953117275 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.217435337 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.577266803 seconds)
  done (took 7.782894452 seconds)
done (took 55.281434296 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 5.999481279 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 6.30347498 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.024759654 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 5.976736903 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 5.973925044 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 5.962764403 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 5.975130965 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 6.022113688 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 4.364847911 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 5.97151495 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.886296368 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 6.053648165 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 5.979114294 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 6.478648251 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 5.971934192 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 5.96329157 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 5.975048117 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.359554955 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 5.966258404 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 5.982405286 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.956984677 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 5.952887374 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 5.983405832 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 6.004652022 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 6.048427465 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.984144739 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 5.971356759 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 5.96398274 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 6.1952046 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.979200821 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 5.971562729 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 5.969643427 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 6.003587345 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 5.974361983 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.062838934 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.989887422 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.183241488 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 6.045868827 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.956124053 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 5.968819027 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.153889568 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.303972547 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 5.965598574 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 5.966068998 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 5.96524391 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 5.969661708 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 5.954314551 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.634052972 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.969567492 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 4.211071274 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.011412951 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 6.485109134 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 5.979992967 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 5.978014408 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 5.976154083 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 6.390139791 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 5.992047661 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.016422408 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 5.972033071 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 5.973797335 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 5.968654137 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 5.975282116 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 5.968985778 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 5.97278632 seconds)
  done (took 365.015391786 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.967611855 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.032374773 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.111252822 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.012487657 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.531619457 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.169463135 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.132294088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.598030357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.983357307 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.980066073 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.300375367 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.969593345 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.352393536 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.939740913 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.985209334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.982398512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.254548801 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.329899932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.991548925 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.148751298 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.991473807 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.133694821 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.056440798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.233147643 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.983474387 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.030172613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.973226835 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.981719533 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.161874365 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.201257475 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.015291415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.014063376 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.474341467 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.82283907 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.980524014 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.003223136 seconds)
  done (took 141.73603107 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.969278726 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.969691406 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.968867479 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.995262171 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.971332126 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.420325432 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.42050522 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.480662196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.405080671 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.935596933 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.11892302 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.969977493 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.058125252 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.982571064 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.970077746 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.986574748 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.996145389 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.972094416 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.972195998 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.423336404 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.985455465 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.074116207 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126649323 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.981790293 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.995981058 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.363675911 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.971241256 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.996510268 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.288341482 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.009686442 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.971493359 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.220412434 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.885659002 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.081950151 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.974709596 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.996811783 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.97506956 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.243588196 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.975163252 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.971519612 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.972527312 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.975636117 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519022508 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.972436463 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.424659418 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.975873032 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.801230951 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.971839673 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.973163082 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.971922817 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.792611971 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.366790597 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.969715537 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.970976022 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.973207774 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.97091453 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.971478843 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.996497997 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.886151807 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.055457171 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.970180917 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.973292185 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.99377927 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.974438464 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.19193061 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.97470035 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.100867449 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.035903953 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.185095939 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.414479031 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.973371748 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.059331513 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.084201957 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.970154186 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.970799529 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.971642262 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.96871303 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.076300387 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.972774842 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.298839044 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121826943 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.978683375 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.915519998 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.061050353 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.968140421 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.225212968 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.973376582 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.968974015 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590159642 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.059837139 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.969672452 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.970719823 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.968821148 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.969860556 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.295074115 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.403599491 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.075161967 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.973378024 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.947472175 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.974203315 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.307210887 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.390088852 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513309012 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.967555623 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.078664459 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.123572208 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.977957066 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.975096191 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.972559866 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.917078616 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.975488473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.028195152 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.970677671 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.360471055 seconds)
  done (took 336.631482316 seconds)
done (took 844.285768919 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.9752953 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.034016534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.989549826 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.977808604 seconds)
  done (took 24.883361332 seconds)
done (took 25.791364258 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.972470441 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.969899908 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.969282582 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.969895849 seconds)
  done (took 24.790966528 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.014930516 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.016341387 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.018344667 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.02708003 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.01792947 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.014064253 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.007534124 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.009488524 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.024388384 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.01811523 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.016733433 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.019282293 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.016635031 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.006595175 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.017104181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.016513793 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.025428456 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.017166801 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.009132971 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.021194417 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.983239415 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.028809342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.022259532 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.984267352 seconds)
  done (took 25.262690923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.478865216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.050739663 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.133292413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.033555774 seconds)
  done (took 5.605335717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.033120461 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.036094485 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.049432624 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.08748355 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.124675572 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.044593097 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.010017136 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.99956851 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.989347771 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.035426923 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.111590493 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.050816178 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.142008202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.9757801 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.186044429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.982568938 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.98387255 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.035874308 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.086015982 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.112588894 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.980025789 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.035665923 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.038480148 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.053184936 seconds)
  done (took 26.095630212 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.981855316 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.000750088 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.980664397 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.980562246 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.992366168 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.982827971 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.983482108 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.985897226 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.981426305 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.990452147 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.981552933 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.996041149 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.984862448 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.98238757 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.985871041 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.984260768 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.988016004 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.983381492 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.98202157 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.990007238 seconds)
  done (took 20.632063122 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.975070101 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.829038166 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.325667678 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.229428442 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.974260557 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.974969667 seconds)
  done (took 25.220856348 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.030055431 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.147580908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.983240299 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.235879773 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.317604903 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.98685022 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.984363589 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.172728108 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.393329182 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.372958628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.020942141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.038883592 seconds)
  done (took 14.594255978 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.974483748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.979392328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.982147907 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.996750681 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.019879787 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.988935134 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.989002205 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.977016514 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.025864172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.02912046 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.988228086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.024786387 seconds)
  done (took 32.890018648 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.064331905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030056105 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.754438928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.06517024 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.702269979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.187636228 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.990383828 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603050487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.980881698 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.252785505 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987149582 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.06453567 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.234563782 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984081712 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.981387114 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.806987179 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.205852415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377809966 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983135097 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.476426373 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.002957416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.97618373 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.400618093 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.150314469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.195150267 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955630804 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.23868677 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.752126169 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.186986504 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.994419782 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.991879859 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976821841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249243437 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548138753 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.090384384 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.13659261 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982610735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.606067639 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.969755946 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.301718872 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.9534479 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.989821668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.984325876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978012844 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.914074651 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977373758 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606657063 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.979868705 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.689931822 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.977108255 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.159826407 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.076552558 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.982005124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.548928591 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004181185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992230041 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.982289159 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.070138358 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546490608 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535043732 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987628026 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.914983252 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.98908654 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284240145 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505087058 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.986002426 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.983768755 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.985037461 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913627237 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.271178495 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.990626614 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128038313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.000305067 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630838277 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623580389 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.990360681 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.907799434 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438051928 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.982486945 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.915212728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.209564764 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.76009188 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915726561 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.92655308 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.91446499 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555632121 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.990211343 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.383644758 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.00307435 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596698138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.148797815 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.003334057 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.004949091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.204800868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.867749067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980563812 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.978844986 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104568479 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.999078408 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632454757 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931099936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.980107841 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.23610224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.191503115 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.982029173 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.791974715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384225635 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999769948 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.998764649 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.984379456 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.137508305 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.461246323 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.997540221 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503106218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.001657824 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.756310795 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597447795 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982356408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.997574311 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.981969256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.201570166 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.633138848 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143324647 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.049077064 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986302161 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.982031413 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.277121128 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833825451 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.141097675 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.1320161 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.003206106 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.992727614 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.982986576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928107801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.976411905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991550565 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.758069195 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.20497836 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.988732939 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258306394 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916801966 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130752966 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987097 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.201484621 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.918579682 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.984136418 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.242207289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982627514 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.983718266 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.997039573 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.999665959 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.082963628 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.004380458 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.982195001 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.241606681 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.98687263 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.988759104 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.419036306 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.765011012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987141479 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.990351418 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982402407 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46048539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959930183 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.988087037 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873593065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.999247737 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.052043874 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.99020767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.142130039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.698614744 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992435698 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.985608133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.983897181 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.207654361 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.994761072 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.268111165 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.064030338 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.378669766 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479702814 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.999894945 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.918855729 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.697309242 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.678145585 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986586435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184926219 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.985330363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.144036231 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.999697072 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.989607747 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.476137628 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987888579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.274881567 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.987248897 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.996067589 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.991236761 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986770688 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.686031316 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.515272139 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998076413 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.996576048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.130589743 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.000377625 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.920023189 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.503597021 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.993010343 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.985689722 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.763478575 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.022004236 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.280238233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705702781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.241991096 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996524162 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.159520299 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.343666942 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.010155315 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.989672038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.988648456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991070674 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.003807596 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.993130994 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.000050881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.281341331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423013896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552275502 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658942096 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426755666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068439527 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.992193652 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.901195234 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640961331 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940331039 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.646824758 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.174249359 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640290662 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947576816 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382072498 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.925349656 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551254409 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.17432508 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.215550471 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069020744 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.991627857 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.176082999 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.198288302 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.024896767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.99903369 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.916515096 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.511073194 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465849751 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.924163366 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.078416149 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648847234 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004369433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.777707153 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.047953141 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.444583033 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300369621 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.635000236 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380111891 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.991558911 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.9993293 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709316433 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.994662436 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.51536779 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520863724 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.995349855 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.389267722 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9420316 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.150909921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.005981408 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.999191682 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.031671279 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.683558022 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.258833807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.173452363 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924092757 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.996702089 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430112341 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.849678162 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.997427879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993327365 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598544266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991410377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.200779589 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.00383145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.703025346 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997054147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.91765371 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917753675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.678782735 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.985493813 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954174861 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353397693 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 5.976387413 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980132707 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987081888 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857461256 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.22709985 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.983651421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452705113 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.202818016 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.984642673 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.994838313 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.977974566 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983472239 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.962377816 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.854917578 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.207113521 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976478055 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.193419298 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.674512216 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.871398695 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.020540604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.17173793 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.852319673 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.96069002 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.148025429 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.672092689 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.968203904 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560437255 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.982100224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.962689511 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973048297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.960291977 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.979476932 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.027146532 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.115377179 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.974291831 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.969341677 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266177654 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976448272 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965028031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.972174378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.051632563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.504274637 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.683395935 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.734505393 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446418904 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627128573 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.452546158 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.149587459 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.967306578 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966337284 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893567874 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108880626 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.484982553 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.232542443 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088995196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 5.959723983 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.984163934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.963201558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976161614 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.176266332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235320743 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.829629434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959433257 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.624819186 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.119112602 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.970937826 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.170950868 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34725004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412213482 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079348218 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.968721537 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616166277 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.237818224 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050867522 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.961738974 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550160463 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.968104148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409487583 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.971946114 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963343432 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.111888117 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.140274904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5345133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.98935259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.117250023 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.734420788 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.278343369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.222141179 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269024617 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.121978468 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456880925 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554103268 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.22896224 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.032449267 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.121631425 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.072199694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108788631 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.669405783 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.878110591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963680551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807393507 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.672045865 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.972836719 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452845253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.230363499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.966685237 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.713986601 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.001725945 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.972564812 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.18691729 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533924042 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.191990941 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.973014283 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.972582503 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.540239568 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453304778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.154551889 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905081383 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.967754798 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.148681341 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.205032477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.989161247 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.416013132 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.674817319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409229942 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.936932208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.98580936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.970060266 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556657578 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45896879 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.707350181 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353251413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.625477682 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.969385481 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24161755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.969820702 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.971290962 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24531377 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.969080019 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.968440155 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.129188519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.457893975 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547173451 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.975012224 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.441369762 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.90658701 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.191318594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.04017775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902183386 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965901484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.290072466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.985114252 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095509848 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.977532215 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.738339771 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982740079 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.728255827 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252308729 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.972410248 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.97673807 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.954240225 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.980389795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.061439215 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458488076 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989609545 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.641814218 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.315339662 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.222209597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.977146417 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.959003811 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.970171293 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967608629 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684924917 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935403529 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.966673766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418864686 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.983849885 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.981738061 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.972155088 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.182768454 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.178836707 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.968797323 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.133860426 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981445777 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.987447612 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.879358361 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.73500603 seconds)
  done (took 1453.899279885 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.980639658 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.970757303 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.976476252 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.003820607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.976311207 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.971469534 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.005854409 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.03616966 seconds)
  done (took 48.824665236 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 5.968933458 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.978268102 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 5.965780055 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.976099362 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 5.960052383 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.328448704 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 5.975436057 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.970858877 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.971387947 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 5.961756895 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 5.972876604 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.485476761 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.977389181 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 5.971261697 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 5.952514455 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.975034147 seconds)
  done (took 57.291065427 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.261060962 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.108943177 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.471189849 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.005285528 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.980107208 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.966701183 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.064833383 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.980985889 seconds)
  done (took 53.738216458 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.972729143 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.973299204 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.972513366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.972982303 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.974013778 seconds)
  done (took 5.764200819 seconds)
done (took 1795.519873032 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.949403292 seconds)
  done (took 6.848016059 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.468365114 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.439066801 seconds)
  done (took 3.80908097 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.259164824 seconds)
  done (took 2.159329812 seconds)
done (took 13.714020957 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.152697141 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.069686161 seconds)
    (3/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.972612727 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.948377032 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.210744687 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.086739538 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.00172779 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.987775068 seconds)
    (9/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.962626448 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.058884941 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 5.948841265 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.063466965 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.091000653 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.412251786 seconds)
    (15/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.072975101 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.320071122 seconds)
    (17/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.074089517 seconds)
    (18/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.989012833 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.963233612 seconds)
    (20/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.156665002 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.29065088 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.061593899 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 5.949607612 seconds)
    (24/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.99993156 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 5.963019658 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.652531597 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.09962619 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.697353354 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.970226645 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.381600788 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.26883383 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.076939711 seconds)
    (33/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.160015643 seconds)
    (34/286) benchmarking ("sort", BigInt, true)...
    done (took 5.962633176 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.276005358 seconds)
    (36/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.483776134 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 5.95502922 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.839010572 seconds)
    (39/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.542129621 seconds)
    (40/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.907123594 seconds)
    (41/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.978335263 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.081456812 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 5.949902892 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.064042382 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.226205312 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.023042135 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.146653751 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.096490175 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.076092101 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.021381253 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.099249596 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.973374205 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.011385972 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.048843192 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.652773645 seconds)
    (56/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.994578401 seconds)
    (57/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.957757279 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.968155394 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.498542837 seconds)
    (60/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.568164287 seconds)
    (61/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.895185992 seconds)
    (62/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.212290353 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.971073797 seconds)
    (64/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.972373003 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.97324928 seconds)
    (66/286) benchmarking ("map", abs, BigInt, false)...
    done (took 5.958618185 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.076868113 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 5.003888619 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.996884923 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.981415002 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.82140587 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.969973088 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.958420175 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 5.974831812 seconds)
    (75/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 5.967364049 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.99709174 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.905278925 seconds)
    (78/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.422238585 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.624155533 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.097772093 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.96681003 seconds)
    (82/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.209720909 seconds)
    (83/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.968942908 seconds)
    (84/286) benchmarking ("sort", Float64, true)...
    done (took 5.96933286 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.073891913 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.631295535 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.973756096 seconds)
    (88/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.001351038 seconds)
    (89/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.89543818 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.142570229 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.987646475 seconds)
    (92/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.411149831 seconds)
    (93/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.902468511 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 5.970337417 seconds)
    (95/286) benchmarking ("sort", Bool, false)...
    done (took 1.467137618 seconds)
    (96/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.996627416 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.341184444 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 5.990300382 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.978027946 seconds)
    (100/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.246656282 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.054144684 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.537089514 seconds)
    (103/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.229438306 seconds)
    (104/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 5.954388911 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.67743158 seconds)
    (106/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.99967 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 5.95444434 seconds)
    (108/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 4.003756348 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.602762847 seconds)
    (110/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.418995236 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.980735328 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.706546903 seconds)
    (113/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.104828341 seconds)
    (114/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.956169303 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.688037447 seconds)
    (116/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.992599266 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.564859401 seconds)
    (118/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.000720904 seconds)
    (119/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.995465179 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 5.965482624 seconds)
    (121/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.426998516 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.001939178 seconds)
    (123/286) benchmarking ("sort", Int8, true)...
    done (took 5.968639221 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.635974652 seconds)
    (125/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.996519663 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.622564153 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.154100569 seconds)
    (128/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.435200978 seconds)
    (129/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.091799802 seconds)
    (130/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.33418635 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.484942716 seconds)
    (132/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.025157092 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.971132794 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.183202141 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.011181935 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.994441891 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.970517062 seconds)
    (138/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.071799555 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.072312886 seconds)
    (140/286) benchmarking ("sort", BigFloat, true)...
    done (took 5.970911368 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.998592269 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.367589142 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.674537285 seconds)
    (144/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.266902585 seconds)
    (145/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.057923658 seconds)
    (146/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.00282489 seconds)
    (147/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.188596406 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.057835971 seconds)
    (149/286) benchmarking ("sort", Float32, true)...
    done (took 5.971721254 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 5.96138262 seconds)
    (151/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.002019341 seconds)
    (152/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.980015834 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.999617114 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.080527888 seconds)
    (155/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.01295754 seconds)
    (156/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.138516875 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.181035632 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.083317201 seconds)
    (159/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.996271329 seconds)
    (160/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.133643402 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.958261134 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.074709635 seconds)
    (163/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.098275502 seconds)
    (164/286) benchmarking ("sort", Bool, true)...
    done (took 4.962372213 seconds)
    (165/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.273991368 seconds)
    (166/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.05804731 seconds)
    (167/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.02898152 seconds)
    (168/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.034948927 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.97668884 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 5.962151702 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.992108833 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.040970277 seconds)
    (173/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.188040604 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.976958247 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.977256192 seconds)
    (176/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.160365574 seconds)
    (177/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.185207578 seconds)
    (178/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.910520914 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.959399961 seconds)
    (180/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.97804215 seconds)
    (181/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.176992714 seconds)
    (182/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.444374167 seconds)
    (183/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.548545258 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.339651513 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.826847434 seconds)
    (186/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.140313983 seconds)
    (187/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.429820019 seconds)
    (188/286) benchmarking ("sort", Int8, false)...
    done (took 3.974143183 seconds)
    (189/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.751899632 seconds)
    (190/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.000873826 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 5.973041378 seconds)
    (192/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.829211006 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.656785903 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.234191463 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.839021912 seconds)
    (196/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.018456293 seconds)
    (197/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.973581734 seconds)
    (198/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.981579335 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.033820664 seconds)
    (200/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.275388881 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.06079339 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 5.085935067 seconds)
    (203/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.996840034 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.325914226 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.035552944 seconds)
    (206/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.965430005 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.787822694 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.135759763 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.44491738 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.239114651 seconds)
    (211/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.797936377 seconds)
    (212/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.816476654 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.081087883 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.976257407 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 5.96295581 seconds)
    (216/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 5.967494879 seconds)
    (217/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.816560763 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.043918954 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.983164413 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 5.964401456 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.974706549 seconds)
    (222/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 5.965123975 seconds)
    (223/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.161678988 seconds)
    (224/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.118238057 seconds)
    (225/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.300250699 seconds)
    (226/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.972392545 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.978940349 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.230906148 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.027462594 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.818578346 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.817638014 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.131918093 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.529456596 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.001466131 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.995259847 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.354307301 seconds)
    (237/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.982793881 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 5.968187543 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.32571895 seconds)
    (240/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 5.965215352 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.366705193 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 5.962840863 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.875250868 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 5.966300584 seconds)
    (245/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.086289949 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.991498748 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.346551301 seconds)
    (248/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.648069866 seconds)
    (249/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.160874846 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.296031345 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 5.987305887 seconds)
    (252/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.958612317 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.651539347 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 5.970494778 seconds)
    (255/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.971481068 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.715285801 seconds)
    (257/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 5.963928805 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 5.968742877 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.065713897 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 5.965046907 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.064962837 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 5.969673799 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.094753966 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 5.964070229 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 4.903926166 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 5.98606731 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.705105976 seconds)
    (268/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.973326449 seconds)
    (269/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.551741345 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.946620742 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.775192598 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.037320722 seconds)
    (273/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.062157228 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.705856767 seconds)
    (275/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.270122902 seconds)
    (276/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.947889035 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.988595887 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.800192911 seconds)
    (279/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.405009312 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.006096949 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.163773385 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.980487712 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.981909227 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.217950014 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.555707085 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.854152815 seconds)
  done (took 813.500376127 seconds)
done (took 814.399358436 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.148928406 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.104070155 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.986010371 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.025820812 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.984885627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.00133839 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.008400101 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.983135982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.985860567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.984745171 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.985245897 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.171492895 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.038853133 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.9854805 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.985958372 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.081523969 seconds)
  done (took 37.379154794 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.009507971 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.994586135 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.076547691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.007412415 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.010401737 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.131847621 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.039756511 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.99714295 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.115082137 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.027741552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.179926125 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.015091663 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.990866837 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.84515746 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.01005925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.135399952 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.187063655 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.20088216 seconds)
  done (took 22.891001533 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.313645903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.008239352 seconds)
  done (took 8.241538553 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.00589043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.991964262 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.990755183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.989643127 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.983238039 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.982958141 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.991106141 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.983320794 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.635138931 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.088624132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.997422234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.001871585 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.00651686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.991174006 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.987936791 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.025904581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.151576602 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.98918949 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.987690895 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.997695216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.991754542 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.068379209 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.027244221 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.993657525 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.085238616 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.633461621 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.000070994 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.999383264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.122967653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.990908884 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.990451041 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.99316656 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.993616536 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.829885562 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.448845686 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.991301857 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.023353347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.002113741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.990556556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.138140653 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.993220004 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.999289842 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.985488239 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.437829345 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.128176624 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.086807799 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.950125735 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.000227518 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.995957664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.042594827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.993676717 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.995352105 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.034065183 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.683558528 seconds)
  done (took 90.341113189 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.017063541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.377734031 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.15086356 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.004428815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.730167379 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.662604796 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.003966426 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.196610859 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.035637645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.988657082 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.237500792 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.422461041 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.007398898 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.056112822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.544670039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.042114937 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.988046403 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.714305489 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.005299666 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.992859747 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.439166482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.993871995 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.994881358 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.147621354 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.019074682 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.368209966 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.996600878 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.39440998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.004137601 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.987669168 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.38221692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.007475414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.037289297 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.988285153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.214787049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.271184601 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.250739159 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.999641319 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.008619588 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.990335657 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.010972471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.360298258 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.260965925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.996636848 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.987341123 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.381442397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.993115028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.996686707 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.990905979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.188323036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.840679168 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.992685449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.005044236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.994296619 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.333507609 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.065628277 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.082577167 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.396802219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.994163935 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.086918885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.023595558 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.990618074 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.994474018 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.989415356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.993319816 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.261290124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.108025424 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.989803242 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.260301121 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.381604717 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.006260265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.440756449 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.842979409 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.01167619 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.085187831 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.989122785 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.564728134 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.404428505 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.998943091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.990301783 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.248207947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.998215849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.236123415 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.006215298 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.990808934 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.455689872 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.001549119 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.999991938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.990613939 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.994890236 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.756741895 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.997220599 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.223247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.025833347 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.99049373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.990469019 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.029002837 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.992327038 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.990993969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.991747852 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.438119727 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.007326543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.070192151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.00839765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.866684313 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.99691793 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.993978624 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.992816704 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.20835044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.54924344 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.994417389 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.991628968 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.984253127 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 5.992874761 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.160758799 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.993839415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.222757145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.996841557 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.00131265 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.001771039 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.641145876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.01205666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.991264412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.994217221 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825794693 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.19737677 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.006433089 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.993305013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.992708124 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.008414393 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.999052214 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.010786153 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.049908593 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.996138733 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.623017081 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.039671414 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.014822603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.501984433 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.005233849 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.660897643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.010369657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.993268687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.269354583 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.222031092 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.081461399 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.996818974 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.011598557 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616605306 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.046726274 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.134238832 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.007552473 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.989051122 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.184828926 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.136566848 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.99511361 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.605833183 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.995400771 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.206219034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.999028053 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.277714425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.416302991 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.012667753 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.998213595 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.628954252 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.688602005 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.834285001 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.996436954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.239435724 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.943243569 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.462934273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.995617012 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.996497805 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.567107413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.001824501 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.997101195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 5.995027946 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.996382771 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.063013916 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.163984183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.20789243 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.00141864 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.370611734 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.061156873 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.899976718 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.004909434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.999392397 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.340478095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.036584501 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.996770973 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.036087729 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.998174857 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.003994452 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.392604849 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.786667688 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.001951109 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.143345624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.548654223 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.013675167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.997322482 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.718934785 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.528622396 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.474823198 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.050346895 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.229829691 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.003569839 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.030258083 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.688771882 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.023955798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.394033695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.003569294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.004090091 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.519561628 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.01532514 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.358425785 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.998829989 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.998431824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.467758649 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.014203128 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.001871743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.002893209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.01678314 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.259936882 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.002995822 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.048601001 seconds)
  done (took 1030.313821689 seconds)
done (took 1190.082067068 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.031435759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.026544175 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.009687481 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.030158192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.121610668 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.185086149 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.020466868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.012267689 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.057952069 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.058044945 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.009187206 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.185290331 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.012196806 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.009243221 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.009787466 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.024430717 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.824407788 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.010460689 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.027511125 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.019715462 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.025786177 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.008665211 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.060050612 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.184434739 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.013886022 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.01329947 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.013798889 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.030089815 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.122610065 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.01462109 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.01320798 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.021942737 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.833632196 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.014388169 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.005332776 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.030078452 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.021705161 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.020229094 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.015249019 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.042930492 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138420592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.016180954 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.012650341 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.013641667 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.013766341 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.016358695 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.014095513 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.018339757 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.025458363 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.028013863 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.139150796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.0309915 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.014954029 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.012612094 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.022254062 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.010802435 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.016054419 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.02944854 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.031896596 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.030892994 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.818685838 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.017718185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.015716967 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.028780488 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.020449143 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.176252531 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.012997378 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.016136045 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.138347313 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.022200046 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.16554318 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.021324002 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.014687548 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.027570319 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.045137288 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.830558916 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.009387197 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.0129096 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.021253136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.011564286 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.023781617 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.028091262 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.019393488 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.01471725 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.031175738 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.190826829 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.025226944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.015301828 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.023688177 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.033121214 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.023664791 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.025309244 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.018209323 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.010691675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.02550159 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.018282619 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.017520184 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.017206392 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.020532165 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.025142987 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.141738357 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.03832153 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.012439414 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.012596148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.01438093 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.028584327 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.144917415 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.020304503 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.036759761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.062548658 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.016884178 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.83390017 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.023502917 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.03383531 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.025639509 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.019145879 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.012140234 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.830550515 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.150317545 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.03615224 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.018642503 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.014571206 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.035186766 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.018086213 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.014877425 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.836970831 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.018312378 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.03214893 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.13718819 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.028731268 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.047705884 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.015921749 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.020287456 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.048743939 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.035576182 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.048261102 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.020184175 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.034943029 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.032852969 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.014350859 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.027521546 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.027150766 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.019253738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.022885663 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.012598389 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.051148512 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.031342371 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.031672961 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.03884719 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.138692734 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.016505999 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.833732647 seconds)
done (took 173.02033758 seconds)
SAVING RESULT...
DONE!
