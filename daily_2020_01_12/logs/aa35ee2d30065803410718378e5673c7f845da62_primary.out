cset: moving following pidspec: 26029
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.420490077 seconds)
loading group "string"... done (took 0.59493441 seconds)
loading group "linalg"... done (took 7.353075217 seconds)
loading group "parallel"... done (took 0.160145591 seconds)
loading group "find"... done (took 1.174530928 seconds)
loading group "tuple"... done (took 1.854479095 seconds)
loading group "dates"... done (took 1.337898537 seconds)
loading group "micro"... done (took 0.223911488 seconds)
loading group "io"... done (took 0.963863874 seconds)
loading group "scalar"... done (took 39.389287173 seconds)
loading group "sparse"... done (took 12.56603516 seconds)
loading group "broadcast"... done (took 1.019503276 seconds)
loading group "union"... done (took 12.968973033 seconds)
loading group "simd"... done (took 4.782690314 seconds)
loading group "random"... done (took 9.789825295 seconds)
loading group "problem"... done (took 1.880728544 seconds)
loading group "array"... done (took 23.134285134 seconds)
loading group "misc"... done (took 1.854360545 seconds)
loading group "sort"... done (took 3.755819627 seconds)
loading group "collection"... done (took 18.848891617 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537661141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129039736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121834559 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123653265 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151728914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115468984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128966981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088373698 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.818196082 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149590837 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12091271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435639706 seconds)
done (took 4.149859753 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178480556 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087023135 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085433159 seconds)
  done (took 0.21251998 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067089921 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125978739 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068494891 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068702868 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069548042 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068477881 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068095607 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068328301 seconds)
  done (took 0.581648746 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076050798 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071183964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067531647 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070237154 seconds)
  done (took 0.331878498 seconds)
done (took 1.439494992 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.79975447 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211170434 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188631142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418513819 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135384025 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164106131 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640304742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348249324 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.1907492 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085177093 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112987139 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337482127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114532262 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631305317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078123558 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094669115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142320623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418614156 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068120413 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083815129 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089922717 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129363228 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088436663 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077354752 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145620673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06772656 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136767038 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081791688 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067189523 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214278402 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175280263 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645359913 seconds)
  done (took 9.25907736 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098118469 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10119695 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071208009 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126018969 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099662473 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071925763 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073028448 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06926109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090625787 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132348428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092771663 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104612859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067839034 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070653972 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087615984 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207795712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083383728 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084012179 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07304946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078467319 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108172347 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080874989 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079895246 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079724123 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132654638 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183367969 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100286302 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100396017 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06931079 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082320165 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117423089 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128800478 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068220722 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068018599 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128111097 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097319268 seconds)
  done (took 3.629936835 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011320345 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148327976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093114896 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139678351 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066968872 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114058542 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067567034 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084498297 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216529376 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.391402706 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.595516133 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113979209 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104918243 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068484847 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069626189 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069190083 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513282082 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09792951 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109843303 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084271429 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072299331 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071297913 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35692354 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070210722 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065568428 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070327079 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059297067 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086012027 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129146021 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070190639 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956629894 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129249366 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069468805 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103628081 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173214768 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089955166 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143976842 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.20219306 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066853824 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15897254 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0728519 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068911226 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087491554 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106362681 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11753188 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067548275 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068972506 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169175973 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067321428 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082713696 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.678924593 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15412395 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078357965 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066348727 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.257343677 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089324505 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071687897 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066229925 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211436011 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133252454 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070600102 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06904243 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070793198 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066246794 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072035763 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374230775 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068165937 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.183547883 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067776718 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076511192 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070246488 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07028009 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074816198 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075505606 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090547034 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094816685 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069145365 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078414133 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068631333 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069024574 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069677398 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086410825 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.38473812 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066672397 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071079372 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067057171 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092692945 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099891229 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06926168 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067790079 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102476415 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068548454 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067924577 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.110573614 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069178402 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086034756 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07046449 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113672253 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066764396 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202122231 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066613107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067213704 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100644551 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072241058 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101593752 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084438427 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071231724 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.429295748 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06538918 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065417688 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070100323 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067346973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069968705 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06857347 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081796685 seconds)
  done (took 20.665516044 seconds)
done (took 34.609537117 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24459545 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083346521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079395081 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080768457 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078042518 seconds)
  done (took 0.641031396 seconds)
done (took 0.723731712 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126759215 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104306382 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067012092 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101694526 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066451563 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106611962 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104601612 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085127261 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103994285 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066613498 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100577456 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066750203 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06644942 seconds)
  done (took 1.240665279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085613174 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086995218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072128982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086070662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065828204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085940774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084473705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092980664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083921166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075254877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065889594 seconds)
  done (took 0.955511712 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085931091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087493875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071547431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085298642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065016831 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084959875 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084810226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089392118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085313248 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076576368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065399962 seconds)
  done (took 0.938825529 seconds)
done (took 3.194998986 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081248568 seconds)
  done (took 0.110921182 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604232916 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.107068503 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082257313 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11417371 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197517968 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123231086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277635284 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088854214 seconds)
  done (took 7.829890544 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10376352 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074622742 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07089878 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074102855 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071182371 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071922988 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071078391 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071787771 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07336101 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073279359 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074350486 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07128092 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071034002 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073201913 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074260613 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071879998 seconds)
  done (took 1.381259465 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095397899 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094772734 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076000211 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077346315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07508633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074761306 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076744417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076030528 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073856223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074498375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077016016 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07608198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073673754 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06693666 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075781473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077438431 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072885569 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07619258 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076850239 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077030157 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07724348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066259228 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073533344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075711178 seconds)
  done (took 2.006919825 seconds)
done (took 11.385884578 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118695092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073811841 seconds)
  done (took 0.222189397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084922286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086654982 seconds)
  done (took 0.22053118 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08671648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067479604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093524211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081113171 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068888937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068088315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09165978 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068062314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067879575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068260424 seconds)
  done (took 0.810042269 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0706694 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080630736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072309809 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083665409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076045423 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066095247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075703394 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070220066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080553561 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065087692 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073454431 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085219266 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073942974 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086770245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074903938 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070911616 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072606199 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069897398 seconds)
  done (took 1.40779615 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067701765 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068881282 seconds)
  done (took 0.20599804 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069728475 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065236129 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06918596 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06841275 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065533469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064648492 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06530513 seconds)
  done (took 0.514501976 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40276828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116963354 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320345927 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073434184 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08552674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262660445 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067804844 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072809341 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073324617 seconds)
  done (took 1.576314022 seconds)
done (took 5.037707233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079712866 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087423471 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099519678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382129779 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092468545 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067934041 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116382543 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193977665 seconds)
done (took 1.19648977 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216916779 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.64692361 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410946143 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212958834 seconds)
  done (took 1.317567464 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348136066 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091183007 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060999953 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069405201 seconds)
  done (took 0.640114826 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069329684 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072092548 seconds)
  done (took 0.196286836 seconds)
done (took 2.440748674 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069136315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068489888 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065341934 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06834003 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065337927 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06560806 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068144771 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068954739 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087574193 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068791768 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07144765 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068406556 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068187818 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065645697 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065903586 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068763479 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06601624 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065698824 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065533847 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068167452 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065773777 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068429601 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065977581 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065828398 seconds)
  done (took 1.714892069 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087442629 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068173392 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075245288 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073705067 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071840217 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073897735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0746463 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068793362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073749541 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070845515 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071328062 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071807613 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070710584 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072665554 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070822827 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072016906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074246465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068234089 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071059524 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072916089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073124989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068728235 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072242004 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074334643 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071810312 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073934685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071150474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068255788 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074236074 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071905945 seconds)
  done (took 2.248833018 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071240092 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065682864 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066313941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073276244 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065794041 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067208411 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06592046 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066203865 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067022532 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066270522 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067079829 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065778744 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066803713 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066856056 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066738743 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069717663 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082236549 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066271654 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06604314 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066782823 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069258141 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066488451 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066537609 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066786295 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066314689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065651162 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066683676 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066009111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067117106 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06594276 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069407357 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069969062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065476686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073130453 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06971308 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065579309 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070072339 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06542464 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066536444 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065279052 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065471551 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066011148 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066121583 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073591086 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065903003 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067331032 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066523218 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067988831 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066533256 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06924355 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065361188 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066055773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067728309 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067132809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070089594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06532117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066855994 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065432806 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066521991 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065858977 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065612183 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065352491 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068020458 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066473499 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081389262 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0725682 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065725152 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067590133 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066545627 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068425673 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.182030378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07956483 seconds)
  done (took 5.080331704 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093484881 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090812808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067911982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067079737 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064358227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066139547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072566127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065616031 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068316737 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08483842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066121542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067168043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067099315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069631832 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066731736 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067221543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075047544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063812537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065862131 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070159281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066114269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071902359 seconds)
  done (took 1.672823084 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161236703 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073113276 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108716389 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078947084 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07279264 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077944044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071936949 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071833296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072177302 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069414476 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069828954 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072838818 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072051683 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069840395 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06989511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06925907 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071830159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069628367 seconds)
  done (took 1.498138125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077582216 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067556971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090119918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068183465 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06848488 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070481599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072698087 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076856514 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070740433 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068385644 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076870922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070784937 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070673372 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067679273 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07001541 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068172433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070018039 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067802097 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076041344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072295801 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071841601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076046877 seconds)
  done (took 1.662667514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082425495 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070985314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083742962 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070753325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064729178 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067307884 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072666933 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068406632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07176659 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070701305 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068105838 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065968009 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070575895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067542264 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070583575 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068019038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069880907 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067558507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069878523 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063729569 seconds)
  done (took 1.479482359 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089557697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069779086 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070744215 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078140646 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070525516 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070534161 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07748739 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070999488 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070339522 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090909254 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06986648 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069529875 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07805412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074517872 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069965435 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07708338 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07746679 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077082478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069758327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06980797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091306659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069839246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077157986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070467465 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069506886 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069470206 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069948308 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074387287 seconds)
  done (took 2.154743496 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066391733 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066770804 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065704802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065391269 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066395517 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066084718 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0653382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06559196 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068405837 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065323485 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068602905 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068977973 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068996853 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068278872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069116701 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06818179 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068349551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065730178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065957698 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065775201 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068352617 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06856616 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068394484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065247679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06604551 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067749006 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0654376 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065440161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068329473 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065135115 seconds)
  done (took 2.092469578 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078260369 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075236424 seconds)
  done (took 0.229791094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065537992 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082646107 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065991307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073095912 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07226562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069617113 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076563205 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072266191 seconds)
  done (took 0.62936331 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085580425 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080384438 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070813631 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082680689 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080150904 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086104096 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138887878 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069727579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075897458 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066513361 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08271346 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067376297 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074838759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069275589 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074911684 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075103567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065771303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07459006 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071134377 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067141073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069820654 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077946643 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071019649 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063606488 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070029214 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092300636 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080185599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068538305 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071652976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075895907 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074573611 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062153676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068094805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068933301 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065617014 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078325304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083352769 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071644794 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07745261 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069542874 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078926293 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063431129 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073754018 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075306064 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078744414 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068555221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068712945 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063305006 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065990195 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070883454 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063212005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071375342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062525086 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075709958 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071791939 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079348125 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067494971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070221855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07106926 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071624708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075301483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070801539 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07171057 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068325452 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078308452 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073254042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077084227 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063361781 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062356716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066248144 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078371013 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091917917 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074710279 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069509211 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06967158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065795682 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07214559 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069695648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074654583 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074593387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068647238 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074165837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076059561 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068527068 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070846084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076764149 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066438271 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070976222 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066419877 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085357638 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067430128 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066195577 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06652036 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078952799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07156867 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068380682 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066346581 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075596484 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062275513 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068448504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06923348 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068990144 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07948716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07295608 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073253035 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076391893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075075312 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067941955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070734846 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064261539 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068453601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066308634 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074234716 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061345015 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07032282 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068458488 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067998255 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076569382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065935913 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067151736 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07531485 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073275844 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066030514 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.190245541 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070053743 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067169367 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071993435 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077608155 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067638604 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063887218 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063754643 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072195471 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068574151 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073154712 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073674877 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072126744 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062787144 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067024345 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075111517 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078314573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068943148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06993191 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074944354 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070262853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067716076 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075421703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070679462 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067699479 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074615206 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069752943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063405541 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071563798 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071626499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067636204 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072572314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071935507 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0712687 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068770383 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067395528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075776207 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069092028 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067796146 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068872555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067484963 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079787107 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070553912 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063283952 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065480919 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076982317 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067049638 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068311454 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067442587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071414427 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068966683 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066184374 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068359091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07035743 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07930289 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072689539 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069288572 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074035405 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080915289 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068396029 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071275822 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0679888 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069295412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069097485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07752385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07458674 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07301048 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070798705 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064947661 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074079655 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076706658 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067232409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065967173 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067445686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072211488 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074241933 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072383206 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069049067 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066586874 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069471967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071881114 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07133189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06801759 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067459161 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074829415 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066215476 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075105929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068973699 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079111394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071692047 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063609401 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07154829 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067020153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07492924 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063131368 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066187256 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067362205 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069093311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067096453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070895472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062050949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075807061 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07591303 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06865803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067380817 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067876807 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075807839 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070343054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07207724 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072257024 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074588159 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079291335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067023458 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070538475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07810093 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067299321 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061142602 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073200712 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066151598 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066032075 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066557254 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066259012 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070444821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075934951 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073889577 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06207114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070632145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065642783 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.19681001 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062046088 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071563843 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072344318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069434758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07629825 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070537397 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069470223 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07316667 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068939205 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070181378 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069883404 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071425266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069042519 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070855101 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068124066 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071325908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068256143 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066103948 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070838057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068374714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069303577 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074205904 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068320775 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068633679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071168852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069070399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069680647 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068890921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067801089 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07151324 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069202586 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06925081 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071851694 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063423098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076062467 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06811342 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076981727 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068910032 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065273155 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075144234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071358507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074273467 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069593776 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069344115 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070357587 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068030614 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071527958 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075758607 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066785081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080401992 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076603158 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069430872 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071177384 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068453731 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069872741 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067367265 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069045336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068827906 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068768721 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068121316 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07291484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071215769 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068574656 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069702734 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068962056 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068363528 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070031242 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062406455 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067947936 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067777796 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068581657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078670835 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06901961 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067658033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067286889 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069404911 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067416483 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065015112 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076530349 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076973324 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06866829 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075523809 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067690567 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070642904 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079738166 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062258034 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066824506 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066593676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06677149 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076225164 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069326015 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078403265 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068582092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068421328 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065339877 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069050212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067166135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062667556 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065826566 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071859213 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067597929 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067375831 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068512649 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071053483 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069344452 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078362742 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067477184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069490364 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06874707 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06552907 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067458382 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068272944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071097451 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068631042 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065750173 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064768062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067570031 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068054001 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068944395 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069733005 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069244055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074496325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067102417 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070545463 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070102438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062483939 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070405906 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067262865 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067472991 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066255158 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.204201716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070003478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069352475 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078524166 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069148503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069624211 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069689718 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06658206 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068223282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068992282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069351984 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068378937 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070578804 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076898201 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066241788 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072357311 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0689557 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069555822 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075828507 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069375937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072432678 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075405169 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069441098 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070300176 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07716054 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072975487 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07177591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069311975 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07029805 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07502076 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068009343 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075336249 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069539889 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069454122 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070391972 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066206977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069056088 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068893203 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067443553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075233242 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069376596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067445321 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067207087 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066381669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069479882 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071440264 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07681002 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071078011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071495303 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063316074 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065139425 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069418815 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066232222 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070986143 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071000086 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074085076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070834937 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068700843 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0677132 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07766692 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074070555 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072274996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066197429 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072494231 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069852371 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071028116 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069663028 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069128224 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070253305 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072754021 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070340375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068258757 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075754549 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07196411 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069352096 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07023419 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069534521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068811128 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063185832 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068665941 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070509162 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073438708 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071290325 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068466356 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079540178 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066404399 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068918188 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072014126 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067732648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073559318 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063352336 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07020085 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069228811 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06881053 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063075802 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067594428 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066121099 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070610083 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067538635 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063180356 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079272936 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078144061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071445059 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067511856 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06718467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063214453 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06319006 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067422799 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069232936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070273306 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078751553 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067435862 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067600676 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06339587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06877581 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071408156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071349265 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065079102 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062618348 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06669092 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070261494 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072552955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065782103 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067175043 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070579602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069839708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065404446 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070587278 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064065425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070987988 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080477004 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.200161567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068185148 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073292679 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074467409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067511559 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063832453 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069206546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072801733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069594498 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070780556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070407154 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083966889 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072535105 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068738132 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067859502 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071843782 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068218506 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077548873 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07053364 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069017905 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073626809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070443917 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077464612 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072210176 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077205332 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072331614 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07223772 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068061759 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069409643 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067420373 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068107737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069764438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069180303 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073741015 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076739777 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067614065 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080771523 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078185014 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071241775 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065757349 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06823163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06846382 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063830932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069974285 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06687405 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06717122 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067338737 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067759797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06976758 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074578776 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070348818 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069391777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069229619 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062997275 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071160358 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070814136 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069525141 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065664226 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068273308 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069785134 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072527795 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071628238 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065929239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070519088 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070135501 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069377412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06369303 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074352754 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067611366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070206363 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067836579 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068451815 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068933761 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072235724 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073835345 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069239395 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071046005 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072050275 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070111298 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065347598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065262607 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073436802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065738267 seconds)
  done (took 42.632080943 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099655309 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062778654 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063398224 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063301924 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07548172 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06500282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06474842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06492784 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064692245 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066995938 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064447464 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063487867 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072255234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080510385 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075786959 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068218229 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064043361 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064387699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063186485 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064561148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072429756 seconds)
  done (took 1.592331099 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07342684 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076670925 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077752697 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083804816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07294198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072756183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077949763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072627741 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080796023 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074317705 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081433903 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073452894 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074419923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07529297 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074252695 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073024929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080472647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072934526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072290346 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077217103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072186834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077485933 seconds)
  done (took 1.747299213 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067268375 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065895677 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069635371 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062981239 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068558148 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063372193 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071238869 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065713452 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071758718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067595164 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066992121 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066685805 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069627222 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06326582 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067844461 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06531641 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111069504 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071871671 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06751064 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069123431 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06293217 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070373276 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063427896 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063586326 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067286044 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071695715 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068548487 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065890932 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067853444 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066958725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068394107 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065306495 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068966628 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068175834 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06716961 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066774175 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067527565 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067723532 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063314506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065490544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067906465 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063286495 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068397587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069197676 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065166246 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06538299 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069774851 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067635028 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062524156 seconds)
  done (took 3.416086394 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079064762 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112448745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070210579 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093767963 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081739626 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074782279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071807759 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092867096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065133789 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065612312 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085018471 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081561331 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067274729 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071905911 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072165154 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0677686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068077717 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066137819 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071435775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066161239 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071204063 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074407828 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081769005 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079950268 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071237561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06640988 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066427967 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071190992 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079789839 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071958972 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071798778 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073064862 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082806177 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0687945 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066409538 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069168184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082893539 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067602953 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070090577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065086319 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069917233 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071555907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074234246 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083389645 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067037555 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072315128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067338263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064276666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079825448 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069473815 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075181205 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081190885 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070801201 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067443917 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071904733 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082262578 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067239296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065396094 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070940623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079241158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065106859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070697381 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080296248 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068902901 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074600103 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080968689 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072427171 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070844636 seconds)
  done (took 5.257401989 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074744684 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095175613 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085594149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086091019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078269549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079167049 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078920403 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079045728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077302146 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082733152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078595988 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119367659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073782625 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081264868 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07800212 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07795127 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077933737 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078020897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077869701 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077412577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077975073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085135786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077655075 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0848699 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081862728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072765889 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077005128 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076801072 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085053047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077392148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090576242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077700202 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076924521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085061301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08150944 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077414196 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066752969 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077282036 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077340108 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077282986 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072759022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084946963 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077715269 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072793722 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077698428 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076748173 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085201199 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082051438 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080200056 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082540314 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07772937 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085686418 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077833142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077669695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085786478 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087991354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085097176 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085551574 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078376175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085139771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086109005 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088028275 seconds)
  done (took 5.162746437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082932097 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074842493 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084970118 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063717211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066154142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074263161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066336278 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066024795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07639028 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076391606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078742166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074060395 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076785633 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079710896 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074355022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078604106 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074449696 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073855766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076437535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073604432 seconds)
  done (took 1.634992463 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075028962 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083283985 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067839814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073696658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071528481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074159779 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071039318 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071895896 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068813699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071080045 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07839429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078870394 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069383375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074246227 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078359148 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073496276 seconds)
  done (took 1.265479739 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08415325 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073547927 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082259137 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068077657 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06874682 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064632368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067650272 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063145408 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0645963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080807435 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06764095 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078734544 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067978049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066958675 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06438136 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072949237 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064083481 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065785239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067866277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079945041 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071022832 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066905435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070843431 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067496904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07023014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072400996 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067474387 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067579303 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064913865 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067746834 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070594124 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071369712 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06493758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06516064 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066107698 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065076194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067322807 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067755108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072663611 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0676074 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066282369 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069741344 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06730381 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068458409 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064257836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067648159 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063421124 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069762354 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064948263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070351063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067190551 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069889812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068066466 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074261308 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070494575 seconds)
  done (took 3.880037118 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079456279 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06975913 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062340929 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065314924 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071407389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069541315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0715522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068933609 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069155568 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066276224 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068875399 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070407564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06938437 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072266244 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069639123 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071934839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064238966 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069400788 seconds)
  done (took 1.366661168 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071506001 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067139088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075353536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0677169 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067909159 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070138454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064092462 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067246403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06701474 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067484847 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067867259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07055071 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066116919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070275791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067897527 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068792555 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070339649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066524765 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068137626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063457715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070179099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067353445 seconds)
  done (took 1.580314198 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094407876 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085638022 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144431676 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080930008 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087777 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074347912 seconds)
  done (took 0.647410385 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09006128 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099819309 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066944338 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072264682 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078113906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071935848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072304474 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072597335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08139883 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078298784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07184149 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081381753 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080973153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08116872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079453546 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078652432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072706668 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072604696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068492276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086328212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072391589 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080123678 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072542459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072160788 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072292821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079883116 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081001012 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078182264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071882718 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080693254 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078252534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072352456 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080953175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078680431 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071277377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081371111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072380628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086368901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077822422 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080653248 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071242588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078298738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08148076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0772606 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080908097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07291786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076832002 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072274609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072771496 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088521945 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078261393 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080130041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081136399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080966344 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081150568 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088580404 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079030791 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080506981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078207898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078086154 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080375425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078931052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079863378 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078481589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078684219 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079985775 seconds)
  done (took 5.22635104 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103777225 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067234642 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072835884 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079956653 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080462233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072832566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073391865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073237408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072726714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069580979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111794813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073196223 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08167064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081202318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073056061 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073002772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073682519 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080482274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069350928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088212645 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072114879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079751691 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080079223 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080216638 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078608559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077872201 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072511391 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072458241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072162524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072160896 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076826321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072329745 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07980562 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068869482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079704458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07235871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071985884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076431765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071823816 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077687022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079353209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08624139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072116266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071890525 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078808636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071709964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072335523 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069082887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072164894 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068615497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078505526 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078309957 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078014112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079849012 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071984969 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072365459 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071957492 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072308627 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072715343 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077846719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079537938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072126383 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087992443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072231149 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072152124 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079969342 seconds)
  done (took 5.187089413 seconds)
done (took 101.106890737 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188719074 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165380943 seconds)
  done (took 0.393712396 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069175354 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099183918 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07971674 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130604817 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066669652 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100488807 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100158876 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07889094 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066539951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0662235 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066217449 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069181428 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132242556 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066675044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066207294 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068811054 seconds)
  done (took 1.3892292 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099346172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161801522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103277679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06602804 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10070417 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073371981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064845065 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076156075 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071295359 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065417883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073302723 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07087135 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065480066 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072791964 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072116023 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072753782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066747314 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075273499 seconds)
  done (took 1.526682964 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099392063 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091853938 seconds)
  done (took 0.272463885 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15557429 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13379454 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202630409 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352726943 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166608273 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149051618 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144658649 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143993844 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1158591 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139715955 seconds)
  done (took 1.766541956 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099329608 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155623612 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268489855 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119573329 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073246246 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0952201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118979317 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077630208 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081140743 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080088922 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080191224 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07662407 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100131424 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073842488 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074040371 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076820087 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103466338 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072981906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073919374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076210991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10091075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06586221 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073561649 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073619674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079297102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07932531 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067797181 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06796178 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078747118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077100337 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079851311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09564429 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079837871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107976988 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07181945 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108545812 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07680034 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0732322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074424757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074271028 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078691998 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080002474 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075288413 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078930105 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068263451 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079992827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067996648 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068180508 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079450709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067922593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079967667 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07822317 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107582943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068629566 seconds)
  done (took 4.76895124 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103314668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105935646 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072200521 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113100486 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102759347 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072721632 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103486635 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095392034 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105613086 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070328002 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068974532 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070735563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083337242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083701706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115741086 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107445254 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073465439 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072789688 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108125659 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104918846 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068801269 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097087084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091713294 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103531879 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067664264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070347781 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068468991 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070789191 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076916405 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078031246 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069514219 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08046825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084715748 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078039568 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067693706 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069830997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070267614 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082267936 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080856626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081376831 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078531446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069667822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.077521541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071928544 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072500724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069881497 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080963119 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083175709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081581004 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071898147 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072162614 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070153872 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071581514 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081429335 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078488991 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08144524 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07971211 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068406408 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068381729 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072464684 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08080539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078973143 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079465234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070153751 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078849931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068591862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080546925 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083674514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06820224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070507119 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068818336 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069577047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069446115 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078112404 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077845378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069443395 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06965186 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06800021 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080741442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079268665 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068056353 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077136846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067085539 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069402058 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07230176 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070642063 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079064549 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081423186 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070048556 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068808114 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069961941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069861408 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069331699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079709599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081877577 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08038968 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078710711 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068799669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078182881 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077419445 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068840137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077931966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067103392 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069315044 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069158544 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079104735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077211519 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079083188 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068510845 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067011234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.208517246 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081665756 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068646507 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078148179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080553207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079452474 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068834567 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08200093 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068787125 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079938344 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069747755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080374925 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068852782 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080145906 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069616718 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068544583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069324378 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080177299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074173238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068540991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069833937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069856254 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080254893 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083798588 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07067804 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078701687 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078443785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070546996 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078974253 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069212331 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079391478 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070320682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069692359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067558932 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082744262 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069156638 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069341968 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071093902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081132975 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068925983 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081490822 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079372165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068531559 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081423202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080022388 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07746171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080328654 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070838688 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068920634 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068535467 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069989198 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078016372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079749767 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071268182 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069324903 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077847764 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079481095 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067294097 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077842235 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078175376 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07840458 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068669561 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069321357 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080808525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080466493 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079057927 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078285759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078768241 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068902282 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07716806 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078466401 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068194822 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083947794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068281484 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083770644 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078869281 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076579902 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078565186 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080568479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079948356 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080125017 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083238293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067924635 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068126391 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079455034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068538226 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069213829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078140221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06986373 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06989867 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08337812 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069221602 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079734809 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068061595 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080216651 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067833498 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070843998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084301289 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068588036 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070327289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078387672 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069019182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077007328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079321111 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076611806 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067346195 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069474326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0786803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077294768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067329345 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067167338 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069181208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.210475727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078416285 seconds)
  done (took 17.520425237 seconds)
done (took 27.783298755 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216239141 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153600042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18150212 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118407903 seconds)
  done (took 0.800666334 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117600937 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102141091 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093557183 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064689014 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099957965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065235667 seconds)
  done (took 0.62629353 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310611344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210020252 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187926387 seconds)
  done (took 0.782002587 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202972981 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195012568 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422679243 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263485887 seconds)
  done (took 1.274616375 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148430496 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092898002 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069954348 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087265721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138701212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162608439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101618581 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125673179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078622935 seconds)
  done (took 1.134484618 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14891242 seconds)
done (took 4.841839788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.215704076 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.242390563 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11172716 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079797955 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114112619 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075818588 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103085991 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074147057 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08258408 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106207596 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205022016 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084913562 seconds)
    (13/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.177847642 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.198783336 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076284002 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079982601 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073763726 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07308452 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075739065 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.219190277 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230680862 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094643775 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075080819 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109089288 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219184406 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217358583 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.175942918 seconds)
    (28/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.148499345 seconds)
    (29/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.165546065 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076409093 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.166930692 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188379869 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16122117 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.220779412 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.10489133 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165442031 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092488269 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07322706 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068549309 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084053695 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094283062 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.145034283 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200781199 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072206045 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072848402 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16721075 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07634345 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102078444 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06981085 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134117352 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205320477 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076923111 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073085637 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075578749 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085527705 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.190404208 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106969966 seconds)
    (58/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069812322 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192650003 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066977876 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088967179 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067630541 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051455106 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06406231 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090160627 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.150779799 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090808798 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082075387 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062984191 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072895668 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065875334 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051996249 seconds)
    (73/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075835305 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098117915 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061740395 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160093319 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192270349 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071289635 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064652933 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.065572514 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194632332 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183856297 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052335793 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053236814 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095024509 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074636658 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.14302527 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179875483 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.2998097 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13041126 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143058987 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06700324 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08181921 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074694627 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071913311 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116006182 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076929196 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 0.142076919 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072487985 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093650353 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074143652 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051313315 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086775543 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053069552 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066203147 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170506122 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090194542 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073211863 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173881451 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092442217 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050738924 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 0.131196164 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111006609 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067436003 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145188838 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154194996 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074000125 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050903482 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074756248 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092449628 seconds)
    (121/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069649368 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095933378 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083666708 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092040793 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074690903 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076433339 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.136612359 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074045561 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052650679 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15565601 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072801312 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176903431 seconds)
    (133/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069456049 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065375934 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080489218 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071667596 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153894025 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072718527 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072450678 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050784047 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050695444 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05127926 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07299508 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093891315 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067855028 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067328515 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052774316 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095466753 seconds)
    (149/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.103556202 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073517602 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091538542 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098793825 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174737905 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053300484 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067917602 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067212685 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.146954786 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074948152 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092503021 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062850904 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077946601 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09308634 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123176489 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071430226 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080617424 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073786313 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197500394 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052172645 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07606489 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155399495 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066693979 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075560109 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06814909 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065225125 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088484215 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066954795 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052325892 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181897134 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.140850963 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074819405 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050224591 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101684393 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075353725 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065699618 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137781694 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050728086 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071521256 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073493133 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175778527 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05063254 seconds)
    (191/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060927626 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065001552 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073611924 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064025616 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109840505 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051267234 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070260419 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100769786 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119525054 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.155749993 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064457689 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107625036 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051308183 seconds)
    (204/309) benchmarking ("sort", Float32, false)...
    done (took 0.12992799 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227003901 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074647764 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069119305 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051902012 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051445771 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050638003 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156169334 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053548144 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080014008 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073304994 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075586117 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073791469 seconds)
    (217/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052760888 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110708312 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071225162 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100514552 seconds)
    (221/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083380648 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096172109 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053651039 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052775282 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076173108 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.143171202 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071702144 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064285053 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051112189 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146257419 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068654778 seconds)
    (232/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053283838 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053250417 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07344304 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069260778 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054145738 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067522104 seconds)
    (238/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063765522 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15023685 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142448382 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05315456 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072461411 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064883719 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077373841 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089887588 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090228101 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065524063 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051440526 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.287624527 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065861366 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066391259 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051297033 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067393344 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051276054 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066524612 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065680149 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068566488 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068783061 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141453884 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052516159 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072789323 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153770609 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068346513 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06562897 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074757358 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071744525 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054813589 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107983378 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067640419 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052192426 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069422215 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097755586 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109687513 seconds)
    (274/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062364423 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067998105 seconds)
    (276/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068405385 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124638016 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065356957 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073348569 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063354005 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07368132 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053142752 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081939086 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063687754 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06558305 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06363218 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072168711 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140719794 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07457831 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090128861 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052265058 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066125421 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05067646 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111553867 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07145023 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10097351 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052085696 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051296799 seconds)
    (299/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051608203 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092561304 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053138932 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06567559 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050829969 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070594515 seconds)
    (305/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079875877 seconds)
    (306/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051986675 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128696381 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05171493 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066430793 seconds)
  done (took 29.851303669 seconds)
done (took 29.945199228 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084343444 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09270573 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074934207 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09344242 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080618775 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075638621 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072801648 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078822113 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081020753 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082215772 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078678571 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05410199 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074159257 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074036181 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074987293 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092723036 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078900719 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073337342 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073531387 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064154355 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073113748 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066009303 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067533307 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053750894 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078044712 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071412469 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072901441 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074193279 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065867694 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06558173 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068999216 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073324169 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065488076 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078776841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071917623 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073342086 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074792768 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076980291 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067232148 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065883063 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076588758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067901679 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075312657 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076285779 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07451402 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074395814 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076320915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080908539 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095807804 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069741038 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07687489 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078772309 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079477979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075255535 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071998647 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075582806 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072675979 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092558429 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073628399 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067501505 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074323786 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07413268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071428496 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073308911 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073115502 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075405277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075680145 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071913093 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075158908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071981263 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065472538 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07271483 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069328689 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065416798 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076833762 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078178019 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066179723 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073490052 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075263491 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07354045 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067036685 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070607117 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069340375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074223083 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069582123 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054370379 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06935377 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071623027 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064152511 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072955983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071538554 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072232375 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066511097 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075827079 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064707735 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070603736 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065621887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065324264 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066401324 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069269923 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064851547 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067086196 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074531924 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066459265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071731148 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07940646 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065402392 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071816609 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063999206 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064519366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079513067 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075022595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064901401 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067190778 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063882181 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073029572 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064127199 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064696164 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065038173 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064935215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071268862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064864427 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066389426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072215128 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077680287 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064441281 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068106907 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066636274 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064155653 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070289041 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06445791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064336631 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066303894 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0606636 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065740066 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064054004 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072078178 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065877138 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071190151 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065701202 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071802847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068685 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206834062 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070904834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064698065 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058729944 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067300067 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067564353 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067000826 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065555637 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066591144 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065602532 seconds)
done (took 11.187303025 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068356251 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142257415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097919429 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096155259 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086290054 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066275072 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076192393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102022433 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067377672 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10266694 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088672886 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085642497 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1153186 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06453489 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065964756 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069622412 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067289961 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082230108 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100653593 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086748639 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116157371 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065006436 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09373224 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090167899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088874829 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094822052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069329079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069400792 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069774479 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102190832 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088445461 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069869216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066284354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098265269 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093655435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084404293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066441724 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083321876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066573477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065777743 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06752918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098867603 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080877209 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081290739 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069698629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069428637 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067018031 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083764525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090898618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079471038 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087090371 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101353449 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068948077 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065206433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06435582 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085873437 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064959955 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068893285 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066198761 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068290116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065844406 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069256925 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081131278 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080501173 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070415416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079886309 seconds)
  done (took 5.398243457 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084108985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090819434 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083445619 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083681998 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065642052 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066514884 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067201914 seconds)
  done (took 0.69252461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06614824 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088332205 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08881018 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088969084 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081908622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088572635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076017343 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066339644 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087472851 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067790274 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087960293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100212807 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0693213 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073928312 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091299784 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066938386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091225584 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066786881 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069300864 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090252223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068581688 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095799433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069954924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067280201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082836945 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06825793 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117496689 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072815898 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070430947 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07165945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065496772 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109025699 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080369794 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074326697 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066612592 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081329765 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082020412 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065869356 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086639446 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0780464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08338468 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068661363 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070017915 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067107469 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07330297 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080105203 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069528022 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068965429 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071187312 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088814973 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070255543 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083320355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071670317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073676054 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068278734 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073133057 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077496484 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067845517 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087206004 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068065585 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084191546 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082934682 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081066434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082911587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0689606 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080748167 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081165363 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071901639 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070178153 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071287132 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083431358 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065250408 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070581385 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08002185 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071949551 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093401758 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093225114 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070403377 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083101321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0696358 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069478472 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068997476 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093473861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073470393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06676946 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070792918 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069879019 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065108636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065399723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070155309 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064644861 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068249163 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069890648 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070442844 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069639827 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083347628 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069176587 seconds)
  done (took 7.50883471 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069077957 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06831713 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069417986 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067563989 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069462958 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069268165 seconds)
  done (took 0.586683728 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09442787 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069171755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080682074 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071686558 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105693216 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087531044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087081968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078470059 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083846617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079678997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087162471 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088952725 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092778012 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072537558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086613184 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071902112 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087935772 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07535389 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078307459 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073003444 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087292226 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071888384 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072187899 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082337461 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076707522 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071028488 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066960083 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079708404 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078476132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078441794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071840793 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07563486 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070771252 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077884769 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087026418 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070330635 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071118732 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076746496 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072319948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07575885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088142156 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072471467 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074530169 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077050669 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077826539 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07091783 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077095439 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075638715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086176866 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077960318 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078059984 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071371683 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075829204 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077281338 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070811139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078148674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077435896 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087306259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07302091 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071800891 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069483378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076408828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07777501 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076167287 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078752915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07679009 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070688841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072378317 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072474762 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071352491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077165405 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068614018 seconds)
  done (took 5.670597151 seconds)
done (took 19.946779843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535055596 seconds)
  done (took 0.58126597 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613394804 seconds)
  done (took 0.706955205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.515954768 seconds)
  done (took 6.599015567 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401966678 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.52567289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721838804 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132386766 seconds)
  done (took 1.887270403 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702301595 seconds)
  done (took 0.819734936 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214695777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202551429 seconds)
  done (took 0.528150818 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376935303 seconds)
  done (took 0.455126265 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129258365 seconds)
  done (took 1.206191953 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259070687 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175899727 seconds)
  done (took 0.523785721 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48549111 seconds)
  done (took 0.565878519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.871255818 seconds)
  done (took 4.953562868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213927919 seconds)
  done (took 0.353227516 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233963564 seconds)
  done (took 0.307006601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.745564725 seconds)
  done (took 1.819276932 seconds)
done (took 21.457433619 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082848891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082529231 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081269247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078596529 seconds)
  done (took 0.36835518 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076678816 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07265495 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076041683 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072679226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076106018 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073143293 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074374763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075489585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072466034 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072948585 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072930317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072512442 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074781061 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074005798 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071049644 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074740836 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076039407 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071948702 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075406652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072858749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07009745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074590576 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074694845 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07158082 seconds)
  done (took 1.845746883 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078169071 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072627541 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075615099 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072430392 seconds)
  done (took 0.39640679 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077919608 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095318354 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089934666 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.0787127 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092916928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086562643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06875671 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069228792 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070619533 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077506752 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067574682 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096350852 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087864527 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077035695 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079883064 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065655908 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067862848 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087438654 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077867336 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078024236 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069849137 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077368005 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067936847 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088442254 seconds)
  done (took 1.972339603 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08580918 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105047823 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08156437 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088691195 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091361958 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065237853 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08759425 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090853181 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126595372 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065364167 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070661317 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066068743 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072818315 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065144039 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08111786 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106787722 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110343301 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069004358 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096599532 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06541656 seconds)
  done (took 1.793782134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071981633 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070125507 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066100394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06906529 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07693858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072910272 seconds)
  done (took 0.525528217 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068254866 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067512956 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067501387 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066974941 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072201926 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067282848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065806111 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067831848 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067211786 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066749337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066271256 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065925509 seconds)
  done (took 0.887249346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201531407 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068767435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068951087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066662373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070453873 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066865925 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080667705 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068096532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091864918 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066413684 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066855769 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068727029 seconds)
  done (took 1.068983168 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208701535 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076145231 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239533526 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150434522 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110717979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115326216 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112155541 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114417314 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142401299 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102141092 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168594267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167223524 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1073033 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137156925 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088343352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100567272 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154247142 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162697176 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10484617 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167093295 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145660846 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12615938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153265932 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102161937 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105925985 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12165261 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071048932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080819545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172435848 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135406618 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144443442 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110672245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092096949 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177072467 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172523564 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141448414 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14626164 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084333748 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104810529 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134349167 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199921085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088399013 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161068206 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108265268 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079669595 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274018473 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121739146 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120182377 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106415359 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090454468 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144867672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183428919 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136726193 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087076733 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124063431 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113407841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114299794 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11411937 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18205956 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16184738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127593864 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071286833 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108984423 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153634724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133491782 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10821106 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124490582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091726115 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134901899 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156127766 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121055983 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144862091 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116935747 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088538947 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11954061 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140780075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12841798 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161011646 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123935643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072380653 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124173397 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101483195 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080529942 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144435427 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075154833 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177920219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098792856 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10911301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124383047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108455984 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108720893 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158545052 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145618002 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103204982 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065182657 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104491119 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11999226 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288778364 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087366555 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108978824 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117577985 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078179937 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137162084 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074797784 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122659463 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076538215 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127782151 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128668234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077075164 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12236208 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103267025 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100682869 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132039878 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160508535 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087488939 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08164405 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169406617 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121533536 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102415755 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144090512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157416563 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101938587 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100685293 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149023951 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180128603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088904907 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164091046 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106708342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083388532 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087588804 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123435977 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111596886 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123517922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081461186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117958018 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169229175 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074498559 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095199778 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133175568 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078611417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080581696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105149946 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105627754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095830804 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100959335 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104093908 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135809984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122727979 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104754998 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123118161 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097705225 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170100078 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087363839 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100729957 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103272458 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068844659 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.283957732 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15803219 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078925625 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165249559 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124282395 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11625642 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119339745 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08314754 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139994785 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078830137 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070361844 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143938691 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110845926 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1097845 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152092907 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115873755 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125933841 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118308617 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132989053 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131173955 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130773723 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105976775 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088417955 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112453335 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126867594 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073485892 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090264458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080027813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105389757 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096518655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083053967 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141686788 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124790402 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109611925 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112438907 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096534375 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148080808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076493706 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127975439 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119910817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095898336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153990983 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153875018 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131978172 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099923439 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137484511 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06982504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073715565 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087767862 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122290666 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082325654 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082621367 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115647732 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14747692 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128946838 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134965587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12178495 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268172281 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156555028 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070372505 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118036225 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148148248 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122086052 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104984254 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08949019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099010261 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142448095 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107185376 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182085647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116289208 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12415723 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154063184 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100553803 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079839907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102872553 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136095357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104011549 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144807666 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099873368 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087831602 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110159019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074900152 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098999611 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126919785 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119212636 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135306234 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115129359 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133301134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077092523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11558619 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12178753 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121610497 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06381878 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120615762 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162410709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09481503 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119484462 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155302966 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079310772 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134611739 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176511742 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1439816 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084450507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107498514 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118292499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128361846 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119534576 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139346546 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106212227 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285071567 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109826685 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086486056 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087196818 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098058688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105434253 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095877119 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108579852 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113770893 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094838278 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131293923 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103035055 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109578418 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117773096 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09852597 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090774237 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096822616 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177728813 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118573396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170754341 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099604124 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144067382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163512759 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074499935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078737421 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077579877 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139779516 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083935715 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13038587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106887258 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117607785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123417607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143851998 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095664032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068638215 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108847729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13314915 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123995583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098132279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103664987 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164230741 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101331811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078993881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114063451 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116531772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103196012 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173137314 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061499869 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106335748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076444263 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080815621 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12944892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151720974 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079504553 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103742273 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119047623 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110913803 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128558379 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102421514 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108162445 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27368095 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151121705 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128395979 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09016078 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112508866 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129911534 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156804639 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104467474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09664115 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171929797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152886806 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160556006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087333494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114777802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114820068 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108860647 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138413781 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083313708 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163714987 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081927238 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135990111 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103181403 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088758403 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129773684 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108241921 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087426494 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148779287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11787898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082127518 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077400604 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11804301 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119323199 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106291281 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075071797 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139583066 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072974712 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131903235 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160219455 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080721899 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107977645 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096504672 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07951122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106986987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10215969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08761068 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099905097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171898407 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086793315 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149470582 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132421252 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112409207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135386724 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101081766 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.788152887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07805267 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154064558 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117231099 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174782401 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101004164 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118279216 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109816319 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121829126 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144431737 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103703401 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178486935 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132348738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115345505 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079599829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101951876 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103811156 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087667017 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107767945 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114199862 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115422339 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092857317 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1157786 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124501847 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081960125 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096101454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157079634 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117100364 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144456432 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140656903 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08647269 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118239575 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138368471 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080149302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121944228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153685978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106397842 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099516815 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080580083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100809045 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159655092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072995147 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160774266 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120342254 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110271574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112599331 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111690063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12939645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105692687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120800174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091940982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109464248 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112677578 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080123778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075375263 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249214555 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11190319 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099475522 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098922216 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099300139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153206541 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072001418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098732474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114881351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145079084 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174642585 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088779623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082820143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118853724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114254715 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112672044 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121352988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07977047 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081385957 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082094918 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078874558 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109856595 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11368183 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114670329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111252342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163910298 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083410153 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228249457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095424983 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105103539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069473223 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078125499 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096262399 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098365865 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106996778 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110575348 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15948144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095069912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089813886 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091793552 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073433779 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083645608 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129165185 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109875316 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119039814 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099142412 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062313552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108488235 seconds)
  done (took 57.518470588 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108280773 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082510056 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093807216 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143212346 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123364602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203051275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153248684 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188859508 seconds)
  done (took 1.282528954 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067965721 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095207093 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104000147 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082969644 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067080991 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068566303 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232595138 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081697017 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067077735 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101089949 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079895734 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068803619 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434034972 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067749045 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068129855 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060610049 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06728616 seconds)
  done (took 1.907954334 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387751429 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609624203 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351091317 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07279596 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.453085078 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087064514 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.129494415 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130522123 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072445989 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523067461 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404192628 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122857345 seconds)
  done (took 16.457750059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075259667 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070013802 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083828296 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084135172 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073227094 seconds)
  done (took 0.470494916 seconds)
done (took 86.586660228 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080814174 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.616362377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052954726 seconds)
  done (took 0.78014835 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08277496 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084987463 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086033245 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082976211 seconds)
  done (took 0.436789897 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074266328 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075387012 seconds)
  done (took 0.234664478 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233130612 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163682651 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096710827 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082908035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078828686 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079294943 seconds)
  done (took 0.335182141 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072615991 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074330228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072426773 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076987796 seconds)
  done (took 0.377960473 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076388115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052559133 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055918207 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0574445 seconds)
  done (took 0.326389197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086905475 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079111685 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078307499 seconds)
  done (took 0.327673605 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101038689 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085813258 seconds)
  done (took 0.269753996 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081497369 seconds)
  done (took 0.164827393 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101061751 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103706597 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132730654 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110918968 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139403866 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110377456 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0856218 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086942598 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07729226 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086538776 seconds)
  done (took 1.115381363 seconds)
done (took 5.029360216 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081476738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46532925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361215668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090342861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668012354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356012456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003094512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093579292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115693192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068320751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086986605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652343284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.999123884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.42080846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983524979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324635511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648348478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06853793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06752094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067840372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988652795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067552139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06739479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068137548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649503234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372056911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068183946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319802146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067615756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070230486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35420794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067852884 seconds)
  done (took 14.836680942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070268322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119400702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075806058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08503588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071797863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069645437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071248807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06895004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120888302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068174315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085191116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068762543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073201658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08519881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087897162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068454658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069049634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068987542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068097467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068734949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087839886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067449418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068320854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06817127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06857102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080483719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068379458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067551157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068073691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069943834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070952763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068937399 seconds)
  done (took 2.535564514 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113762226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123953457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074746155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10257143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112564687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069624493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142293599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093415328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12727114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069855259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085928247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068135962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101957302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070380095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088084817 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068707007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069383732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068267384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068319629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068569982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08769087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068445192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068217328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068917434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06851623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083043433 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069130376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068210095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067866804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06992956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071701283 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068856303 seconds)
  done (took 2.761996917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072453836 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075406976 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082846081 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083892787 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070509813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072931083 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073879025 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070476163 seconds)
  done (took 0.718433732 seconds)
done (took 20.954171656 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08192268 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071696238 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075107793 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085243823 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075529068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081852024 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068637108 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076561101 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073396899 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073524672 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075652782 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067451713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070684212 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067095593 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075436012 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067871244 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080662052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072128788 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079131117 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079369249 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069180896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073051463 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074398195 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079372665 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079206582 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079010014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077697305 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072766225 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069335887 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070574087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077020782 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084871632 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069949682 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081197071 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06985462 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06960026 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072829631 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067797515 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080617448 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077848824 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07040886 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076869056 seconds)
  done (took 3.195498982 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087449726 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094897153 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087325898 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064161532 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070158188 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068497083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091328134 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062704126 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061163504 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088938887 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05718026 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060818758 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066436575 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053797327 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059852175 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057036818 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062453195 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055515666 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060186167 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05952511 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089148467 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053679307 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077959136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062920958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055708382 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061567765 seconds)
  done (took 1.89417027 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074675512 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085719936 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090326776 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13093094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107390385 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079242887 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079066531 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095646518 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088882818 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066775285 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071267588 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093668763 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090490449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073953443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067954416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085875256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08323853 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069533638 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073295633 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094813057 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086806385 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08585096 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095931703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084273093 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066761532 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069940383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071286502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081434517 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072514514 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076769789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071690045 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071210405 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06920071 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079133399 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071359184 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069236501 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09215914 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077294778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078886916 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068234461 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075964889 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068892177 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092382444 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126273331 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06920263 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074407476 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071236327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078077415 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0676392 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088094031 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079170723 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067734479 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070833659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067004961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067889946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081166773 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070213596 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070496477 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076850039 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073900079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092834238 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072602426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084054437 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067569385 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076913836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067535064 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068285946 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06711938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09643479 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072271107 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113441765 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07199951 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071468791 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079224978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076340278 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073948569 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068630311 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083944731 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079033655 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072611399 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077502517 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072147213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070800295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092158994 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070725945 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071145491 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06900059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073738511 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070694703 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069183905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081174595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067367507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071193199 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085936575 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067608071 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069708736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073649954 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071991189 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067535116 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079486885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0727242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068666294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077872658 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067807687 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070567596 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081456836 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074073374 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067053568 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072251945 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073686787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069312419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069338138 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07062229 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069780961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077021228 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074864011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073412266 seconds)
  done (took 9.148116663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164107489 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157067086 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070441402 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148288803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076536214 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079352435 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162733853 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096014502 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069135053 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068925235 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069324823 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110611816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110103918 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12271646 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08249158 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070527432 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086242559 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115241173 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152782515 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146870665 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08510263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077477126 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06953113 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068456462 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070782185 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078808856 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085428833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077183685 seconds)
  done (took 2.975300416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079669189 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105865093 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075156971 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09105881 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091090636 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067582478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070211755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070003427 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081609355 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079752108 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067793826 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073905933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075416306 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071503848 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068809469 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074964145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075532872 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069724777 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072268564 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073546219 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078887585 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091805203 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072136436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067528282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073213566 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066991792 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063549534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084912579 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067984536 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09540417 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065507449 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073970219 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082161088 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068816592 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067673054 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067798324 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067262895 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067535167 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069431027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066187114 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066389643 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057316835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066816487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079546152 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074632205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056242256 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072840834 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072971215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073218111 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064996682 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071387592 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071105794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070862212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075965652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071948188 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073319352 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068815991 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074043999 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077155286 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06773782 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064682265 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066377276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073424978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067334577 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077274801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072959559 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066672122 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067795843 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069888354 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074756989 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067692613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072361564 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065791984 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069725758 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072379298 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070142471 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069113429 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065914652 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067337421 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068034816 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055146376 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067758307 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053194715 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071254312 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065995459 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066024083 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067339543 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0723172 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079799515 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069011796 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073176894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068386835 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066593956 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07057434 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059857539 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069960353 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083213605 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082686248 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067080675 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065595018 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081780762 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072286602 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066581431 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055775832 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073025203 seconds)
  done (took 7.646125326 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090080544 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070223048 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083788238 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091502021 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087178221 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074831601 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077764537 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069165838 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084493066 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074479081 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076960949 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067913899 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078159111 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077838488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069354122 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078626242 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072242158 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084416285 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08346343 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068055395 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07716836 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081093386 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08993638 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08205339 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080595977 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082224602 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090245458 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077466288 seconds)
  done (took 2.408669984 seconds)
done (took 27.355544071 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.144731103 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.336193175 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.139461862 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.491077731 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.748669836 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.431166024 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.264814176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.12798658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.641806749 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.202083449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.335626746 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.25030717 seconds)
done (took 45.175397496 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.156536958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.2687945 seconds)
    (2/2) benchmarking "String"...
    done (took 0.368196211 seconds)
  done (took 0.698191295 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.336310364 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.686308519 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.380709061 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.128414395 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.133439715 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.468242874 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.957367846 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.653933449 seconds)
  done (took 17.467346591 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.258748013 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.408120671 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.929771743 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.931663854 seconds)
  done (took 7.658143087 seconds)
done (took 32.47892221 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.150712103 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.143215407 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.148581992 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.110414918 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.181695846 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.133382516 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.237666341 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.330811604 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.127956073 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.118685598 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.157955511 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.55233857 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.136746327 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.26417489 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.128590285 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.13755991 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.137318523 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.549439202 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.282832241 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.135360843 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.146720135 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.153856364 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.129674578 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.141876185 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.153887752 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.129744452 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.551035224 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.134470148 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.753464103 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.128688778 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.154620781 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.448892367 seconds)
  done (took 150.243457218 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.126758319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.187524364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.270637913 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.168952402 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.667600914 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.307806918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.242628842 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.717341294 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.129111225 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.151829801 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.374378423 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.12854016 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.39772712 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.073622734 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.157489412 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.22767107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.400976566 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.414363914 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.16053554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.305069526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.136537315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.259412835 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.209509391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.355532697 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.139352179 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.138514157 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.135861345 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.16022161 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.31213843 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.37614643 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.146076834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.128408599 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.256318124 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.995949112 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.129288882 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.147838445 seconds)
  done (took 109.698767154 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.51132445 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.125750274 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125776441 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125389477 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.13309497 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128674778 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.247919615 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.254005938 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.737630443 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.652195958 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178858366 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.944854169 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.125393178 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.192688732 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.137011233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.126256102 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.140826256 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151674854 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127168158 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126613747 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.253329057 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.13715911 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.150698455 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.134347269 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127048289 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133124708 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.499377961 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.125167671 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126312225 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133033385 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.369450705 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126026221 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126616488 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.021204863 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.417221648 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.211440419 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127500764 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133043577 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.126160611 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.346671139 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126232855 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125711075 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130853277 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.296253423 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126362141 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.249674417 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127672506 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.624524624 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126031613 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127142166 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.949444328 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.816899106 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.128967819 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.128332023 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.129172347 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126286938 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1272789 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.132431464 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.039962759 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.207006231 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.128996345 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.12992742 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131857883 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126458375 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.126428728 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.25669147 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12704051 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.598617854 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.185787944 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.252838578 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.248280908 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126411373 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.194107577 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.218724022 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126451097 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126577727 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.127000359 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127046403 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126648067 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.207456492 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.125295903 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.250334539 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13320188 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.126270477 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176009625 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.195484421 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125507942 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.015627461 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.1266675 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.126031739 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.419257652 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.191688489 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.125251044 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.126179035 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126615217 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.250532783 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.247513961 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.892567545 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.126190678 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.055831095 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.13327961 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.125986566 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.265576013 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.124317594 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.311233126 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126625841 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.208069117 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128595594 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12598841 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124481613 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157177107 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.124341927 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.181715293 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.124364503 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.499207081 seconds)
  done (took 213.959458148 seconds)
done (took 474.4964744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.782202075 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.736651656 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.854735588 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.764991568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.735002025 seconds)
  done (took 3.922608816 seconds)
done (took 3.980545062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.208207518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214532462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150244064 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.216482895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145259071 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.210265526 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.194214014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.15140702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.180561791 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.150546008 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180558023 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.149810471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.139466935 seconds)
  done (took 2.340093659 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.357861214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.372072494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.204275216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.381150853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.180161635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.354049082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.299251162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.291109731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.287681278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.15194129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.140139775 seconds)
  done (took 3.073793106 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.35776241 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.371083871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.210975843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.360078177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.184774494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.366101514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.2983651 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.289724445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.286281824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.149597441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14057628 seconds)
  done (took 3.068765381 seconds)
done (took 8.541691281 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.134845316 seconds)
  done (took 0.182823937 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.159984155 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.31269808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.138962049 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139932513 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.136866301 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.137152788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.137937606 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132906957 seconds)
  done (took 1.351692333 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.132481633 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.13462975 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.131111075 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.133513035 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.130747244 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.131490023 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.131203059 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.131184959 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.133923511 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.133418702 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.134232646 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13123298 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.131011412 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.13383862 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.133951171 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.131441957 seconds)
  done (took 2.175699976 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.132073016 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.131467996 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.130904616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.131854661 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.131042878 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.130839502 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.132564875 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.131351778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.130669742 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.131172716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.131914766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.131598036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.131910719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.131145154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.130969587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131917349 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.131347383 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.131573742 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.135515752 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.131601713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.13180053 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.131205496 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.131674329 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.132166082 seconds)
  done (took 3.216665546 seconds)
done (took 6.97993493 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.932557049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.649565259 seconds)
  done (took 3.630391104 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13246261 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.134434672 seconds)
  done (took 0.389616547 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.133772106 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.134246582 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134472913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.133845344 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.134132598 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.135129985 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13433625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.134184171 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134227359 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.133889795 seconds)
  done (took 1.395885592 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.132968449 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.134581404 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.131901708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134315068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.134325763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.131163496 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.134031161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.134544329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.133958967 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.131163438 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.134498177 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.131175633 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.134038763 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131608404 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.134501799 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.131211917 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.131242042 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.131744713 seconds)
  done (took 2.446887154 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13354445 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134525778 seconds)
  done (took 0.321387438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.130418859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.131723049 seconds)
    (3/7) benchmarking "month"...
    done (took 0.131076444 seconds)
    (4/7) benchmarking "year"...
    done (took 0.131669176 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.132061126 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131876592 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.131315291 seconds)
  done (took 0.973607085 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.134396945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.293920187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.36771574 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.767845691 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133948759 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.137141234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.055439621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136314407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.139253117 seconds)
  done (took 3.21966603 seconds)
done (took 12.4308389 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.916765089 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.129347304 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.522107594 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.218928179 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.151877924 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.46745115 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.139465968 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.429914121 seconds)
done (took 28.032075879 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.17172377 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.690329089 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.742669459 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.633032684 seconds)
  done (took 6.1176922 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.1088939 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.659410343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.179503078 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.706934409 seconds)
  done (took 11.715513103 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.496720807 seconds)
    (2/2) benchmarking "read"...
    done (took 0.485360094 seconds)
  done (took 1.046081099 seconds)
done (took 24.107403584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133584432 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.135326878 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.132012018 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.136044225 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.131940878 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.131815376 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.135296666 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.135090623 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132289854 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.135243172 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.135595017 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134818247 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13416576 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131806256 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131998077 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135321524 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.131795336 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.131807465 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132095532 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134920552 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131967496 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134808841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.132356769 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.131792754 seconds)
  done (took 3.253367546 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.13527397 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.133004448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.134807071 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.134847234 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.13274048 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.135448889 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.135045596 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.133225226 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136877786 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.136575349 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134220776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.133352624 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.135458663 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.134210419 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135756965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.130988097 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.135074333 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131488231 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134049861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.131445167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.133741435 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133204866 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.132108833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134912368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.133392166 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.134102397 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134760398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.132880825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135863614 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.134037766 seconds)
  done (took 4.077455406 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.138081582 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.142277808 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.133805074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.13348703 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.135171014 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136129242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.135422874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135268801 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.134537134 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.13472404 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.135523795 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136395448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.136292279 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135022727 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.135907139 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.134693411 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.136168528 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135207307 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.134797106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.135119072 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.137404991 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13500139 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.134812213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.135054268 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135161325 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.135297315 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135106602 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.134694793 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.134845228 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.134600192 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.135519916 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.13474987 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.13477602 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.13552511 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.135683253 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.135011244 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139123962 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.142230717 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135287077 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.135470847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.135449531 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135697416 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.135419365 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.135472322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.134855457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.134969756 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.135047686 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134689737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.136416171 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.134919187 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135240763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.13532123 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.134981724 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.135812346 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.135670208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.13500996 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135004475 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.136045265 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136654321 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.13659506 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.136674559 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.136402602 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.135142932 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.136578446 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.135770479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.136668274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135913774 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.136327995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.13602536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.137144149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.135726355 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.135512807 seconds)
  done (took 9.828542539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135565649 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134128038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.133730656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133355759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133247154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134288018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.131872945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13643025 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1310463 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133708215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133498748 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.131139885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131354134 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133603687 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132979161 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.130886356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133845925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.130815952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136510157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136171407 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136315151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131517211 seconds)
  done (took 2.990705736 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136488802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.136760867 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.132684425 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136197188 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131013843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133315934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.133757431 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.133556156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133916733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131290515 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130634331 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133889302 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131580307 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132634204 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131078521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.132170743 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.133863859 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.130912797 seconds)
  done (took 2.454209106 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.13311469 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.1334467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.137074199 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13461663 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.133238934 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.134664676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134362956 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134369857 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.133399069 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.130866624 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.134671105 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133919142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.133864013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130978294 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133496433 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.132143991 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.135073741 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130637604 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133750383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131064618 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13110777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133831048 seconds)
  done (took 2.988941228 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137115953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.136806888 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.135210456 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.132119824 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132032846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.135041005 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.135835903 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.133934125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.135262567 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.135578204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132328315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.136138535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.135238664 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135017635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.134204439 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132993381 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.136557347 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.131981323 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134597734 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.132761655 seconds)
  done (took 2.746864428 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137256007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138930581 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.136462388 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135108113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135598485 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.135187348 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135307203 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13514372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135754859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135413041 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.135860316 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135312439 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135398943 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135703976 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135775589 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135214026 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135262216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135303426 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135103881 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135776446 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136036549 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135340553 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135647294 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.135657319 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135165871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135250297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135047968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13528553 seconds)
  done (took 3.854039344 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135236841 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.137052935 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.134596625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.133726592 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.131910402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.131671798 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.131329827 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.131655534 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.133787459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131411708 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.134385891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.135247354 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134396675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.133843603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.133888073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.135495513 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134371103 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.131638936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131387637 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131626368 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.134249119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134684636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.134400251 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.132600284 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132337632 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.134840585 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133173937 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.133484894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134953246 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.133070039 seconds)
  done (took 4.063662304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.15338621 seconds)
    (2/2) benchmarking "in"...
    done (took 0.154753832 seconds)
  done (took 0.363380336 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.133080238 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138392984 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.137114828 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.135143512 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134454717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136217365 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134675581 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132516064 seconds)
  done (took 1.136280476 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.136001727 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.136969209 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.138154363 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.138439948 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.13656433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134987076 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140996748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.136962852 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.134953247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.135820954 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139802442 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.141361111 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.137102008 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135773589 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.135304544 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.138703819 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.138577707 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.136203299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.135358821 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.134564946 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13622276 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136560739 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.137345041 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.133603588 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135680213 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.145424744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.14062332 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.135754813 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134010091 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.13925976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.135181314 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.131537966 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.13560979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.135897242 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.135135585 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.13547015 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143492235 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137173402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141001014 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.137352564 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.134750042 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.131661978 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.135462265 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.137396859 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137094007 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.139751527 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.136722304 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.134120889 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.135541541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.138654251 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141394054 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.135970995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.134195229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139155665 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.141002467 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14529463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.1415754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.137481993 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.142007399 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.14312459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.149336024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.142381034 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.137107296 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.137306155 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144021234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.155107918 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.14238198 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.134370165 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.132287098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.134359125 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.141235096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151245072 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.145023223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.136461715 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137968359 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.138018922 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136524527 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137074904 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146189644 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143308616 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.140227989 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13582445 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143882604 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152549427 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.13431554 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.135337644 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.135908051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.136867224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13629822 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146824291 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.138022723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.134914788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.135060896 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.134525589 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.136598039 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.135556997 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.135109021 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.135518969 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.133117678 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.136499296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.135638208 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.137889673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.142137996 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.136470974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.136513196 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.142867642 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139291906 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13465317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.142801136 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.136978207 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.135937135 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137118892 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.139806691 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.133150831 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13780195 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.141793012 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.137063712 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.136122146 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.136366348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.135375587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143792067 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.157602154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.136243682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.135301868 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.139016355 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145162739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.135849568 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.139310459 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.138769896 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.133950456 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.134727994 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.138978163 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.138482922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.136353604 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138859514 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140088662 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.134399279 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.137833694 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.137426886 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.139152004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.139967628 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.140089924 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.14037989 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.141070437 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.139771205 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.139968618 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.14631747 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.140881559 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139601223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.139872304 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.135973021 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.137461627 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.138778476 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.139592118 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.137367379 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13871156 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.137268565 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.138337344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.137252923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.137299249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.137035807 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136634496 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137788771 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.136941325 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140091532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.137263723 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.133093725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.13486969 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.13618724 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.136674618 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.136405451 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.135778332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.13999193 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.143118079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.135022414 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.136432816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.139117611 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.139350365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.139018634 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137716031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.138988143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.142355092 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.136068762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.142868563 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.139393892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.136928218 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.135950498 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.135453283 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.13480615 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137396531 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.138792972 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.141303333 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148063938 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1453036 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.136578321 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.13854469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.136444788 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.142404213 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.143553203 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.139368835 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.137622687 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.140102855 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13779016 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.138898221 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141360541 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.13928781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.137604645 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.137684951 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.137396128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.13816333 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138708089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.137809017 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.138946626 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.135960728 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.137335337 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.13928763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.137578252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.13534065 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.136076276 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.137307581 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.138262849 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.138983603 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145621661 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.139204519 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140072899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141375319 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.139792888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.13725793 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.137501105 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139493774 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.139902989 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144722022 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.141132556 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.142134116 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145326855 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.140172545 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.134540231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.139449325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.140142234 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.135155317 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.140165137 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.145837721 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.139170731 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.13904809 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.138962498 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138345077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138602492 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.144162563 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138416501 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.137354186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.139158415 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139688352 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.135429513 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.139804519 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139959 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.138899802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14064124 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139775085 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.138193651 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138428744 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.139279293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.139423075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.139090994 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.140263745 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146401578 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.143488593 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.141989801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.139948018 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139624529 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.140609238 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.137681677 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.138948744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.138735597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.152074479 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.151388402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144954748 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143780037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.138083884 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144262438 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.142175345 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.142245032 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137920036 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140134825 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.139427779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.138381628 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.13681832 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.139838307 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.139223843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.141292623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.141919007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.140765011 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.139206748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.136374315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.13886155 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.140562508 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.140030767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.139102969 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.139330159 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.140805775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14082927 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139976763 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13977633 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146284165 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142766378 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.142022615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.140150757 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138507368 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.137504856 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.139979796 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.140938528 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.140943344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.146745688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.140294198 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.146387212 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.137071143 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.14648381 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.13837032 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.140251045 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.145297815 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.133544281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.136688695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.137689307 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.138828329 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146079913 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.142994997 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139437249 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.14298197 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137432805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.138299396 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.138122574 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.139682163 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.138664845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.139468079 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147223981 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.141915656 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142833578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141289149 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.138399122 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.138668175 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.139212628 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.136796712 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140090367 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.138657546 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.137010251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.136568406 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.136775277 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.135891406 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.136645913 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.136873494 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.133742589 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.136334351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143223228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139189622 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140777982 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.137387043 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.144694896 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.141526828 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1435018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.142007211 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.140161108 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.140759066 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.139210188 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.139571891 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.137767074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.139131928 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.140977608 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.14030366 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.141326528 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.139866692 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.141858493 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.139564208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.140589522 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.138882342 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147048384 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.160593772 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.140184542 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145211278 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.136792706 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.139255964 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.140988431 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.137002391 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.135134684 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.137741885 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14453868 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.142569685 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.136017539 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.13687792 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.137607756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.137767396 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.136129556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.136095706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.136683119 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.138762006 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139407941 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.140249565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143673031 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.14078523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.138969945 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139993113 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139800441 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.145449684 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.139323923 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.136963796 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.137283036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.136719189 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.136701673 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.137140677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.137888248 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137286268 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.136626991 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.137025614 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141534521 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.141363712 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.138555332 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.138175615 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.137843337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.1375317 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.137049043 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13723553 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.137355839 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.137772612 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.137933639 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.137934657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.137090564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.13517809 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.135899574 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.136876365 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.138155914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.138912468 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.141997073 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.137213491 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.135116228 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.136252389 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.137031544 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.135811871 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.137325999 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.144102952 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141940109 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.144634192 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.143171637 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.140713013 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.136717327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.13896536 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143353133 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.136184665 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.136610637 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.137772119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.138240861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.137977101 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.138865837 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.136947683 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.143299321 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.138445155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.136087747 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144227187 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.139472623 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137552282 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.137162598 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.139896327 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.136190894 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.133540102 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.136098156 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.135538541 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143450553 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.13969958 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138549183 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138678008 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.136055756 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.13641271 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.140076005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136309818 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.136802238 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.133973462 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.137534861 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.137167924 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.137093039 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.133803594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.137336358 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.1364069 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.138549682 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.14137421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.13296416 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138868156 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.137824273 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.137043033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13790549 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136372698 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.132965078 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.134064339 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.135461604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.137149829 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.136136438 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.139589862 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.137017867 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.137330695 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.13650603 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.137728273 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139181275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.144378991 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.142666285 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.133329154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.13584455 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.137280588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.140387088 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.138515895 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.137413595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137012274 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.137377821 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.136505382 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137341868 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.136939493 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.138805318 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150606539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.138996447 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.137100444 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.136906265 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14001263 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.137894141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.133892965 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.136722535 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.138857614 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.139399599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.142977416 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.138546277 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.144097056 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138745602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.137229845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.139277874 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.138487436 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.142663701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.140023469 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.138084008 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.137742916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.141560821 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.151193122 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.138359424 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145986238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.162699923 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.139169292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.138138398 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.13755197 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135957078 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.13741082 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.138871877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.137887696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.137003323 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136651214 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.137513816 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.137385682 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141483728 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.139450463 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.13743476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.136076261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.137082272 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.138145938 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.133861631 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.137286167 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.136965022 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.137297684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.137505971 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.137911834 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.137431576 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150136491 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.147448297 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.136923524 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.137594366 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.134868703 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.140621361 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.1405984 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145115448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.142662369 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.137227985 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.137933114 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.138574668 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.138514033 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.134078582 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.137132275 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.137160761 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136574836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.134474765 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.149711118 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.146332703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.142914384 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.138697571 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137942068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.137589276 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.138198805 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137953667 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.137663162 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.138699473 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.137602247 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140690204 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.138043663 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.137179042 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.139706087 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.143111291 seconds)
  done (took 82.93331745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137678325 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13401497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133958796 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.133686412 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133890643 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134187152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134088996 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134117525 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.134206693 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134088717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.134323192 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133870444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133935706 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134940721 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133864669 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133854755 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134244313 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133557175 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134161222 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134075037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133897676 seconds)
  done (took 2.874379389 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.139501994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13565917 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134184016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136848754 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134373708 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136593411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134445033 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136909971 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137050939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134216867 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136551939 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13666781 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.133981527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.134024992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133920736 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136446282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137078023 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133894993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.136804805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134171008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136676188 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.134864547 seconds)
  done (took 3.042898446 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.140023209 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.142355139 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.139600748 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.135282846 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.136973231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.134625984 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.138193935 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.13763835 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.136985088 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.13747702 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.135699758 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.137299361 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.14208946 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.140570958 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.139465216 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.136989606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.280244289 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.137564534 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.138624386 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.137794499 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.134319514 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.142874938 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.136122166 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.13471712 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.136243901 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.137539623 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.137403894 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.136868742 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.138379705 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.138494364 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.141311881 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.137049839 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.136796121 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.139127701 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.137580487 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.137279999 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.140263497 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.137844974 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.13502684 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.136853975 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.145365862 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.154042424 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.13878701 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.144633957 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.138950338 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.136851218 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.139872205 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.144067058 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.134495463 seconds)
  done (took 6.993532679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.140101996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137343622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.134221563 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13669754 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137723286 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.137028597 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.137274115 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137292589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.134306926 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.134166285 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13738817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135166939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133951719 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.137000991 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.136891582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.134607827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.134164701 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.134386244 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.134397152 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.134324927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.134366643 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.137161553 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.137088081 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134809719 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.136958723 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.134775576 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.134691782 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.13715979 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.134864981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1343298 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.136784004 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13763537 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137329758 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.135207163 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.134604842 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.137486139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137134034 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.134139987 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136846876 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.134559541 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.137183672 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137732384 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.137214071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137741911 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.134859631 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.134494878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.134729604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.134619348 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13531563 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.137366271 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.137823636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134790613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136975641 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.134488048 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.137013484 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137234908 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.134159642 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.134718147 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.136898578 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13520294 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.135002218 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.137119785 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134707155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.136962589 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.137316385 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13518455 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.134758668 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.137718342 seconds)
  done (took 9.305770156 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141854102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.138821068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140065118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138797856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139027544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.138909554 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.138687917 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.139104209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138757998 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138511881 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138644375 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138081024 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.138725389 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.137794572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138188465 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.138358419 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138554088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13937605 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138909224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138772059 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.139418241 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139264871 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.138947149 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138883678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139488686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.138996517 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.138718993 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13926242 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138769028 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138978155 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139346598 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.138687778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13852943 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138790816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139270523 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.139143853 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.139123094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138633667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.139148204 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.138865672 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.138849306 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138919605 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.139298034 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.139504001 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138738686 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139525821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.139398417 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139347467 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.138353945 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139171964 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.138794881 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139250062 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139136427 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.13875332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.139351797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138128472 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138828403 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138943529 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139144996 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13903694 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139129422 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13816373 seconds)
  done (took 8.67581465 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139912719 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.137925056 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.134947545 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.134782897 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.137821213 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.135210443 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.138148889 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.137798199 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.137695807 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.137914324 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137580704 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.135081682 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136071752 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1377789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135683909 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.136916204 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.13510564 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.135246738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.138141844 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.135611094 seconds)
  done (took 2.792369607 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.138195994 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137998016 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.13486067 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.135266129 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.137871325 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135686582 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.137972917 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138565375 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.135820759 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137831911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.138827046 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137814661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135200602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135274161 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138105289 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.135669211 seconds)
  done (took 2.247821028 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.137129493 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.141184274 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13893792 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.138995651 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.136089464 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.135179712 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.137797111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.13555746 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.135345249 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1386146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.138466429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.138174821 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.137970356 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.13880871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.135651344 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.137877119 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.135294491 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.135496511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.138117753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.138953569 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.136706043 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.13569158 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.137856332 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.138927252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.13564235 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.136097188 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.135719776 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.135432234 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.135466705 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.138196623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.136279075 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1357312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.135575314 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.135470283 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.138637753 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.135492762 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.138514098 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.137928362 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.138313107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.138436631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.13813304 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.135524526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.138658329 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.13851129 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.135950403 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.138153516 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.13621467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.136278572 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.135621237 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.13622416 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.137823875 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.138545445 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.13825784 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.138533994 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.138033327 seconds)
  done (took 7.606120375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141326544 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.138462736 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135250951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.138255033 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.138864228 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.135632454 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.13827046 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135405702 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.135598461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.138011104 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.136256324 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138058738 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.135840816 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138066518 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.136471393 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13851606 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.135662118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.13569547 seconds)
  done (took 2.528296072 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138949239 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135766742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.138664044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.135881043 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.135571646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138661007 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.135352758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.138219875 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138645448 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.136348701 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.135449575 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.138641496 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.138157974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.138196826 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136408023 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135597959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.138358048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13812629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.135416743 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.135742633 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138497923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138101999 seconds)
  done (took 3.077233757 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.139859954 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.137676669 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.153112897 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.153668403 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.158013975 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.164701757 seconds)
  done (took 0.964281286 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138573105 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138312863 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135395283 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138435365 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139092061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135645652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135903142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135976681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13814119 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136115109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135659324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137964141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138673099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135899577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139052413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138681651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13553602 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135946959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135868398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138375433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13580205 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138702183 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135850499 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138257986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136105348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136909468 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138761239 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136142396 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13585009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138553852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13838505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13586537 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138974427 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136464486 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138861695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139307262 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135707235 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139105647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138561515 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136051318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.139147962 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139247634 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138951062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135911684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138545484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136157986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136199574 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135629236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13594922 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138832301 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138528972 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136555139 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138787653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138988945 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139275545 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138888151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136240146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136160635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139093164 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136432899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136581166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139058758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136211922 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136825094 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139171572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138079748 seconds)
  done (took 9.1310249 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139470239 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138375483 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136048873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136730297 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136154949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136166102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136807628 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136339205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136386941 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136258336 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138947067 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137245706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13629161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136449326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136826555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136442392 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136269978 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13695235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136229353 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140337418 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136921445 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136229508 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13669054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136910351 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136623393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139525041 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136782717 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13629309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136332382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136811294 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136128678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136490159 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136374621 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.136601849 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136489909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136634898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136588454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136806707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136284879 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139384456 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136780919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139119228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136373073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136257391 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13740972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136604357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137297647 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13635499 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136385483 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136712525 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137167728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13669954 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13695521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136909063 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136507932 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136705909 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136348859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137900248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137140555 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139084615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136686962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136780139 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13987078 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136900038 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136755885 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136800224 seconds)
  done (took 9.102741293 seconds)
done (took 189.088850006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.166959024 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.20465589 seconds)
  done (took 10.42353401 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.299324951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.253251443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.136973246 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.176147511 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.136353831 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.15802474 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.153848777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.136804154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.137589066 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.137335262 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.137375007 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.324632956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.151108093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.136505747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.136672817 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.229150488 seconds)
  done (took 22.907690035 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.143683793 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.141581215 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.152282329 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.144487228 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.140556624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.152421612 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.174265154 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.143891227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.174379855 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.152573834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.208042113 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.149699847 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.139417573 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.188713342 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.153156062 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.154417974 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.23735312 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.214451772 seconds)
  done (took 3.024139406 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.216071296 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.142189369 seconds)
  done (took 5.427267579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.163994837 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.195662396 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.191604903 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.162212223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.436243966 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.448343096 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.158281243 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.154873794 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.139865794 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.165109762 seconds)
  done (took 52.284883557 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.145798943 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.142244249 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.141774208 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141273558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.133747154 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.134239952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139576065 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.135180011 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.816418032 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.191174466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.148507536 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.146776539 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141920826 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.142470152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13828414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.164128514 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.276676212 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13870274 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.137549457 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.145744731 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140915509 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.196135397 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.155562934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.141923844 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171253388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.809991429 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.14686106 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.146903912 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.271248917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.138534822 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.14118182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140943494 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.142447785 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.517151408 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.420786077 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.141578002 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.152690834 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.149179993 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.138443382 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.2768887 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.141723114 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.145645455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.028619844 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.396715457 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.258201498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186839826 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.506534974 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.162414356 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141938759 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.16993066 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.143472289 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.141795692 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15411887 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.644624208 seconds)
  done (took 37.533979055 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.138227281 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.398460709 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.291725596 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.136969422 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.426083058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.343997918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.136501281 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185049835 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.136364952 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.365335733 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.299512354 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.246307629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.135831056 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.135167071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.134648285 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.132317705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.296390484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.212623313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.136680105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.132106058 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166574916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.380127568 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.267253932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.137507338 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.155314967 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.349526063 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.26320969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.246667447 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.420034543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.132103324 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.201264819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.137287875 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.132775403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.131504046 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.291633168 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.233647673 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.228509213 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.135726118 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.132117304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.132549432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.807937077 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.33420076 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.238829705 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.279822145 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.382835556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.341144646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.923691521 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.131384673 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.867468145 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.294854165 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.368882291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.365447089 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.259629985 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.135480337 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.642340215 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.130723405 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.131272461 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.369343032 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.363768551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.238171663 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.135631228 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.131156514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.130299231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.378175712 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.135610734 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.228212491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.135414183 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.132493687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.228620016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.23853693 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.364784322 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.348299199 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165905777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.436811825 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.608816084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.381583344 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.202180511 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.366966958 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.135070221 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.13094525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218284063 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.977775001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.290929975 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.384210019 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.388809393 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171556413 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.85444198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.13060852 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.361733967 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.356927743 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.437026741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.375939331 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.288835031 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.267498477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.13079925 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.130352173 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.409199714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.271088338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.137251771 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.492201277 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.367926822 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.707954595 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.161498639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.48034461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.267719926 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.138370722 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.775010371 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.130977857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.358281911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.175288591 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.132484053 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130695461 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.352359854 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.208956742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.130856443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.755080355 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.195744815 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.133853364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.365988589 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.132376677 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.396713337 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.13436268 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.371001355 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.519723615 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165695484 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.355891505 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.372708824 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.135854497 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.39763185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.38082376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.250570815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.356688679 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.760686237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.132323992 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.422241648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.132996909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.129468164 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.304124759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.131906563 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.302054363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.13758456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.470127623 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15664628 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.286882869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.134094966 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.388232596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.168049669 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184563165 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.132387632 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.26396194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.131173705 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.03373199 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.287464747 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.132178104 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.129300096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.795703283 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.129672059 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.288155796 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.364964366 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155777304 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.205669494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.805799151 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.129325799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218721333 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.157743926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.464688603 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.13024215 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.286643284 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.132555439 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.665698462 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.13011131 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.374322105 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.314746099 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.132111384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.129022984 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.041281849 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.129495804 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.12945355 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.292476896 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 3.94296483 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.130024751 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.335097288 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.135124357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.26275214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.133558123 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.203482684 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.485391315 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.130459496 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.130371813 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.129556356 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.128647441 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.12985624 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.390881673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161636838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.655171983 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.270682623 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.403467864 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.450834471 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.382336733 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.177712332 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.134498585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.379017094 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.133639155 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.196197872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.132197273 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.154373104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.366055613 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.133440967 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.345252121 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.413363389 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.069327357 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.18129197 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.134031937 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.131686898 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.006836585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.282594575 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.223750897 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.132753076 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.128993097 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.248508562 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.258049734 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.347091801 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.132109549 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.363761983 seconds)
  done (took 512.562105503 seconds)
done (took 644.221892667 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.134002009 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.134004636 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.11712229 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.133553859 seconds)
  done (took 20.568900414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142454806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.136479905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.138250223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.136686134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.138493944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.136759207 seconds)
  done (took 0.884741914 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.191368049 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.134237697 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.133293957 seconds)
  done (took 14.516650541 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209269506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.521087193 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.251853386 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.569096155 seconds)
  done (took 1.60730166 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139036373 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138839074 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139509643 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140099083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.140058195 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141022232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139479886 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.140201023 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.14050529 seconds)
  done (took 1.319846256 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.455882005 seconds)
done (took 41.410861397 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.615924154 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.435895031 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.196412786 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.278354445 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.927903419 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.26444724 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.037722259 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.164655053 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.257853888 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.42912657 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.321346507 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.524783578 seconds)
    (13/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.158021624 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.315880894 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.162376756 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.172729666 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.156710051 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.155904794 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.156780133 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.606953624 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.339712216 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.925712138 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.2198303 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.146925456 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.555300198 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.377331639 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.132222404 seconds)
    (28/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.295094427 seconds)
    (29/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.264935177 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.249971475 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.334602996 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 5.13557985 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.133478162 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.593167461 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.309848647 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.600865049 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.424086017 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.264235387 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.257186234 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.132934341 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.371085692 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.279265803 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.469705734 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.223061174 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.160676994 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.386115999 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.145079463 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.808143557 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.198807168 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.203404508 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.115960338 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.227933059 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.353522524 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.130730945 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.303011528 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.042755603 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.298584376 seconds)
    (58/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.219644227 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.115358928 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.246745506 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.097720374 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.200936982 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.45867134 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.216758855 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.51701758 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.393825546 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.0499435 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.64631798 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.718831737 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.161925873 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.130715877 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.17055001 seconds)
    (73/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.537217393 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.192098995 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.428327251 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.328712388 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.3073591 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.278138739 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.32447819 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 3.825643967 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.118270949 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.259776497 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.038999038 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.475137181 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.302086986 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.618966851 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.490005327 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.134343567 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.515455915 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.254636668 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.235380284 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.254701168 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.879169595 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.157775766 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.465087734 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.118144283 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.203174481 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 3.099881899 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.350775467 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.495309416 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.154563635 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.299148286 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.150457523 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.115875224 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.703126306 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.197290544 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.470305302 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.336935202 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.13167127 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.204861824 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.237862859 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 3.929866842 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.410964254 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.243767581 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.132193131 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.212726997 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.143320972 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.323061555 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.094974869 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.775758809 seconds)
    (121/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.225233346 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.13130158 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.046045737 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.219367971 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.132077497 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.414785795 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.580135023 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.152691996 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.092620631 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.237555696 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.389513453 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.131614459 seconds)
    (133/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152999258 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.40190729 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.700554055 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.365175463 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.230539307 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.462519203 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.396689777 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.430078679 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.429148359 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.485034894 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.235547265 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.818606519 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.53409689 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.513069531 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.371685001 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.940390377 seconds)
    (149/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.289651548 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149317144 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.050096721 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.130104243 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.235793721 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.121109309 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.518280112 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.375540289 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.463493454 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.159992742 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.158551349 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.30590195 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.141684154 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.238655127 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.224829917 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.613610525 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.246033498 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151162763 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.550984895 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.119093959 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.276580295 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.546553587 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.136631538 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.345631677 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.132111493 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.85563712 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.071793519 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.133878243 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.712231728 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.137891451 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.386404613 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.337744457 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.23005953 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.269135037 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.137919201 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.540434498 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.134300946 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.479722904 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.163317453 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.213672338 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.132960085 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.193030048 seconds)
    (191/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.334316135 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.139488434 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.250772857 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.049904195 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.386093938 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.423874961 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.20211593 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.27252685 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.122800617 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.396575841 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.19239557 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.144782673 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.826347161 seconds)
    (204/309) benchmarking ("sort", Float32, false)...
    done (took 3.973799178 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.119312981 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.386595096 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.32944512 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.274486634 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.275578456 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.7161977 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.206988391 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.348085004 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.789216677 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.228935956 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.926926539 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.364306793 seconds)
    (217/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.593607296 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.124720599 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.751141202 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.136568253 seconds)
    (221/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.295544897 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.777025931 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.269078039 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.236810508 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.159920792 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.116852085 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.235809619 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.173666103 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.331741841 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.250201434 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.132036555 seconds)
    (232/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.578266406 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.434604836 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.162762585 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.220115911 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.116469382 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.556139056 seconds)
    (238/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.340829254 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.138192999 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.134545362 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.476974573 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.400298595 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.230089348 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.429478649 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.155849667 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.95303637 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.367211591 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.43418932 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.822060685 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.137154311 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.175190588 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.303116486 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.214114578 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.324467154 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.760549036 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.222317817 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.202513211 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.116427619 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.226413185 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.306290273 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.162898409 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.415927515 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.223133126 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.425918009 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.502123008 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.676926537 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.121552973 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.789393982 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.517344081 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.479236565 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.340116684 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.216983714 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.70948933 seconds)
    (274/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.434041566 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.136351419 seconds)
    (276/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.470024416 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.160220418 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.470236277 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.14657304 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.667804401 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.216450321 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.676092035 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.970050104 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.219157733 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.134310975 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.33318839 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.157969878 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150991998 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.860130976 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.093697908 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.496179716 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.374576997 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.366737524 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.217083527 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.165664019 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.204531693 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.678673056 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.440435561 seconds)
    (299/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.277597485 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.24103034 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.117352968 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.61307821 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.234730486 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.156463058 seconds)
    (305/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.035883794 seconds)
    (306/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.60679337 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.248556812 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.321981034 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.137277813 seconds)
  done (took 468.18558851 seconds)
done (took 468.299070428 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.165594285 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158950346 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.142268829 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.164104017 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.25476368 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.171110179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.15429831 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.144294144 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.190194299 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.192190896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.141914294 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.168852997 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.14471947 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.142575516 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.141663279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157084003 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.452201101 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.171262919 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.160166703 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151627296 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.159061047 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.141788992 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.191704915 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.175316265 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.146443149 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145776169 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.146223732 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.162574528 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.254218397 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.146110277 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.144804205 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.15500552 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.453055575 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.168407553 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.137519927 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.162646013 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.153691836 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.152662997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.146620018 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.174963444 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.543581816 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.179800871 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.144837032 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.143054757 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.143697665 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146114686 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.144281698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.147945237 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156528261 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156735685 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.540492135 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.193999059 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.146347361 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.143157681 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.153580536 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.144271282 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.146374248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159395094 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.163044644 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15905724 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.443405202 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.174832336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.14530386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.16037761 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.150603217 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.576554075 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.174460036 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.147363932 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.543860746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.183791019 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.577979365 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.187854819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.144003439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.158156677 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.174632293 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.453186323 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.165055899 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.142540812 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.150869502 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.14198455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.152563331 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156162164 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.147921301 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.143404126 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.157160014 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.171042485 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.153375766 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.144885238 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.152631244 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.162974577 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.150670777 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.153913959 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.145927048 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.138628598 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.152267272 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.147262001 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.147156231 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.146723985 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.148088786 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1537321 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.540370633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196296519 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.140272067 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.140106369 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.142719644 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.157715259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.540422611 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.179501246 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.165031796 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.190822855 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.145794698 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.442758755 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.174312817 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15951486 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.151953193 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146857039 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.139456109 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.443597157 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.56813889 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194705067 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145127717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.143072796 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159460659 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.145613978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.139943379 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.454223327 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.172745126 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15788824 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.264799617 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.153522894 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.175865582 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.141978243 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.146293226 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.172575364 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159827702 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.174914238 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.146441092 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159145436 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.159746708 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140494165 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.155154573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.154406475 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.144640183 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.149448767 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138094615 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.17268549 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156612604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156256591 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.164261146 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.264802204 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.140914703 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.443899203 seconds)
done (took 29.840009867 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.21530019 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.135268651 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.240729118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140893159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.222032527 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.226116494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137627209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13820746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137793973 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.520573985 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137735344 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13926597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.133637518 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.13838385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.223616622 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141065935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137639183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.481766116 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.142403971 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.213242998 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.13471021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.137893527 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14009968 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.512082723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.138292157 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.135858668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.212585768 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.140109765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.477315433 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.133537441 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.133950802 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.47672061 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.231924258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.158673889 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150508636 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.147363483 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.222958916 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144239931 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.221710891 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.221098912 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.241375187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181809444 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.139636326 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.140968778 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.142664839 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.142981277 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13836418 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.168691861 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.137615827 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137663205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.48510309 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150140068 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.138873676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138147929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.137798152 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.172265744 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.139032509 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.142100977 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.233850689 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142596209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.203259427 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.51215413 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.517972329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140496307 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.138132404 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138277052 seconds)
  done (took 68.431322593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.209121131 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.214960368 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.207553898 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.142973045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.190574875 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.206717972 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.143032371 seconds)
  done (took 1.371925961 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.150007168 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141862664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190568679 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191016262 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141770415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.29112517 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141783609 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.152025287 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137703973 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.19280737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14176055 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141688503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.147242873 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.138259529 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18897326 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.152302201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.256614667 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.141498442 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142090345 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292361516 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138245196 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.147887545 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.19502104 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.151915936 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141748484 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.14739121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.732695365 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142275563 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138493263 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141131988 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137971253 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183414074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141736317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.140496435 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138341381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256354087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141728475 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13861596 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141116662 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.133897177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140525242 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141517881 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1411459 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138033791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.140809033 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164240441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141435803 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.141197968 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140840178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141164179 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.191551919 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141009199 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13870575 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138788526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.195699342 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147635335 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143015251 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138729742 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14124223 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138083052 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292461065 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18910566 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141166817 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189260856 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141776819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141713288 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.141056978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.140711872 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.235676328 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141097718 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18960266 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.138055226 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.300512358 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.165054202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142445235 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.144162274 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143538179 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141972205 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.141780419 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.147140785 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138335477 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.142644346 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147416055 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13969415 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138393202 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.252729271 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.248545921 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138410036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.154414315 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148124007 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138801622 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.193220091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14081328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138334977 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.195647161 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.256984833 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.196198289 seconds)
  done (took 36.428331049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.148305288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.14865693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.142102058 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.158391293 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.141742093 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.141400114 seconds)
  done (took 0.937053833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146035643 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141271727 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.141713052 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.141649158 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.142016961 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.142903518 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.142579222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142252086 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14501587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.141497856 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142142796 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142566704 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143493162 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.142235836 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14296586 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.141546531 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142264662 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138855553 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141362175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142169993 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.291147691 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14206102 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142398728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142061603 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.144991723 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.141566305 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149095198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.141219705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141620864 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.148534086 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145186214 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142731546 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.142254674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.146583985 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14520295 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.14223687 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14422032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.143008114 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138957592 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142703774 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.142673475 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142469802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141733958 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143412058 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142744873 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.145249949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146060536 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149494272 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142555312 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143424242 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142788361 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141619889 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142537226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.143522334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.143851836 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145783951 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146637204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143047128 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.142671644 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.14226308 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141988502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142252414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143631445 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.145964617 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148989255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14332967 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.142698282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145698653 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142770992 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.141778296 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143257842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.139149387 seconds)
  done (took 11.520462728 seconds)
done (took 118.767296539 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.301953743 seconds)
  done (took 5.353936604 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.294974639 seconds)
  done (took 5.40526122 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.592178343 seconds)
  done (took 6.654531654 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.160742266 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.156525437 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.143898384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.141354553 seconds)
  done (took 20.682585305 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.251787536 seconds)
  done (took 5.312849417 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.155348802 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.134460521 seconds)
  done (took 10.395699512 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.261165868 seconds)
  done (took 5.322698726 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.237869848 seconds)
  done (took 5.321384683 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.150170696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.165608197 seconds)
  done (took 10.429709825 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.119621054 seconds)
  done (took 5.180761677 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.719872916 seconds)
  done (took 7.931497916 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.143365072 seconds)
  done (took 5.333405674 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.164218784 seconds)
  done (took 5.225694224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.251344029 seconds)
  done (took 6.312545687 seconds)
done (took 104.920262084 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.15249275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.139381489 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.139735506 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.137830339 seconds)
  done (took 20.623041168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.178533982 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.175415424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.175923559 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.186346644 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.178147935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.174140387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.167046123 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.167152902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186143658 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.17814 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.176921501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.177623903 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.174998381 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.16774855 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.177975361 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.176724272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.186439152 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.175931168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.16737773 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.178136222 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.142483781 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.186616972 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.178072738 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.142480278 seconds)
  done (took 4.234790364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.34149087 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.21164712 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.295069469 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.193322791 seconds)
  done (took 1.101451238 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197054679 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.194788889 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.206903776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.245671501 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.268395893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.204826577 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.167769304 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.162949704 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149523046 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.195256635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.271069917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.189363157 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.28784557 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.141469834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.328983158 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.141824335 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141736103 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.194088744 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.245203868 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.258752283 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142382908 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.193624152 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.197422616 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.189950692 seconds)
  done (took 4.975857343 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.142613965 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148564326 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.146887778 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141271744 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141349373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.141304178 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.147168695 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142118909 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.16206175 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.142804446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.140037806 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.141746041 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.139799008 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.14188534 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.140566554 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.153421337 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.154993826 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.140956127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144316657 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.147031352 seconds)
  done (took 2.961557173 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.136906874 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.250264046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.486273939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.390876371 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.135402414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.13839059 seconds)
  done (took 20.598487471 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.156706454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.145589102 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.141116301 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.19759206 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.279026501 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.148977682 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.14181668 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.151909161 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.185631196 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.207094438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.160418519 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.16665259 seconds)
  done (took 2.141213891 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.135314389 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.138415305 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.138797316 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.154318278 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.152434513 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.148085672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148215498 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.134716255 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.155479994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.158579657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148355437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.152425168 seconds)
  done (took 21.830141888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227544668 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.025675773 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.199242881 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917188926 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633911999 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347236141 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.649402515 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.546795861 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.156923117 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.409760334 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175404399 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.375859474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.390258832 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106192079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.216896694 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.613733394 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.449505387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365473639 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180429215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838475108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25105271 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.477506156 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959223259 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260926996 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347438367 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.26956662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.396596137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.098405547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267438434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174352699 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146304632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.136921117 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.409944431 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.510531431 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262367114 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146431092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789915663 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.874959197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.20500444 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.837496055 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.036539824 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.267155297 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143905243 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136067267 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070636251 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.477317911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.576685469 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.158703929 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.847466823 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.136649403 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14664828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224799322 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139743313 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.956115349 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122573269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437912221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.133776077 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141711639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.707976338 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174421198 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.577239956 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.16138644 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.32821407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888493082 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.596037366 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.291918985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.139672895 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140155359 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070573389 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840659241 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252200057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29642688 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156184254 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772982963 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.444350155 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220836093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215316807 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.42380824 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777817332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.161593854 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364624392 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093899642 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07121742 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.998591839 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070794557 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.402379295 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207079743 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.770068973 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222843616 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.473016574 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164444912 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153932805 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143373944 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.359974862 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.864393277 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136361362 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.89312742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416847296 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158455911 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.474141595 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088850223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140374196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39124316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.347883045 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.199214377 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.701663328 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30897055 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154802824 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.219883869 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.878978761 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234946583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.408834211 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201639677 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176122953 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259149401 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.100314744 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.43585673 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199006432 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.305677937 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.142576896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.396988624 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.462322558 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.466229742 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211247329 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146779596 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136529587 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882242978 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.754593324 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.403154329 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137970264 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.455708841 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235447772 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.138201086 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072102915 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.701090475 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.12514042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.240433821 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.360981982 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.902272376 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.499918606 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070988606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287363409 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.251407339 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.359238504 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.782060859 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.225342833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.393441841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.448152293 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.284716144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235735165 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156136564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226616306 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158697822 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.385582884 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.478934398 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141248379 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141775454 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852177787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.194176108 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137593263 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.140784485 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936719645 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.439874226 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.168310377 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140764215 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.025378674 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.150987968 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20403025 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142061625 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14749186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.659234451 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902937447 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169609053 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.727540631 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361844183 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146688656 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.858020674 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.315678251 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.219315622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.427167702 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203857035 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.071216953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.848351113 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.829852144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137607399 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07226293 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137617119 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145993046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148029435 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515563279 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.413708341 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189347284 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878886995 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.245203884 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148277796 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.142229288 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137652665 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.656696211 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190936776 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572777261 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234560811 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274965677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150766238 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071571299 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141303652 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142042264 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.137811353 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.098635319 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190451233 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898091105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.583389492 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.412016162 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8303821 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177552901 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908342096 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.264514875 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.156416901 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902807835 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034307606 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.220440547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207156438 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147886938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872164593 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905923037 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.705931553 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.455726129 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.456602783 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.586291573 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.459602086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.492094832 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.478173031 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389841826 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667600544 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197193468 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.483174082 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09942733 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22118303 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.793299337 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.500767427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151324961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365872623 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.528817899 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.988643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294295655 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.348773407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173284512 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.868851095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150540757 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.342027665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278064588 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.976652109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.349452525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.471233694 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930510485 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.243090793 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.136426217 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.867835448 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272645855 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.86763729 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499671603 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.46781073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.276093835 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.623873437 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158722908 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582151814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.492089133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.271588984 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.308852325 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090780435 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148390625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148373969 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13708034 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.111457186 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.967976895 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.393445514 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14854762 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373077148 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.215091408 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.485371299 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.126386978 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143563019 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138010506 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.437238743 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783567518 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348388706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.402117137 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.696537214 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143765237 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071426717 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071857991 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.830322724 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145740912 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.112330494 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363614567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.342712659 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08897216 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.470347164 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432573289 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.392116145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151703996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.412758166 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.422717802 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872321644 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191186881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.238143484 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921602344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.254856275 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.406652538 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.373552957 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936216643 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.390062596 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.191173259 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.01752362 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.136690013 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.367058994 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.40728785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.183928016 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.38893934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.871571301 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.151163327 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.515983545 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204787141 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.136386767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.307331312 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331321921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146949246 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222087558 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148476305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149030383 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148589427 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183887165 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.174895617 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275695539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151728686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22566495 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215114295 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.723189377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146906957 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.417471085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.50595714 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.475019991 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204957703 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.137826584 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138664053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07089661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274198896 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583508041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.411010715 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269260433 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.436116902 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161802394 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909091306 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.334253658 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.431981774 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.413039877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.032370878 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085917544 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.230303614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.404751226 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148907701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.348800472 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.37076997 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.477764486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626503578 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.189596762 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.566520997 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.429087079 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507040533 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137706899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730268518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.150881044 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.912792219 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.231191377 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.163896387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.421719117 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148514109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.520957154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189646878 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.336096362 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.654424489 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980051293 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.499063754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.124599325 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220816232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.416343697 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.538887476 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.462213824 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208970447 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149099324 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.850368636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275377438 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.997430068 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.416018294 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138631924 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348894431 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.848955372 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147569671 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.417474362 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.453558314 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.136427892 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.031075903 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166189229 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148028518 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.361194537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.40993073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.425964608 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147764169 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.146175696 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.953346518 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.418257562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205301576 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071765646 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.141657003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239944055 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.39716983 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159563687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.82597558 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.849440375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.43848286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.073697916 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16013148 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.459373165 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.570585111 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.481125111 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.670089704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.372520227 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.714768092 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.894149524 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.492766416 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143168283 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.4593456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.495615812 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.14193322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.562447391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229576315 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.413736562 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.464456558 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.148301556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924810867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.180405918 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362083368 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732936025 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101422497 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138873275 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.196819729 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15553221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268828531 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149847061 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.052357982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911072511 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.938537755 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633838652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143238533 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.132069488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.974213344 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.603706983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225320048 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280435041 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163650019 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.845440982 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.430937953 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.39293067 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.570326867 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.194203902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142013142 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139104811 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065473342 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.334506607 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.517218372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.440815294 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.427398859 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.22938264 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142371412 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.355090999 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350126114 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.170251456 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296198876 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.443068294 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23033875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.907264961 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818247063 seconds)
  done (took 850.48269498 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.148320186 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.144706826 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.150829832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.181956273 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.163078239 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.218212371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.182265778 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.189784514 seconds)
  done (took 41.443156359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.139158112 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.334932475 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152102787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.142746825 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.170594891 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.138206309 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.322706466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.14849215 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.173334281 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.148355285 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.140348221 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.148680671 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.47301292 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.165325322 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.13884699 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.13550147 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.152459462 seconds)
  done (took 43.295788382 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.140923084 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.329909878 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.175957759 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.17412651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.097587953 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.142402237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.065138131 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.180271593 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.14111986 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.353760699 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.478070193 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.181102226 seconds)
  done (took 67.52129488 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150287782 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144793123 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145059217 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.144980485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.145110515 seconds)
  done (took 0.799777831 seconds)
done (took 1082.154618936 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.388964339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.364892315 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.370710929 seconds)
  done (took 0.795292123 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.287496887 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.335270465 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.454725814 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.462177059 seconds)
  done (took 1.62754883 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.436565285 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.530396535 seconds)
  done (took 1.026662956 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.502508942 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.166736815 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.53794847 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.138718098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.13930835 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.139065019 seconds)
  done (took 15.485946201 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.14598408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.145648554 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.142935648 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.145396661 seconds)
  done (took 0.639656998 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.126616304 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.886544395 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.126342031 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.144767988 seconds)
  done (took 12.345604617 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.890604909 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.540965942 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.886139923 seconds)
  done (took 2.381675203 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.590223058 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.118346134 seconds)
  done (took 3.769377439 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.396507047 seconds)
  done (took 0.457414747 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.170864333 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.412890277 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.665301745 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.683303238 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.765442277 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.960684031 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.424804792 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.361224896 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.591756773 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.598999283 seconds)
  done (took 5.707347921 seconds)
done (took 50.891863629 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.4956501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.511266058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.337807856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.464531376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.362688432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.337982391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.353961529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.448871319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.964938603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.961483498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.506696285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361763933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.302973587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.501084097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.30766155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.377077338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.358203789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.511352731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.162711282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.358271966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.357905822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.090678056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.348211848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.105342873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.360429245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.288036671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.684062677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.37951268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.313079319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.693179123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.291525323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.510951472 seconds)
  done (took 113.465565883 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.117133005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.139658892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.140462029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.138802379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.527765789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.140329207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.138968805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139027338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.104400174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.086364081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139722513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.504889649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.139102621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.138415955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.138129677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.139075185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.292098514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.13918679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.139708683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.138592153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.140595329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.346727115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.139590975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.372552604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.268480368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.140832173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.139266038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.140400506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.138816019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.138141664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.140984849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.139499466 seconds)
  done (took 149.893615224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.140410877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.139298953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.141067539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.140046206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.140441186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.141975369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.140256598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139085714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.727021561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.723858702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139487325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.140223314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.146693584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.138506629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.153323161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.139262137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.156292236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.156995828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.160965232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.165317382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.170955516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.080771843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.176117206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.119622249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.173609517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.155049578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.154000667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.174207939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.174053021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.175016863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.179777995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.139322577 seconds)
  done (took 164.00974646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.345060695 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.146388003 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.147321376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.08704259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.147227698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.147172101 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.083817296 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.344821468 seconds)
  done (took 3.557487344 seconds)
done (took 430.991775718 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.620955572 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.463155546 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.324024557 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.170726368 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.398838555 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.208703895 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.167381411 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.226927296 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.895758552 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.245908503 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.84413935 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181985984 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.939239357 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.186998975 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.2924997 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.219243751 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.706119872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.799150109 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.339681935 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.227035922 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.34767891 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.127205606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.239103879 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.924192811 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.961767723 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.166920282 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.325796818 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.716826853 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.174566021 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.32749631 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.93226301 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.553437306 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.180096331 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161046886 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.217279852 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.204993318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.503980395 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.17834204 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.289383237 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.929452082 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.222386817 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.79355275 seconds)
  done (took 28.991712325 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.136457767 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.134550533 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.13275731 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.13359851 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.140897186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.134076858 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.133412327 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.132516612 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.133739412 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.133150921 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.132718722 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.133987423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.133014468 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.133891211 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.132912415 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.133083576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.13396817 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.135825282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.133312188 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.132649516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.134169119 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.133012493 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.148930814 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.132739486 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.133803833 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.13455406 seconds)
  done (took 3.579695991 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.148605778 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.29191335 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.396625381 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164167025 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146567146 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.149561833 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.164947021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151052116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.149368155 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.149012781 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.23876374 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152035179 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167277007 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.399752138 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.162262394 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14738255 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147048728 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146895496 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.29889644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.161837894 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166988892 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.151007708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.165534956 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.159586261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.149785627 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.57944299 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150882371 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.613400442 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.153841517 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238867377 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188523261 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.167544725 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.568678998 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.408262094 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.198267882 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154191138 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14755754 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.241190424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152564742 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146947511 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.165041763 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150809512 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.397308366 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.634641835 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.159365345 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.147983392 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.621833217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.249409702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.187136637 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157608496 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.404258904 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.161473394 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148664284 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.148988588 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.184399427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155809566 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146706087 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.469386504 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.156747148 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.164814715 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151455326 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.148484262 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.303666032 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.154574532 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.290590082 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.155317067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.154542235 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148718314 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.399635387 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.163274656 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.641936601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.159248228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.147502476 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.24080271 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.294743225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.651464916 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.159391595 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.305047563 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.585326269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.170049143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153349066 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.601488582 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.173308509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.153618734 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149583734 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.150150268 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.148095418 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.191559218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.163013538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.565791083 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.642270118 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.48243889 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.171395407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161671081 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148106698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.469693547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154318425 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.147525684 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.392611583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.646012905 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.159447337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.155913837 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.625567817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.161052489 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.166179474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155358484 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.403223612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.161478356 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.191297536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.147694073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.154067215 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151459468 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.166265379 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.153283127 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148180009 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.614663532 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.254599604 seconds)
  done (took 29.180024798 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.142502457 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.141896955 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.139914328 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.142796549 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.140918174 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146697166 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.149273311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.141647125 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.146195421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.140347894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.141303131 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.140357764 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.141438433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.143993716 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.271673191 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148544746 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.753214035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.141931188 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.139989324 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.154358424 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.788368636 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.145514116 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.140463985 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.153786969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.148056246 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.142520792 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.141003188 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.261809465 seconds)
  done (took 117.599587153 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.148777646 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260625994 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.162297081 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.174782402 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153796021 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.145436863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.170064909 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.160401747 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15036812 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14554875 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145593079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.205289437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.156391763 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.245674748 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.176287355 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.174678631 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.25312321 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.153129711 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.145400848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.146537622 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.175088788 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.139548537 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.205019329 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.268323103 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.160518646 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.261456771 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.147694323 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14847887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.147046595 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.26176741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.157769491 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.204625842 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.17228676 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.163369834 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.26294573 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.261369276 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.250212439 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.175394517 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.149408464 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.145980716 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.145642122 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.134364013 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.261333108 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.161054534 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148031694 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.251707885 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.161046891 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.148854599 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156634743 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.145373781 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.159990013 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.162466258 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.20929382 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.273559395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.174990819 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.171563908 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.171427241 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.425666013 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.16470337 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.248847707 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.138499893 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.261111024 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.162457742 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13489999 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.146892589 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152221927 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.174420279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.175032622 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.251037521 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153171923 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.249634981 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.179393334 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.150984146 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.146046748 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148929117 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.261214801 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.259581254 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.179076319 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.180437244 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.175037492 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.139492006 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147253947 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.134860035 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.16463189 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.149431183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.261380997 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.262104235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153646362 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148376392 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149030357 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.148645175 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.17160109 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.267270555 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.176662457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.241285183 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.21111845 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.215489053 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157694315 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.15915057 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.14846173 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.208101504 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.158244995 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.15759227 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.470130727 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.222883529 seconds)
  done (took 19.783237326 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.604774205 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.230110348 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.201973228 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.473333979 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.56203005 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.996567027 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.196725014 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.193674997 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.216960543 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.377584911 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.26506893 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.216032413 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.17912837 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.167259342 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.194090669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.215577433 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204196439 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.504716822 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.312604733 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.292721229 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.199902699 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.482277627 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.517074728 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.624011263 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.229606865 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.537854008 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.879690157 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.362472534 seconds)
  done (took 11.508947987 seconds)
done (took 210.70757661 seconds)
SAVING RESULT...
DONE!
